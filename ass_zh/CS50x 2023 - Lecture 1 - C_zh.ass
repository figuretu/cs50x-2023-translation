[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: ../video/CS50x 2023 - Lecture 1 - C.mp4
Video File: ../video/CS50x 2023 - Lecture 1 - C.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.375000
Scroll Position: 4072
Active Line: 4073
Video Position: 193922

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: chinese,思源黑体 CN Medium,60,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,1,2,10,10,10,1
Style: english,Arial,35,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,1,2,10,10,15,1
Style: Default,Arial,10,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,1
Style: annotation,思源黑体 CN Medium,50,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,1,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:02.98,english,,0,0,0,,[REEL-TO-REEL PLAYER STARTING]
Dialogue: 0,0:00:02.98,0:00:05.97,english,,0,0,0,,[MUSIC PLAYING]
Dialogue: 0,0:01:13.35,0:01:16.09,english,,0,0,0,,DAVID J. MALAN: All right, this is CS50.
Dialogue: 0,0:01:13.35,0:01:16.09,chinese,,0,0,0,,好的，这里是 CS50。
Dialogue: 0,0:01:16.09,0:01:25.06,english,,0,0,0,,And this is week 1, wherein we continue programming, but we do it in a different language because recall last time, we focused on this graphical language called Scratch.
Dialogue: 0,0:01:16.09,0:01:25.06,chinese,,0,0,0,,现在是第一周，我们继续编程，但使用的是另一种语言，\N还记得上次，我们主要学习了一种名为 Scratch 的图形化编程语言。
Dialogue: 0,0:01:25.06,0:01:31.75,english,,0,0,0,,But we use Scratch, not only because it's sort of fun and accessible, but because it allows us to explore a lot of these concepts here,
Dialogue: 0,0:01:25.06,0:01:31.75,chinese,,0,0,0,,我们使用 Scratch，不仅是因为它好玩、易学，主要是它能帮助我们探索很多计算机概念，
Dialogue: 0,0:01:31.75,0:01:36.41,english,,0,0,0,,namely functions, and conditionals, Boolean expressions, loops, variables, and more.
Dialogue: 0,0:01:31.75,0:01:36.41,chinese,,0,0,0,,比如函数、条件语句、布尔表达式、循环、变量等等。
Dialogue: 0,0:01:36.41,0:01:44.98,english,,0,0,0,,And so, indeed, even if today's syntax, as we transition to this new language called C, feels a little bit cryptic, maybe a little intimidating at first,
Dialogue: 0,0:01:36.41,0:01:44.98,chinese,,0,0,0,,今天我们将过渡到 C 语言这门全新语言，\N也许它的语法有点令人费解，也许一开始会有点吓人，
Dialogue: 0,0:01:44.98,0:01:52.67,english,,0,0,0,,and you don't quite see all of the meaning of the symbols beyond the syntax itself, realize that the ideas are ultimately going to be the same.
Dialogue: 0,0:01:44.98,0:01:52.67,chinese,,0,0,0,,也许你不太明白，这些符号似乎只是强加的语法规定，\N但你要坚信，这些语言归根结底是同一种思维模型。
Dialogue: 0,0:01:52.67,0:02:02.35,english,,0,0,0,,In fact, as we transition from what was last week-- a Hello World program that looked a little something like this-- this week, of course, it's going to now look a little more cryptic.
Dialogue: 0,0:01:52.67,0:02:02.35,chinese,,0,0,0,,我们从上周的 "Hello World" 程序过渡到本周的 "Hello World" 程序，\N差不多是这个样子的，看起来会更神秘一些。
Dialogue: 0,0:02:02.35,0:02:04.35,english,,0,0,0,,It's going to look a little something like this.
Dialogue: 0,0:02:02.35,0:02:04.35,chinese,,0,0,0,,它长这样。
Dialogue: 0,0:02:04.35,0:02:11.57,english,,0,0,0,,And now even if you can't quite distinguish what all of the various symbols mean in this code, it turns out that at the end of the day, it's indeed going to do what you expect.
Dialogue: 0,0:02:04.35,0:02:11.57,chinese,,0,0,0,,你现在还弄不清楚这些代码里，各种符号是什么意思，\N但实实在在的，这些代码最终会实现期望的效果。
Dialogue: 0,0:02:11.57,0:02:15.37,english,,0,0,0,,It's just going to say, hello, world on the screen, just like we did in Scratch.
Dialogue: 0,0:02:11.57,0:02:15.37,chinese,,0,0,0,,就像我们在 Scratch 中做的那样，它只会在屏幕上显示 "hello, world"。
Dialogue: 0,0:02:15.37,0:02:19.61,english,,0,0,0,,So let's start to apply some terminology to these tokens first.
Dialogue: 0,0:02:15.37,0:02:19.61,chinese,,0,0,0,,现在呢，让我先介绍一些术语来解释这些代码。
Dialogue: 0,0:02:19.61,0:02:24.04,english,,0,0,0,,So what we're about to see, what we're about to write henceforth, we're going to start calling source code.
Dialogue: 0,0:02:19.61,0:02:24.04,chinese,,0,0,0,,正如你看到的，我们今后要亲自编写的，我们称之为源代码。
Dialogue: 0,0:02:24.04,0:02:27.90,english,,0,0,0,,Code that you the human programmer write is just henceforth called source code.
Dialogue: 0,0:02:24.04,0:02:27.90,chinese,,0,0,0,,人类程序员编写的代码，被称为源代码。
Dialogue: 0,0:02:27.90,0:02:29.20,english,,0,0,0,,Doesn't matter if it's Scratch.
Dialogue: 0,0:02:27.90,0:02:29.20,chinese,,0,0,0,,是否是 Scratch 并不重要。
Dialogue: 0,0:02:29.20,0:02:32.37,english,,0,0,0,,Doesn't matter if it's C. Doesn't matter if it's Python before long.
Dialogue: 0,0:02:29.20,0:02:32.37,chinese,,0,0,0,,C 语言编写的算，Python 编写的也算。
Dialogue: 0,0:02:32.37,0:02:37.33,english,,0,0,0,,Source code is the general term for really what you and I as human programmers will ultimately write.
Dialogue: 0,0:02:32.37,0:02:37.33,chinese,,0,0,0,,源代码是咱们作为人类程序员，最终要编写的内容的总称。
Dialogue: 0,0:02:37.33,0:02:42.19,english,,0,0,0,,Of course, computers don't understand source code, it turns out.
Dialogue: 0,0:02:37.33,0:02:42.19,chinese,,0,0,0,,当然，实际上计算机并不理解源代码。
Dialogue: 0,0:02:42.19,0:02:47.20,english,,0,0,0,,Computers don't understand Scratch and Puzzle Pieces, per se, or C code like we're about to see.
Dialogue: 0,0:02:42.19,0:02:47.20,chinese,,0,0,0,,计算机本身并不理解 Scratch 和拼图，也不理解我们即将看到的 C 语言代码。
Dialogue: 0,0:02:47.20,0:02:49.87,english,,0,0,0,,They only understand this, which we called what last week?
Dialogue: 0,0:02:47.20,0:02:49.87,chinese,,0,0,0,,他们只懂这个，我们上周怎么叫的？
Dialogue: 0,0:02:49.87,0:02:50.65,english,,0,0,0,,AUDIENCE: Zeros and ones.
Dialogue: 0,0:02:49.87,0:02:50.65,chinese,,0,0,0,,0 和 1。
Dialogue: 0,0:02:50.65,0:02:51.52,english,,0,0,0,,DAVID J. MALAN: Yeah.
Dialogue: 0,0:02:50.65,0:02:51.52,chinese,,0,0,0,,对的。
Dialogue: 0,0:02:51.52,0:02:53.08,english,,0,0,0,,So this is binary, zeros and ones.
Dialogue: 0,0:02:51.52,0:02:53.08,chinese,,0,0,0,,这是二进制，0 和 1。
Dialogue: 0,0:02:53.08,0:02:56.47,english,,0,0,0,,But really, it's just information represented in binary.
Dialogue: 0,0:02:53.08,0:02:56.47,chinese,,0,0,0,,但实际上，它是用二进制表示的信息。
Dialogue: 0,0:02:56.47,0:03:04.81,english,,0,0,0,,And in fact, the technical term now for patterns of zeros and ones that a computer not only understands how to interpret as letters, or numbers,
Dialogue: 0,0:02:56.47,0:03:04.81,chinese,,0,0,0,,用专业术语说，这是 "0 和 1 的模式"，\N计算机不仅能将其解释为字母、数字、颜色、图像等，
Dialogue: 0,0:03:04.81,0:03:12.88,english,,0,0,0,,or colors, or images, or more, but knows how to execute as well henceforth is going to be called machine code to contrast it with source code.
Dialogue: 0,0:03:04.81,0:03:12.88,chinese,,0,0,0,,它还能够执行，因此从现在开始，这种模式将被称为机器码，以与源代码形成对比。
Dialogue: 0,0:03:12.88,0:03:18.86,english,,0,0,0,,So whereas you and I, the humans, write source code, it's the computer that ultimately only understands machine code.
Dialogue: 0,0:03:12.88,0:03:18.86,chinese,,0,0,0,,所以，虽然我们这些人类编写源代码，但计算机最终只能理解机器码。
Dialogue: 0,0:03:18.86,0:03:28.60,english,,0,0,0,,And even though we won't get into the details of exactly what pattern of symbols means what, you'll see that in this kind of pattern of zeros and ones, there's going to be numbers.
Dialogue: 0,0:03:18.86,0:03:28.60,chinese,,0,0,0,,虽然我们不会详细讨论哪种符号模式代表什么，但你会看到在这种零和一的模式中，会有数字，
Dialogue: 0,0:03:28.60,0:03:29.53,english,,0,0,0,,There's going to be letters.
Dialogue: 0,0:03:28.60,0:03:29.53,chinese,,0,0,0,,会有字母，
Dialogue: 0,0:03:29.53,0:03:36.43,english,,0,0,0,,But there's also going to be instructions because, indeed, computers are really good at doing things-- addition, subtraction, moving things in and out of memory.
Dialogue: 0,0:03:29.53,0:03:36.43,chinese,,0,0,0,,还有指令，因为计算机擅长执行各种操作，如加法、减法、内存读写等。
Dialogue: 0,0:03:36.43,0:03:44.74,english,,0,0,0,,And suffice it to say that the Macs, the PCs, the other computers of the world have just decided as a society what certain patterns of zeros and ones
Dialogue: 0,0:03:36.43,0:03:44.74,chinese,,0,0,0,,可以这么说，Mac、PC 等各种计算机都已经约定了特定的 0 和 1 模式作为共识，
Dialogue: 0,0:03:44.74,0:03:49.20,english,,0,0,0,,mean when it comes to operations as well-- so not just data, but instructions.
Dialogue: 0,0:03:44.74,0:03:49.20,chinese,,0,0,0,,以表示各种操作，而不仅仅是数据。
Dialogue: 0,0:03:49.20,0:03:52.57,english,,0,0,0,,But those patterns are not something we're going to focus on in a class like this.
Dialogue: 0,0:03:49.20,0:03:52.57,chinese,,0,0,0,,不过，在本课程中，我们不会重点关注这些模式。
Dialogue: 0,0:03:52.57,0:03:58.91,english,,0,0,0,,We're going to focus on the higher level software side of things, simply assuming that we need to somehow output machine code.
Dialogue: 0,0:03:52.57,0:03:58.91,chinese,,0,0,0,,我们将专注于更高级别的软件方面，只是假设我们需要以某种方式输出机器码。
Dialogue: 0,0:03:58.91,0:04:07.12,english,,0,0,0,,So it turns out, then, that this problem we have to solve getting from source code to machine code actually fits into the same paradigm as last time.
Dialogue: 0,0:03:58.91,0:04:07.12,chinese,,0,0,0,,因此，我们需要解决的从源代码到机器码的问题，实际与上一次课的例子是一样的。
Dialogue: 0,0:04:07.12,0:04:11.23,english,,0,0,0,,But the input in this case is going to be source code on the one hand.
Dialogue: 0,0:04:07.12,0:04:11.23,chinese,,0,0,0,,所以说，我们只需要编写源代码作为计算机的输入。
Dialogue: 0,0:04:11.23,0:04:15.43,english,,0,0,0,,That's what you and I ideally will write so that we don't have to write zeros and ones.
Dialogue: 0,0:04:11.23,0:04:15.43,chinese,,0,0,0,,这是理想情况下我们编写的，以免直接敲 0 和 1。
Dialogue: 0,0:04:15.43,0:04:21.73,english,,0,0,0,,But we need to somehow output machine code because that's what your Macs, PCs, phones are actually going to understand.
Dialogue: 0,0:04:15.43,0:04:21.73,chinese,,0,0,0,,但我们需要以某种方式输出机器码，因为这才是你的 Mac、PC 和手机实际上能够理解的东西。
Dialogue: 0,0:04:21.73,0:04:28.69,english,,0,0,0,,Well, it turns out there are special programs in life whose purpose is to do exactly this conversion-- convert the source code you
Dialogue: 0,0:04:21.73,0:04:28.69,chinese,,0,0,0,,实际上，有一种特殊的程序，其目的就是进行这种转换，
Dialogue: 0,0:04:28.69,0:04:32.32,english,,0,0,0,,and I write to the machine code that our phones and computers understand.
Dialogue: 0,0:04:28.69,0:04:32.32,chinese,,0,0,0,,将我们编写的源代码转换为手机和计算机能够理解的机器码。
Dialogue: 0,0:04:32.32,0:04:36.05,english,,0,0,0,,And that type of program is going to be called a compiler.
Dialogue: 0,0:04:32.32,0:04:36.05,chinese,,0,0,0,,这种类型的程序被叫做编译器。
Dialogue: 0,0:04:36.05,0:04:39.40,english,,0,0,0,,So indeed today, we'll introduce you to another piece of software.
Dialogue: 0,0:04:36.05,0:04:39.40,chinese,,0,0,0,,今天呢，我们将向你介绍另一种软件。
Dialogue: 0,0:04:39.40,0:04:40.81,english,,0,0,0,,And these come in many forms.
Dialogue: 0,0:04:39.40,0:04:40.81,chinese,,0,0,0,,这些软件有很多形式。
Dialogue: 0,0:04:40.81,0:04:48.80,english,,0,0,0,,We'll use a popular one here that allows you to convert source code in C to machine code in zeros and ones.
Dialogue: 0,0:04:40.81,0:04:48.80,chinese,,0,0,0,,我们将在这里使用一个常见的工具，它可以将 C 语言的源代码转换为机器码里的 0 和 1。
Dialogue: 0,0:04:48.80,0:04:50.68,english,,0,0,0,,Now, you didn't have to do this with Scratch.
Dialogue: 0,0:04:48.80,0:04:50.68,chinese,,0,0,0,,在Scratch的世界里，你不需要这样做。
Dialogue: 0,0:04:50.68,0:04:57.28,english,,0,0,0,,In the world of Scratch, it was as simple as clicking the green flag because essentially MIT did all of the heavy lifting there figuring out
Dialogue: 0,0:04:50.68,0:04:57.28,chinese,,0,0,0,,只需要点击绿色的旗帜，因为基本上 MIT 已经完成了所有的重活，
Dialogue: 0,0:04:57.28,0:05:00.76,english,,0,0,0,,how to convert these graphical puzzle pieces to the underlying machine code.
Dialogue: 0,0:04:57.28,0:05:00.76,chinese,,0,0,0,,他们会想办法把这些图形化的拼图，转换为底层的机器码。
Dialogue: 0,0:05:00.76,0:05:06.55,english,,0,0,0,,But now starting today, as we begin to study programming and computer science proper, now that power moves to you.
Dialogue: 0,0:05:00.76,0:05:06.55,chinese,,0,0,0,,但是从今天开始，随着我们开始学习编程和计算机科学，这种权力就转移到了你们手中。
Dialogue: 0,0:05:06.55,0:05:09.34,english,,0,0,0,,And it's up to you now to do that kind of conversion.
Dialogue: 0,0:05:06.55,0:05:09.34,chinese,,0,0,0,,现在你们要做这种转换了。
Dialogue: 0,0:05:09.34,0:05:19.97,english,,0,0,0,,But thankfully, the fact that these compilers exist means that you and I don't have to program in machine code like our ancestors once upon a time did, be it virtually or with physical punch cards,
Dialogue: 0,0:05:09.34,0:05:19.97,chinese,,0,0,0,,但幸运的是，我们有这些编译器。\N所以不必像我们的祖先一样在虚拟的或者是实际的卡片上，编写机器码，
Dialogue: 0,0:05:19.97,0:05:21.64,english,,0,0,0,,like pieces of paper with holes in them.
Dialogue: 0,0:05:19.97,0:05:21.64,chinese,,0,0,0,,在卡片上面打孔。
Dialogue: 0,0:05:21.64,0:05:25.81,english,,0,0,0,,You and I get to focus on our keyboard, as such.
Dialogue: 0,0:05:21.64,0:05:25.81,chinese,,0,0,0,,我们可以专注于键盘上的工作。
Dialogue: 0,0:05:25.81,0:05:29.37,english,,0,0,0,,But it's not just going to be a matter today of writing code.
Dialogue: 0,0:05:25.81,0:05:29.37,chinese,,0,0,0,,但今天的问题不仅仅是编写代码，
Dialogue: 0,0:05:29.37,0:05:32.93,english,,0,0,0,,It's going to be a matter ultimately today onward of writing good code as well.
Dialogue: 0,0:05:29.37,0:05:32.93,chinese,,0,0,0,,今后更重要的是编写优秀的代码。
Dialogue: 0,0:05:32.93,0:05:35.18,english,,0,0,0,,And this is the kind of thing that you don't just learn overnight.
Dialogue: 0,0:05:32.93,0:05:35.18,chinese,,0,0,0,,而这并不是一蹴而就的事情。
Dialogue: 0,0:05:35.18,0:05:35.87,english,,0,0,0,,It takes time.
Dialogue: 0,0:05:35.18,0:05:35.87,chinese,,0,0,0,,需要花时间。
Dialogue: 0,0:05:35.87,0:05:36.62,english,,0,0,0,,It takes practice.
Dialogue: 0,0:05:35.87,0:05:36.62,chinese,,0,0,0,,需要去练习。
Dialogue: 0,0:05:36.62,0:05:41.05,english,,0,0,0,,Just like writing an essay in any subject might take time, and practice, and iteration over time.
Dialogue: 0,0:05:36.62,0:05:41.05,chinese,,0,0,0,,就像写任何学科的文章都需要时间、练习和反复推敲。
Dialogue: 0,0:05:41.05,0:05:49.36,english,,0,0,0,,But in a programming class like CS50, we're going to aspire to evaluate the quality of code along these three axes, generally.
Dialogue: 0,0:05:41.05,0:05:49.36,chinese,,0,0,0,,在 CS50 这样的编程课中，我们将努力从以下三个方面评估代码的质量。
Dialogue: 0,0:05:49.36,0:05:51.04,english,,0,0,0,,Is it correct, first and foremost?
Dialogue: 0,0:05:49.36,0:05:51.04,chinese,,0,0,0,,首先，它是否正确？
Dialogue: 0,0:05:51.04,0:05:52.81,english,,0,0,0,,Does the code do what it's supposed to do?
Dialogue: 0,0:05:51.04,0:05:52.81,chinese,,0,0,0,,代码是否达到了它应该做到的目标？
Dialogue: 0,0:05:52.81,0:05:55.83,english,,0,0,0,,After all, if it doesn't, well, what was the point of writing it in the first place?
Dialogue: 0,0:05:52.81,0:05:55.83,chinese,,0,0,0,,毕竟，如果不是这样，那么一开始写代码的目的是什么呢？
Dialogue: 0,0:05:55.83,0:05:59.35,english,,0,0,0,,So it goes without saying that you want code you write to be correct.
Dialogue: 0,0:05:55.83,0:05:59.35,chinese,,0,0,0,,因此，毋庸置疑，你希望你编写的代码是正确的。
Dialogue: 0,0:05:59.35,0:06:00.82,english,,0,0,0,,And it's obviously not always.
Dialogue: 0,0:05:59.35,0:06:00.82,chinese,,0,0,0,,但显然并非总是如此。
Dialogue: 0,0:06:00.82,0:06:07.03,english,,0,0,0,,Again, anytime your Mac, or PC, or phone has crashed, some human somewhere wrote buggy-- that is code with mistakes.
Dialogue: 0,0:06:00.82,0:06:07.03,chinese,,0,0,0,,再次说明，无论何时你的Mac、PC或手机崩溃，都是某个地方的人写了有错误的代码。
Dialogue: 0,0:06:07.03,0:06:10.06,english,,0,0,0,,But code correctness is going to be the first and foremost goal.
Dialogue: 0,0:06:07.03,0:06:10.06,chinese,,0,0,0,,代码的正确性将是首要目标。
Dialogue: 0,0:06:10.06,0:06:13.93,english,,0,0,0,,But then there's a more subjective goal see in time, a matter of design.
Dialogue: 0,0:06:10.06,0:06:13.93,chinese,,0,0,0,,然后还有一个更主观的目标之前提到过，就是设计的问题。
Dialogue: 0,0:06:13.93,0:06:24.17,english,,0,0,0,,And we saw a little bit of this last week when I proposed that we could design even scratch programs better, maybe by using loops instead of just by copying and pasting the same blocks again and again.
Dialogue: 0,0:06:13.93,0:06:24.17,chinese,,0,0,0,,上周我们已经看到了一些这方面的内容，我提议可以用循环来设计更好的 Scratch 程序，\N而不仅仅是一遍又一遍地复制和粘贴相同的代码块。
Dialogue: 0,0:06:24.17,0:06:26.08,english,,0,0,0,,So design is more subjective.
Dialogue: 0,0:06:24.17,0:06:26.08,chinese,,0,0,0,,设计更加主观，
Dialogue: 0,0:06:26.08,0:06:32.88,english,,0,0,0,,It's more of a learned art whereby two people might ultimately disagree as to which version of a program is better designed.
Dialogue: 0,0:06:26.08,0:06:32.88,chinese,,0,0,0,,更像是一门学问，两个人可能对于哪个版本的程序设计得更好存在分歧。
Dialogue: 0,0:06:32.88,0:06:40.09,english,,0,0,0,,But we'll give you building blocks and principles over the coming weeks so that you can have a better sense for yourself if your own code is well designed.
Dialogue: 0,0:06:32.88,0:06:40.09,chinese,,0,0,0,,在未来几周里，我们将向你介绍写代码时的分块和原则，\N以便你可以更好地判断自己的代码是否设计良好。
Dialogue: 0,0:06:40.09,0:06:41.53,english,,0,0,0,,And why is that valuable?
Dialogue: 0,0:06:40.09,0:06:41.53,chinese,,0,0,0,,为什么这很有价值呢？
Dialogue: 0,0:06:41.53,0:06:49.43,english,,0,0,0,,Well, the better designed your code is, often the faster it's going to run, the more maintainable it's going to be by you or colleagues if you're working with others in the real world.
Dialogue: 0,0:06:41.53,0:06:49.43,chinese,,0,0,0,,良好设计的代码通常会运行得更快，更易于维护，无论是你自己还是与同事合作。
Dialogue: 0,0:06:49.43,0:06:50.90,english,,0,0,0,,So good design is a good thing.
Dialogue: 0,0:06:49.43,0:06:50.90,chinese,,0,0,0,,因此，良好的设计是一件好事。
Dialogue: 0,0:06:50.90,0:06:54.49,english,,0,0,0,,It helps you communicate your ideas, just like in a typical English essay.
Dialogue: 0,0:06:50.90,0:06:54.49,chinese,,0,0,0,,它帮助你传达你的想法，就像在一篇典型的英语文章中一样。
Dialogue: 0,0:06:54.49,0:06:57.52,english,,0,0,0,,And then lastly, we'll talk this week onward about style.
Dialogue: 0,0:06:54.49,0:06:57.52,chinese,,0,0,0,,最后，从本周开始，我们将讨论代码风格。
Dialogue: 0,0:06:57.52,0:06:59.69,english,,0,0,0,,And this is really just the aesthetics of your code.
Dialogue: 0,0:06:57.52,0:06:59.69,chinese,,0,0,0,,这其实只是代码的美学问题。
Dialogue: 0,0:06:59.69,0:07:10.75,english,,0,0,0,,It turns out that computers often don't care how sloppy your actual code is, where in the world of code, it turns out that you don't really need to indent things in a beautiful way.
Dialogue: 0,0:06:59.69,0:07:10.75,chinese,,0,0,0,,事实证明，计算机通常不关心你的实际代码有多么混乱，\N在代码世界中，你不需要以漂亮的方式缩进。
Dialogue: 0,0:07:10.75,0:07:13.15,english,,0,0,0,,You don't need to paginate things like might in an essay.
Dialogue: 0,0:07:10.75,0:07:13.15,chinese,,0,0,0,,你不需要像在一篇文章中那样进行分页。
Dialogue: 0,0:07:13.15,0:07:16.39,english,,0,0,0,,The computer generally does not care, but the human does.
Dialogue: 0,0:07:13.15,0:07:16.39,chinese,,0,0,0,,计算机通常不关心，但人类在意。
Dialogue: 0,0:07:16.39,0:07:17.81,english,,0,0,0,,The teaching assistant does.
Dialogue: 0,0:07:16.39,0:07:17.81,chinese,,0,0,0,,助教会在意。
Dialogue: 0,0:07:17.81,0:07:21.56,english,,0,0,0,,You will care the next day when you're just trying to understand what your code does.
Dialogue: 0,0:07:17.81,0:07:21.56,chinese,,0,0,0,,第二天当你试图理解你的代码在做什么时，你会在意。
Dialogue: 0,0:07:21.56,0:07:25.52,english,,0,0,0,,So we'll focus lastly on style, the aesthetics of the code that you're writing.
Dialogue: 0,0:07:21.56,0:07:25.52,chinese,,0,0,0,,因此，我们最后会关注代码风格，你所写的代码的美学。
Dialogue: 0,0:07:25.52,0:07:27.28,english,,0,0,0,,So where are we going to write code?
Dialogue: 0,0:07:25.52,0:07:27.28,chinese,,0,0,0,,那么我们要在哪里编写代码？
Dialogue: 0,0:07:27.28,0:07:28.94,english,,0,0,0,,Where are we going to compile code?
Dialogue: 0,0:07:27.28,0:07:28.94,chinese,,0,0,0,,我们要在哪里编译代码？
Dialogue: 0,0:07:28.94,0:07:39.28,english,,0,0,0,,So for this class, not only with C, but the other languages we use later in the term, we're going to use a free text editor that is program called Visual Studio Code, AKA VS Code.
Dialogue: 0,0:07:28.94,0:07:39.28,chinese,,0,0,0,,所以在这门课上，不仅仅是在 C 语言中，我们在学期后期使用的其他语言中，\N都会用到 Visual Studio Code 这个免费的文本编辑器，也可以叫它 VS Code。
Dialogue: 0,0:07:39.28,0:07:45.97,english,,0,0,0,,It's super popular nowadays, not just for C, but for C++, and Python, and Java, and any number of other languages.
Dialogue: 0,0:07:39.28,0:07:45.97,chinese,,0,0,0,,它现在非常流行，不仅适用于 C 语言，还适用于 C++、Python、Java 和许多其他编程语言。
Dialogue: 0,0:07:45.97,0:07:49.27,english,,0,0,0,,It's a text editor in the sense that it lets you edit text.
Dialogue: 0,0:07:45.97,0:07:49.27,chinese,,0,0,0,,它是一个文本编辑器，可以编辑文本。
Dialogue: 0,0:07:49.27,0:07:52.15,english,,0,0,0,,And that's all code is going to be.
Dialogue: 0,0:07:49.27,0:07:52.15,chinese,,0,0,0,,而所有的代码都是文本。
Dialogue: 0,0:07:52.15,0:07:54.90,english,,0,0,0,,Now, strictly speaking, you could write code on paper/pencil.
Dialogue: 0,0:07:52.15,0:07:54.90,chinese,,0,0,0,,严格来说，你甚至可以用纸笔来编写代码。
Dialogue: 0,0:07:54.90,0:07:59.53,english,,0,0,0,,In fact, in high school if you took a class, you might have done that one or more times as an in-class exercise.
Dialogue: 0,0:07:54.90,0:07:59.53,chinese,,0,0,0,,高中时如果选修了一门编程课，你可能已经在课堂练习中用纸笔写过代码。
Dialogue: 0,0:07:59.53,0:08:02.53,english,,0,0,0,,You can't run it on paper, of course, but you could write it, certainly.
Dialogue: 0,0:07:59.53,0:08:02.53,chinese,,0,0,0,,当然，你不能在纸上运行代码，但你肯定可以写下来。
Dialogue: 0,0:08:02.53,0:08:07.24,english,,0,0,0,,You could use something like Microsoft Word, or Notepad.exe, or Text Edit on the Mac.
Dialogue: 0,0:08:02.53,0:08:07.24,chinese,,0,0,0,,你也可以使用诸如 Microsoft Word、Notepad.exe 或 Mac 上的 Text Edit 等工具。
Dialogue: 0,0:08:07.24,0:08:15.25,english,,0,0,0,,But none of those programs are really designed to format the code in the best way for you, nor are they designed to let you compile and run the code.
Dialogue: 0,0:08:07.24,0:08:15.25,chinese,,0,0,0,,但是，这些程序都不能真正为你展示出最合适的代码格式，也不能让你编译和运行代码。
Dialogue: 0,0:08:15.25,0:08:22.24,english,,0,0,0,,So VS Code is going to be a tool via which you can do all that and more-- write the code, compile the code, run the code.
Dialogue: 0,0:08:15.25,0:08:22.24,chinese,,0,0,0,,VS Code 是一个工具，通过它你可以做所有这些以及更多的事情：编写代码、编译代码、运行代码。
Dialogue: 0,0:08:22.24,0:08:29.11,english,,0,0,0,,So that you all don't have to wrestle with stupid technical support headaches at the beginning of the course by installing this software and that
Dialogue: 0,0:08:22.24,0:08:29.11,chinese,,0,0,0,,现在课程刚刚开始，为了你们不必在 Mac 或 PC 上安装这个那个软件的时候遇到技术问题，
Dialogue: 0,0:08:29.11,0:08:34.78,english,,0,0,0,,on your Macs or PCs, we'll use a cloud-based version of VS Code at code.cs50.io.
Dialogue: 0,0:08:29.11,0:08:34.78,chinese,,0,0,0,,我们将在 code.cs50.io 上使用一个基于云的 VS Code 版本。
Dialogue: 0,0:08:29.11,0:08:34.78,annotation,,0,0,0,,*注：不强制要求科学的上网，但是由 github 提供支持，直连可能不稳定，推荐科学访问。\N注意本地的 VSCode 可能无法复现 David 的操作。
Dialogue: 0,0:08:34.78,0:08:36.58,english,,0,0,0,,And that's going to be the exact same tool.
Dialogue: 0,0:08:34.78,0:08:36.58,chinese,,0,0,0,,其实和本地是完全一样的。
Dialogue: 0,0:08:36.58,0:08:46.09,english,,0,0,0,,And the goal, then, is by the end of the semester to migrate you off of that cloud-based environment to your own Mac and PC so that even if CS50 is the only CS class you ever take,
Dialogue: 0,0:08:36.58,0:08:46.09,chinese,,0,0,0,,我们的目标是，在学期结束时你们可以从云端环境迁移到自己的 Mac 和 PC 上，\N这样即使 CS50 是你们唯一上的计算机课程，
Dialogue: 0,0:08:46.09,0:08:55.76,english,,0,0,0,,you're 100% equipped to continue writing code after the class using not something that's even CS50-specific, but a de facto industry standard, at least for some time.
Dialogue: 0,0:08:46.09,0:08:55.76,chinese,,0,0,0,,你们也可以抛弃掉 CS50 的专用代码，\N在课程结束后使用事实上的行业标准继续编写代码。
Dialogue: 0,0:08:55.76,0:08:59.02,english,,0,0,0,,So what's this program VS Code going to look like, be it on your Mac,
Dialogue: 0,0:08:55.76,0:08:59.02,chinese,,0,0,0,,那么，VS Code 程序是什么样子呢，
Dialogue: 0,0:08:59.02,0:09:00.99,english,,0,0,0,,PC, or initially in your browser?
Dialogue: 0,0:08:59.02,0:09:00.99,chinese,,0,0,0,,在 Mac，PC，或者浏览器里面？
Dialogue: 0,0:09:00.99,0:09:02.99,english,,0,0,0,,It's going to look a little something like this.
Dialogue: 0,0:09:00.99,0:09:02.99,chinese,,0,0,0,,看起来差不多这样。
Dialogue: 0,0:09:02.99,0:09:05.65,english,,0,0,0,,And there's going to be several different regions to the screen.
Dialogue: 0,0:09:02.99,0:09:05.65,chinese,,0,0,0,,屏幕上会有几个区域。
Dialogue: 0,0:09:05.65,0:09:10.33,english,,0,0,0,,And pictured here is that very same code I keep proposing as the simplest program you can write in C.
Dialogue: 0,0:09:05.65,0:09:10.33,chinese,,0,0,0,,图中的代码正是 C 语言编写的最简单的程序。
Dialogue: 0,0:09:10.33,0:09:12.46,english,,0,0,0,,And what are these different regions of the screen?
Dialogue: 0,0:09:10.33,0:09:12.46,chinese,,0,0,0,,屏幕上的这些不同区域是什么？
Dialogue: 0,0:09:12.46,0:09:15.44,english,,0,0,0,,Well, there's essentially these four here.
Dialogue: 0,0:09:12.46,0:09:15.44,chinese,,0,0,0,,大概可以分为四个部分。
Dialogue: 0,0:09:15.44,0:09:21.16,english,,0,0,0,,So first, highlighted up top is going to be one or more tabs where you're going to actually write code.
Dialogue: 0,0:09:15.44,0:09:21.16,chinese,,0,0,0,,首先，上方突出显示的是一个或多个标签页（每个标签页代表一个文件），\N你可以在这些文本文件里编写代码。
Dialogue: 0,0:09:21.16,0:09:24.94,english,,0,0,0,,So much like in Google Docs or Microsoft Word, you can have tabs open with files.
Dialogue: 0,0:09:21.16,0:09:24.94,chinese,,0,0,0,,就像在 Google Docs 或 Microsoft Word 中一样，你可以打开包含文件的标签页。
Dialogue: 0,0:09:24.94,0:09:30.83,english,,0,0,0,,Similarly in VS Code-- or, really, any programming environment-- you generally nowadays have tabs of some sort.
Dialogue: 0,0:09:24.94,0:09:30.83,chinese,,0,0,0,,同样，在 VS Code 中，或者说在任何编程环境中，都是用标签代表文件的。
Dialogue: 0,0:09:30.83,0:09:34.48,english,,0,0,0,,And this is going to be a tab containing a file, it seems, called hello.c.
Dialogue: 0,0:09:30.83,0:09:34.48,chinese,,0,0,0,,这是一个标签页，其中包含名字叫 hello.c 的文件。
Dialogue: 0,0:09:34.48,0:09:38.02,english,,0,0,0,,And that's going to be the very first file we write in just a moment.
Dialogue: 0,0:09:34.48,0:09:38.02,chinese,,0,0,0,,这就是我们马上要写的第一个文件。
Dialogue: 0,0:09:38.02,0:09:41.92,english,,0,0,0,,Down here, though, is going to be an interface that many of you might not know.
Dialogue: 0,0:09:38.02,0:09:41.92,chinese,,0,0,0,,下面这个部分倒是可能很多人没见过。
Dialogue: 0,0:09:41.92,0:09:44.17,english,,0,0,0,,This is what's called a terminal window.
Dialogue: 0,0:09:41.92,0:09:44.17,chinese,,0,0,0,,这叫做终端窗口。
Dialogue: 0,0:09:44.17,0:09:49.72,english,,0,0,0,,And a terminal window provides what's generally called a Command Line Interface, or CLI.
Dialogue: 0,0:09:44.17,0:09:49.72,chinese,,0,0,0,,终端窗口里面的，我们一般叫做命令行界面，CLI。
Dialogue: 0,0:09:49.72,0:09:53.68,english,,0,0,0,,And this is in contrast with a Graphical User Interface, or GUI.
Dialogue: 0,0:09:49.72,0:09:53.68,chinese,,0,0,0,,这与图形用户界面（GUI）形成鲜明对比。
Dialogue: 0,0:09:53.68,0:09:57.76,english,,0,0,0,,Now, you and I, every day, are using GUIs on our phones, on our PCs.
Dialogue: 0,0:09:53.68,0:09:57.76,chinese,,0,0,0,,我们每天都在使用手机和电脑上的图形用户界面。
Dialogue: 0,0:09:57.76,0:10:01.42,english,,0,0,0,,And a GUI is literally graphical-- so menus, and buttons, and icons.
Dialogue: 0,0:09:57.76,0:10:01.42,chinese,,0,0,0,,图形用户界面是图形化的，包括菜单、按钮和图标等等。
Dialogue: 0,0:10:01.42,0:10:06.38,english,,0,0,0,,And you generally use your finger or a trackpad or a mouse or something like that to interact with it.
Dialogue: 0,0:10:01.42,0:10:06.38,chinese,,0,0,0,,咱通常使用手指、触控板、鼠标等等东西与 GUI 交互。
Dialogue: 0,0:10:06.38,0:10:14.62,english,,0,0,0,,But it turns out that many programmers-- they're saying most programmers, at least over time, come to prefer, not a GUI, but a CLI, a Command Line Interface
Dialogue: 0,0:10:06.38,0:10:14.62,chinese,,0,0,0,,但事实证明，大多数程序员，随着时间的推移，\N相比 GUI（图形用户界面），更加青睐 CLI（命令行界面）。
Dialogue: 0,0:10:14.62,0:10:20.65,english,,0,0,0,,where you actually do everything somewhat arcanely via keyboard alone.
Dialogue: 0,0:10:14.62,0:10:20.65,chinese,,0,0,0,,在 CLI，你只需通过键盘就能完成所有复杂的操作。
Dialogue: 0,0:10:20.65,0:10:21.25,english,,0,0,0,,Why?
Dialogue: 0,0:10:21.25,0:10:26.26,english,,0,0,0,,Well, it turns out, there's just more features built in to most computers if you can access them with a keyboard.
Dialogue: 0,0:10:21.25,0:10:26.26,chinese,,0,0,0,,事实证明，通过键盘，相比鼠标能操作电脑的更多功能。
Dialogue: 0,0:10:21.25,0:10:26.26,annotation,,0,0,0,,*注：这里的意思大概是，在日常生活中，GUI 一直在监听我们的操作，\N我们按下一个按键后，实则是触发了某个点击事件，\N事件里面调用相应的代码和命令，以达到我们想要的目的。\N但是不可能每个功能都让程序员去放一个按钮，所以有很多的设置项实际是隐藏起来的，需要在 CLI 用命令进行设置。\N可以说 GUI 里面，每个按钮都对应着一行命令，但反过来不是。
Dialogue: 0,0:10:26.26,0:10:29.53,english,,0,0,0,,It turns out, most of us can type faster than you can point and click.
Dialogue: 0,0:10:26.26,0:10:29.53,chinese,,0,0,0,,我们大多数人打字的速度都比点来点去速度快。
Dialogue: 0,0:10:29.53,0:10:32.33,english,,0,0,0,,And so that ends up being an efficiency gain over time.
Dialogue: 0,0:10:29.53,0:10:32.33,chinese,,0,0,0,,因此，随着时间的推移，CLI 会提高效率。
Dialogue: 0,0:10:32.33,0:10:40.39,english,,0,0,0,,So in time, will you get comfortable using this terminal window to do things like compile your code or make your program as well as run it.
Dialogue: 0,0:10:32.33,0:10:40.39,chinese,,0,0,0,,所以再过一段时间，你也能在这个终端窗口里面，\N游刃有余地编译代码、制作程序和运行程序什么的了。
Dialogue: 0,0:10:40.39,0:10:45.80,english,,0,0,0,,So you won't be in the habit initially of just double clicking icons like we do in our typical real world.
Dialogue: 0,0:10:40.39,0:10:45.80,chinese,,0,0,0,,现在刚刚开始，你可能还有点不习惯，没法像我们平时一样双击图标。
Dialogue: 0,0:10:45.80,0:10:47.89,english,,0,0,0,,You'll do it the programmer's way.
Dialogue: 0,0:10:45.80,0:10:47.89,chinese,,0,0,0,,不过我们要按照程序员的方式来试试。
Dialogue: 0,0:10:47.89,0:10:51.82,english,,0,0,0,,But it's not to the exclusion of adding icons, and clickability, and more.
Dialogue: 0,0:10:47.89,0:10:51.82,chinese,,0,0,0,,这也不是说，我们要排斥添加图标，增加程序交互性什么的。
Dialogue: 0,0:10:51.82,0:11:02.11,english,,0,0,0,,On the left-hand side of VS Code, there's going to be a somewhat familiar File Explorer, some kind of hierarchical tree, like on your Mac or PC where you can see all of the files in your account.
Dialogue: 0,0:10:51.82,0:11:02.11,chinese,,0,0,0,,你看 VS Code 的左边，会有一个熟悉的 "文件管理器"（File Explorer），\N这是一种分层树形结构，就像在 Mac 或 PC 上一样，在这里展示了账户中的所有文件。
Dialogue: 0,0:11:02.11,0:11:06.14,english,,0,0,0,,Pictured here, for instance, is just hello.c, which I'll create myself in a moment.
Dialogue: 0,0:11:02.11,0:11:06.14,chinese,,0,0,0,,例如，这里能看到 hello.c，过会我再演示一遍创建。
Dialogue: 0,0:11:06.14,0:11:12.26,english,,0,0,0,,And then far away on the left is the so-called Activity Bar, and this is where you just get a lot of traditional menus and buttons.
Dialogue: 0,0:11:06.14,0:11:12.26,chinese,,0,0,0,,最左边的是 "活动栏"，这里有很多菜单和按钮。
Dialogue: 0,0:11:12.26,0:11:16.25,english,,0,0,0,,So VS Code itself gives you both a GUI and a CLI.
Dialogue: 0,0:11:12.26,0:11:16.25,chinese,,0,0,0,,所以说，VS Code 同时提供了图形用户界面和 CLI。
Dialogue: 0,0:11:16.25,0:11:22.25,english,,0,0,0,,But it's within the CLI, the terminal window, the bottom region of the screen that we're actually going to type most of our commands.
Dialogue: 0,0:11:16.25,0:11:22.25,chinese,,0,0,0,,但实际上，我们要在屏幕底部的 CLI （命令行界面）输入大部分命令。
Dialogue: 0,0:11:22.25,0:11:28.38,english,,0,0,0,,And in general in class, I'm going to hide all of the graphical stuff that's just not of all that much interest.
Dialogue: 0,0:11:22.25,0:11:28.38,chinese,,0,0,0,,一般来说，在课上我会隐藏不怎么用到的部分。
Dialogue: 0,0:11:28.38,0:11:32.87,english,,0,0,0,,So with that said, let me actually change over to a live version of VS Code.
Dialogue: 0,0:11:28.38,0:11:32.87,chinese,,0,0,0,,那我现在就切换到 VS Code 里面。
Dialogue: 0,0:11:32.87,0:11:34.67,english,,0,0,0,,And I've indeed hidden in the Activity Bar.
Dialogue: 0,0:11:32.87,0:11:34.67,chinese,,0,0,0,,我确实把活动栏隐藏起来了。
Dialogue: 0,0:11:34.67,0:11:36.47,english,,0,0,0,,I've indeed hidden the File Explorer.
Dialogue: 0,0:11:34.67,0:11:36.47,chinese,,0,0,0,,文件资源管理器也隐藏了。
Dialogue: 0,0:11:36.47,0:11:42.84,english,,0,0,0,,So what I have here for visibility sake is a really big area for writing code and a really big terminal window at the bottom.
Dialogue: 0,0:11:36.47,0:11:42.84,chinese,,0,0,0,,这样就很便于展示了：有一个很大的区域来写代码，底部的终端窗口区域也足够大。
Dialogue: 0,0:11:42.84,0:11:45.26,english,,0,0,0,,You'll see in the terminal window, there's dollar sign.
Dialogue: 0,0:11:42.84,0:11:45.26,chinese,,0,0,0,,在终端窗口中，你会看到一个美元符号。
Dialogue: 0,0:11:45.26,0:11:47.16,english,,0,0,0,,And this doesn't mean any form of currency.
Dialogue: 0,0:11:45.26,0:11:47.16,chinese,,0,0,0,,这不是任何形式的货币，
Dialogue: 0,0:11:47.16,0:11:51.23,english,,0,0,0,,This is just the standard symbol that represents type commands here.
Dialogue: 0,0:11:47.16,0:11:51.23,chinese,,0,0,0,,只是代表在这里输入命令的标准符号。
Dialogue: 0,0:11:51.23,0:11:55.49,english,,0,0,0,,So the fact that there's just dollar sign and a cursor means, eventually, that's where I'm going to type commands.
Dialogue: 0,0:11:51.23,0:11:55.49,chinese,,0,0,0,,只有美元符号和一个光标意味着，这就是我要输入命令的地方。
Dialogue: 0,0:11:55.49,0:11:58.02,english,,0,0,0,,But first, I'm going to actually create some code.
Dialogue: 0,0:11:55.49,0:11:58.02,chinese,,0,0,0,,但首先，我要实际创建一些代码。
Dialogue: 0,0:11:58.02,0:12:08.87,english,,0,0,0,,So how might I program using VS Code-- be it on my Mac, PC, or in this cloud-based environment that you'll get set up for problem set 1-- go about writing my first file?
Dialogue: 0,0:11:58.02,0:12:08.87,chinese,,0,0,0,,那么，我应该如何使用 VS Code 进行编程——\N不管是在 Mac、PC 上，还是在 CS50 的云环境中呢？又怎么开始编写我的第一个文件呢？
Dialogue: 0,0:12:08.87,0:12:10.61,english,,0,0,0,,Well, perhaps the easiest way is this.
Dialogue: 0,0:12:08.87,0:12:10.61,chinese,,0,0,0,,嗯，也许最简单的方法就是这样。
Dialogue: 0,0:12:10.61,0:12:15.20,english,,0,0,0,,Literally run the command code and then the name of the file you want to create.
Dialogue: 0,0:12:10.61,0:12:15.20,chinese,,0,0,0,,只需要输入命令 code，然后再加上你想创建的文件名。
Dialogue: 0,0:12:15.20,0:12:18.83,english,,0,0,0,,Notice that I deliberately end the file with .c in lowercase.
Dialogue: 0,0:12:15.20,0:12:18.83,chinese,,0,0,0,,请注意，我故意以小写字母 .c 结尾的文件名。
Dialogue: 0,0:12:18.83,0:12:21.38,english,,0,0,0,,Notice that I've deliberately lowercased the whole file name.
Dialogue: 0,0:12:18.83,0:12:21.38,chinese,,0,0,0,,我还故意让整个文件名都是小写。
Dialogue: 0,0:12:21.38,0:12:22.67,english,,0,0,0,,And these are just conventions.
Dialogue: 0,0:12:21.38,0:12:22.67,chinese,,0,0,0,,这些都只是惯例。
Dialogue: 0,0:12:22.67,0:12:24.14,english,,0,0,0,,You could use a capital H.
Dialogue: 0,0:12:22.67,0:12:24.14,chinese,,0,0,0,,你也可以用大写字母 H。
Dialogue: 0,0:12:24.14,0:12:27.26,english,,0,0,0,,You kind of could use a capital C. But just don't do that.
Dialogue: 0,0:12:24.14,0:12:27.26,chinese,,0,0,0,,或者你也可以使用大写的 C，但最好不要这样做。
Dialogue: 0,0:12:27.26,0:12:31.10,english,,0,0,0,,Follow best practices so that it's consistent with what most everyone else would do.
Dialogue: 0,0:12:27.26,0:12:31.10,chinese,,0,0,0,,遵循最佳实践，与大多数其他人的做法保持一致。
Dialogue: 0,0:12:31.10,0:12:35.54,english,,0,0,0,,When I hit Enter, I just get an empty tab, just like the screenshot a moment ago.
Dialogue: 0,0:12:31.10,0:12:35.54,chinese,,0,0,0,,现在按回车键，得到一个空标签页，跟刚才的截图一样。
Dialogue: 0,0:12:35.54,0:12:40.10,english,,0,0,0,,And it's in this tab where I can now write my very first program in C.
Dialogue: 0,0:12:35.54,0:12:40.10,chinese,,0,0,0,,在这个标签页中，就可以用 C 语言编写我的第一个程序了。
Dialogue: 0,0:12:40.10,0:12:45.99,english,,0,0,0,,Unfortunately, it's not quite as user-friendly as Scratch where you drag and drop a couple of puzzle pieces and, boom, it's done.
Dialogue: 0,0:12:40.10,0:12:45.99,chinese,,0,0,0,,非常遗憾，它不像 Scratch 那样友好，只需拖放组合几块拼图，一下子就完成了。
Dialogue: 0,0:12:45.99,0:12:47.45,english,,0,0,0,,So I'm going to do this for memory.
Dialogue: 0,0:12:45.99,0:12:47.45,chinese,,0,0,0,,这些步骤我只是已经烂熟于心了。
Dialogue: 0,0:12:47.45,0:12:49.97,english,,0,0,0,,But this, too, will become familiar to you over time.
Dialogue: 0,0:12:47.45,0:12:49.97,chinese,,0,0,0,,这些东西随着时间，你们也可以信手拈来。
Dialogue: 0,0:12:49.97,0:12:53.72,english,,0,0,0,,I'm going to include something called stdio.h.
Dialogue: 0,0:12:49.97,0:12:53.72,chinese,,0,0,0,,先要 include 一个叫做 stdio.h 的东西。
Dialogue: 0,0:12:53.72,0:12:57.23,english,,0,0,0,,I'm going to type int main, void in parentheses.
Dialogue: 0,0:12:53.72,0:12:57.23,chinese,,0,0,0,,再输入 int main，括号内为 void。
Dialogue: 0,0:12:57.23,0:13:01.19,english,,0,0,0,,On a new line, I'm going to insert some curly braces, as we'll call them.
Dialogue: 0,0:12:57.23,0:13:01.19,chinese,,0,0,0,,新起一行，输入一对大括号。
Dialogue: 0,0:13:01.19,0:13:12.80,english,,0,0,0,,And then I'm going to type printf, and then some parentheses, and then in quotes, hello, comma, world, then a backslash, then a lowercase n, then a close quote, and then a semicolon
Dialogue: 0,0:13:01.19,0:13:12.80,chinese,,0,0,0,,然后输入 printf，一对括号，一个引号中输入 hello、逗号、world，\N然后输入反斜杠，再输入小写 n，然后输入引号，
Dialogue: 0,0:13:12.80,0:13:14.28,english,,0,0,0,,at the very end of the line.
Dialogue: 0,0:13:12.80,0:13:14.28,chinese,,0,0,0,,最后用一个分号作为一行结尾。
Dialogue: 0,0:13:14.28,0:13:19.01,english,,0,0,0,,So all I've done is recreate, just from memory, that very first program.
Dialogue: 0,0:13:14.28,0:13:19.01,chinese,,0,0,0,,我把这第一个程序沿着记忆重新敲了出来。
Dialogue: 0,0:13:19.01,0:13:21.71,english,,0,0,0,,In a little bit, we'll make clear what most of this does.
Dialogue: 0,0:13:19.01,0:13:21.71,chinese,,0,0,0,,只过一小会，我们就会明了其中大部分是什么意思。
Dialogue: 0,0:13:21.71,0:13:23.85,english,,0,0,0,,But for now, let's just actually run this thing.
Dialogue: 0,0:13:21.71,0:13:23.85,chinese,,0,0,0,,现在还是先让它跑一下吧。
Dialogue: 0,0:13:23.85,0:13:29.84,english,,0,0,0,,And just like I clicked the green flag last week for the first time, let's actually compile and run this program.
Dialogue: 0,0:13:23.85,0:13:29.84,chinese,,0,0,0,,就像上一周我第一次点击绿旗一样，我们来编译并运行这个程序。
Dialogue: 0,0:13:29.84,0:13:37.40,english,,0,0,0,,If it were your Mac or PC and Google, or Microsoft, or someone else had made the software, at this point in the story, we'd be double clicking an icon.
Dialogue: 0,0:13:29.84,0:13:37.40,chinese,,0,0,0,,如果这是你的 Mac 或 PC，而且是谷歌、微软或其他公司制作的软件，\N那么走到这步，我们通常会双击一个图标来运行。
Dialogue: 0,0:13:37.40,0:13:38.45,english,,0,0,0,,But we can't do that yet.
Dialogue: 0,0:13:37.40,0:13:38.45,chinese,,0,0,0,,不过我们现在还不得行。
Dialogue: 0,0:13:38.45,0:13:39.93,english,,0,0,0,,This is still source code.
Dialogue: 0,0:13:38.45,0:13:39.93,chinese,,0,0,0,,这仍然是源代码。
Dialogue: 0,0:13:39.93,0:13:42.38,english,,0,0,0,,So I'm going to click back down in my terminal window.
Dialogue: 0,0:13:39.93,0:13:42.38,chinese,,0,0,0,,因此，我要在终端窗口中进行下一步。
Dialogue: 0,0:13:42.38,0:13:47.88,english,,0,0,0,,Notice I have a second dollar sign below the first, which just means it's ready for a second command.
Dialogue: 0,0:13:42.38,0:13:47.88,chinese,,0,0,0,,请注意，在第一个 $ 下面又多了一个 $，这就是说它已经准备好接受第二条命令了。
Dialogue: 0,0:13:47.88,0:13:59.36,english,,0,0,0,,And now the command via which to make this an actual program, to compile it from source code to machine code is, going to be quite simply make and then the name of the program I want to make.
Dialogue: 0,0:13:47.88,0:13:59.36,chinese,,0,0,0,,现在，要把它变成一个真正的程序，从源代码编译成机器码，\N其实用的命令特简单，就是 make，然后输入我要编译的程序的名称。
Dialogue: 0,0:13:59.36,0:14:05.87,english,,0,0,0,,Slight subtlety-- I'm omitting deliberately .c because the program I want to make, I just want to call hello.
Dialogue: 0,0:13:59.36,0:14:05.87,chinese,,0,0,0,,有一点很细节—— 我故意省略了 .c，因为我想创建的程序只想叫做 hello。
Dialogue: 0,0:14:05.87,0:14:07.40,english,,0,0,0,,Don't write make hello.c.
Dialogue: 0,0:14:05.87,0:14:07.40,chinese,,0,0,0,,不要写 make hello.c。
Dialogue: 0,0:14:07.40,0:14:08.78,english,,0,0,0,,Just write make hello.
Dialogue: 0,0:14:07.40,0:14:08.78,chinese,,0,0,0,,就写 make hello。
Dialogue: 0,0:14:08.78,0:14:13.04,english,,0,0,0,,And this program make is essentially our compiler.
Dialogue: 0,0:14:08.78,0:14:13.04,chinese,,0,0,0,,而这个程序 make 实际上就是编译器（后面的 hello 是 make 这个程序的 "输入参数"）。
Dialogue: 0,0:14:13.04,0:14:17.58,english,,0,0,0,,Technically speaking, it's a program that automates the compilation of my program for me.
Dialogue: 0,0:14:13.04,0:14:17.58,chinese,,0,0,0,,从技术上看，它是一个能自动帮我编译程序的程序。
Dialogue: 0,0:14:17.58,0:14:20.18,english,,0,0,0,,But it is going to see that I've typed the word hello.
Dialogue: 0,0:14:17.58,0:14:20.18,chinese,,0,0,0,,它会注意到我输入了单词 hello。
Dialogue: 0,0:14:20.18,0:14:30.69,english,,0,0,0,,It's going to automatically look now for a file on the hard drive called hello.c and convert it from source code in C to machine code in zeros and ones.
Dialogue: 0,0:14:20.18,0:14:30.69,chinese,,0,0,0,,它会自动在硬盘上查找名字是 hello.c 的文件，并将其从 C 语言源代码转换为 0 1 机器码。
Dialogue: 0,0:14:30.69,0:14:37.17,english,,0,0,0,,So if I didn't make any typos, Enter, nothing seems to happen.
Dialogue: 0,0:14:30.69,0:14:37.17,chinese,,0,0,0,,所以如果我没有出现任何拼写错误，按下回车键，屏幕上似乎什么都没有发生。
Dialogue: 0,0:14:37.17,0:14:38.21,english,,0,0,0,,And that's a good thing.
Dialogue: 0,0:14:37.17,0:14:38.21,chinese,,0,0,0,,这是一件好事。
Dialogue: 0,0:14:38.21,0:14:41.86,english,,0,0,0,,Almost always, if nothing gets outputted on the screen, you did good.
Dialogue: 0,0:14:38.21,0:14:41.86,chinese,,0,0,0,,如果屏幕上什么输出都没有，几乎总是说明你做得没问题。
Dialogue: 0,0:14:41.86,0:14:43.07,english,,0,0,0,,You didn't make any mistakes.
Dialogue: 0,0:14:41.86,0:14:43.07,chinese,,0,0,0,,你没有犯任何错误。
Dialogue: 0,0:14:43.07,0:14:43.88,english,,0,0,0,,You didn't get yelled at.
Dialogue: 0,0:14:43.07,0:14:43.88,chinese,,0,0,0,,你没有被警告。
Dialogue: 0,0:14:43.88,0:14:45.00,english,,0,0,0,,There's no error messages.
Dialogue: 0,0:14:43.88,0:14:45.00,chinese,,0,0,0,,也没有犯任何错误。
Dialogue: 0,0:14:45.00,0:14:46.59,english,,0,0,0,,So this is actually a good thing.
Dialogue: 0,0:14:45.00,0:14:46.59,chinese,,0,0,0,,所以这实际上真是一件好事。
Dialogue: 0,0:14:46.59,0:14:47.94,english,,0,0,0,,How do I now run this program?
Dialogue: 0,0:14:46.59,0:14:47.94,chinese,,0,0,0,,现在又该怎么运行这个程序呢？
Dialogue: 0,0:14:47.94,0:14:52.11,english,,0,0,0,,Well, notice I've got a third dollar sign, which just means I'm ready for a third command.
Dialogue: 0,0:14:47.94,0:14:52.11,chinese,,0,0,0,,注意，这里有第三个 $ ，也就是说系统准备好了接受下一个命令。
Dialogue: 0,0:14:52.11,0:14:55.40,english,,0,0,0,,And now I'm going to go ahead and run ./hello.
Dialogue: 0,0:14:52.11,0:14:55.40,chinese,,0,0,0,,接着我要运行 ./hello。
Dialogue: 0,0:14:55.40,0:14:58.79,english,,0,0,0,,And this is admittedly a little weird that you have to do dot slash.
Dialogue: 0,0:14:55.40,0:14:58.79,chinese,,0,0,0,,这确实有点奇怪，非得要加一个点和斜杠。
Dialogue: 0,0:14:58.79,0:15:07.73,english,,0,0,0,,But for now just take on faith that this is how you run a program called hello In your current folder, in your current directory in this cloud-based environment.
Dialogue: 0,0:14:58.79,0:15:07.73,chinese,,0,0,0,,你现在只用知道，在这个基于云的环境，在你的当前文件夹、当前目录下，\N这样就能运行一个名为 hello 的程序。
Dialogue: 0,0:15:07.73,0:15:10.43,english,,0,0,0,,All right, crossing my fingers again, hitting Enter.
Dialogue: 0,0:15:07.73,0:15:10.43,chinese,,0,0,0,,好吧，拜赛博佛祖，按下回车键。
Dialogue: 0,0:15:10.43,0:15:12.11,english,,0,0,0,,And voila.
Dialogue: 0,0:15:12.11,0:15:15.95,english,,0,0,0,,My very first program in C, hello, world.
Dialogue: 0,0:15:12.11,0:15:15.95,chinese,,0,0,0,,我的第一个 C 语言程序：hello, world。
Dialogue: 0,0:15:15.95,0:15:21.29,english,,0,0,0,,And now let me go ahead and reveal the File Explorer that I proposed exists earlier.
Dialogue: 0,0:15:15.95,0:15:21.29,chinese,,0,0,0,,现在，让我打开之前提到的文件资源管理器。
Dialogue: 0,0:15:21.29,0:15:23.75,english,,0,0,0,,I'm just going to use the keyboard shortcut to reveal that.
Dialogue: 0,0:15:21.29,0:15:23.75,chinese,,0,0,0,,我按了一个键盘快捷键让它显示出来。
Dialogue: 0,0:15:23.75,0:15:28.25,english,,0,0,0,,And generally, I keep it closed because I don't really need to constantly what files are in my account.
Dialogue: 0,0:15:23.75,0:15:28.25,chinese,,0,0,0,,一般情况下，我都把它关着，因为并不经常需要查看目录下有哪些文件。
Dialogue: 0,0:15:28.25,0:15:35.27,english,,0,0,0,,But you'll see now in the File Explorer, similar in spirit to a Mac or PC but graphically a little different, here's my file, hello.c.
Dialogue: 0,0:15:28.25,0:15:35.27,chinese,,0,0,0,,注意看这个文件资源管理器，它的功能和 Mac 或 PC 里面的差不多，\N只是样子有点不一样，这是我的文件 hello.c。
Dialogue: 0,0:15:35.27,0:15:37.52,english,,0,0,0,,It's highlighted because I have that tab open.
Dialogue: 0,0:15:35.27,0:15:37.52,chinese,,0,0,0,,高亮显示是因为我正打开那个标签页。
Dialogue: 0,0:15:37.52,0:15:40.97,english,,0,0,0,,But now there's a second file here called just hello.
Dialogue: 0,0:15:37.52,0:15:40.97,chinese,,0,0,0,,不过现在，这里还有第二个文件，名字就叫 "hello"。
Dialogue: 0,0:15:40.97,0:15:42.69,english,,0,0,0,,That's the name of my program.
Dialogue: 0,0:15:40.97,0:15:42.69,chinese,,0,0,0,,这是我刚才编译的程序的名字。
Dialogue: 0,0:15:42.69,0:15:46.10,english,,0,0,0,,So if you were on a Mac or PC, you would ideally double click that thing.
Dialogue: 0,0:15:42.69,0:15:46.10,chinese,,0,0,0,,所以说吧，你要是在用 Mac 或 PC 的话，就可以双击那个东西运行了。
Dialogue: 0,0:15:46.10,0:15:48.16,english,,0,0,0,,You can't do that in a command line environment.
Dialogue: 0,0:15:46.10,0:15:48.16,chinese,,0,0,0,,不过在命令行环境中没办法双击。
Dialogue: 0,0:15:48.16,0:15:49.37,english,,0,0,0,,You have to run it down here.
Dialogue: 0,0:15:48.16,0:15:49.37,chinese,,0,0,0,,你得像下面这么做就能运行了。
Dialogue: 0,0:15:49.37,0:15:50.45,english,,0,0,0,,But that's all we've done.
Dialogue: 0,0:15:49.37,0:15:50.45,chinese,,0,0,0,,梳理一下做了些什么。
Dialogue: 0,0:15:50.45,0:15:56.24,english,,0,0,0,,We've created a file called hello.c, and then my compiler made the program from that.
Dialogue: 0,0:15:50.45,0:15:56.24,chinese,,0,0,0,,我们创建了一个名为 hello.c 的文件，然后我的编译器据此编译出了程序。
Dialogue: 0,0:15:56.24,0:16:01.97,english,,0,0,0,,Let me pause here and see if there's any questions because that's a lot of magical phrases.
Dialogue: 0,0:15:56.24,0:16:01.97,chinese,,0,0,0,,我现在暂停一下，大家有没有啥问题，毕竟刚才涉及到了很多神奇的专业词汇。
Dialogue: 0,0:16:01.97,0:16:04.45,english,,0,0,0,,Yeah?
Dialogue: 0,0:16:04.45,0:16:04.95,english,,0,0,0,,Yeah.
Dialogue: 0,0:16:04.95,0:16:13.95,english,,0,0,0,,So if you're currently following along, playing along at home and you're getting some kind of error message, part of today will be for me to deliberately induce some of those error messages.
Dialogue: 0,0:16:04.95,0:16:13.95,chinese,,0,0,0,,所以，如果你今天跟着课上做，而且遇到了某种错误消息，有可能是我故意设置的。
Dialogue: 0,0:16:13.95,0:16:19.32,english,,0,0,0,,For now let me just propose that if you literally did what I did, you must have made a typo somewhere.
Dialogue: 0,0:16:13.95,0:16:19.32,chinese,,0,0,0,,但是到现在为止，如果你真的跟着我做并且报错，那一定是你自己在哪个地方打错了。
Dialogue: 0,0:16:19.32,0:16:23.79,english,,0,0,0,,And notice that it's indeed standard io-- stdio.h.
Dialogue: 0,0:16:19.32,0:16:23.79,chinese,,0,0,0,,注意这里是 standard io—— stdio.h。
Dialogue: 0,0:16:23.79,0:16:25.89,english,,0,0,0,,Maybe you typed studio.h?
Dialogue: 0,0:16:23.79,0:16:25.89,chinese,,0,0,0,,也许你输成了 studio.h？
Dialogue: 0,0:16:25.89,0:16:30.60,english,,0,0,0,,OK, super common mistake, I could call you out.
Dialogue: 0,0:16:25.89,0:16:30.60,chinese,,0,0,0,,我跟你们说这是一个超级常见的错误。
Dialogue: 0,0:16:30.60,0:16:32.28,english,,0,0,0,,It is not studio.h.
Dialogue: 0,0:16:30.60,0:16:32.28,chinese,,0,0,0,,它不是 studio.h。
Dialogue: 0,0:16:32.28,0:16:34.56,english,,0,0,0,,It is stdio.h-- so common.
Dialogue: 0,0:16:32.28,0:16:34.56,chinese,,0,0,0,,而是 stdio.h—— 这种错误非常常见。
Dialogue: 0,0:16:34.56,0:16:41.73,english,,0,0,0,,But this is exactly representative of the kind of stupid headaches you're going to run into this week, probably for a few weeks, probably, honestly, for a few years.
Dialogue: 0,0:16:34.56,0:16:41.73,chinese,,0,0,0,,但这恰恰代表了你本周，可能几周，可能，说实话，几年内都会遇到的那种愚蠢的错误。
Dialogue: 0,0:16:41.73,0:16:49.11,english,,0,0,0,,But you start to see past these stupid mistakes over time, and it just gets easier and easier because the computer is going to be so regimented.
Dialogue: 0,0:16:41.73,0:16:49.11,chinese,,0,0,0,,但随着时间的推移，看透这些愚蠢的错误会越来越容易，因为计算机是如此严格。
Dialogue: 0,0:16:49.11,0:16:50.95,english,,0,0,0,,It will only do what you tell it to do.
Dialogue: 0,0:16:49.11,0:16:50.95,chinese,,0,0,0,,它只会按照你的指示执行。
Dialogue: 0,0:16:50.95,0:16:55.89,english,,0,0,0,,And if you say because it's verbally sounds like studio.h, it's not going to know what the file is.
Dialogue: 0,0:16:50.95,0:16:55.89,chinese,,0,0,0,,你可以说，它听起来就是很像 studio.h，但计算机不知道这是什么。
Dialogue: 0,0:16:55.89,0:16:58.18,english,,0,0,0,,So actually, thank you for tripping over that so early.
Dialogue: 0,0:16:55.89,0:16:58.18,chinese,,0,0,0,,所以，非常感谢你在如此早期就碰到了这个问题，
Dialogue: 0,0:16:58.18,0:16:59.74,english,,0,0,0,,That's super common to happen.
Dialogue: 0,0:16:58.18,0:16:59.74,chinese,,0,0,0,,这是一个非常常见的错误。
Dialogue: 0,0:16:59.74,0:17:00.24,english,,0,0,0,,Yeah?
Dialogue: 0,0:17:00.24,0:17:02.54,english,,0,0,0,,AUDIENCE: Why do you have two hello files?
Dialogue: 0,0:17:00.24,0:17:02.54,chinese,,0,0,0,,观众：为什么你有两个 hello 文件？
Dialogue: 0,0:17:02.54,0:17:03.79,english,,0,0,0,,DAVID J. MALAN: Why do I have two hello files?
Dialogue: 0,0:17:02.54,0:17:03.79,chinese,,0,0,0,,为什么我有两个 hello 文件？
Dialogue: 0,0:17:03.79,0:17:04.40,english,,0,0,0,,AUDIENCE: Yes.
Dialogue: 0,0:17:04.40,0:17:06.40,english,,0,0,0,,DAVID J. MALAN: So why do I have to hello files?
Dialogue: 0,0:17:04.40,0:17:06.40,chinese,,0,0,0,,所以为啥我有两个 hello 文件？
Dialogue: 0,0:17:06.40,0:17:10.52,english,,0,0,0,,One is the one I created as the human called hello.c, and it's pictured right here.
Dialogue: 0,0:17:06.40,0:17:10.52,chinese,,0,0,0,,其中一个是我作为人类创建的名为 hello.c 的源代码文件，展示在这里的就是。
Dialogue: 0,0:17:10.52,0:17:17.04,english,,0,0,0,,But then when I ran make hello, that process compiled my source code into machine code.
Dialogue: 0,0:17:10.52,0:17:17.04,chinese,,0,0,0,,不过，当我运行 make hello 命令时，我的源代码被编译成了机器码。
Dialogue: 0,0:17:17.04,0:17:25.70,english,,0,0,0,,So this second file just called hello is the file that contains all of those zeros and ones that the server actually understands.
Dialogue: 0,0:17:17.04,0:17:25.70,chinese,,0,0,0,,因此，第二个名为 hello 的可执行文件，实际包含了计算机能真正理解的 0 1 二进制。
Dialogue: 0,0:17:25.70,0:17:27.20,english,,0,0,0,,All right, so yeah, question?
Dialogue: 0,0:17:25.70,0:17:27.20,chinese,,0,0,0,,好吧，还有问题吗？
Dialogue: 0,0:17:27.20,0:17:29.71,english,,0,0,0,,AUDIENCE: The access to the hello [INAUDIBLE]
Dialogue: 0,0:17:29.71,0:17:38.23,english,,0,0,0,,DAVID J. MALAN: If you try clicking on the hello file, you'll see in this environment the VS Code, quote/unquote, The file is not displayed in the editor because it is either binary--
Dialogue: 0,0:17:29.71,0:17:38.23,chinese,,0,0,0,,如果你尝试点击 hello 文件，会看到 VS Code 显示的消息：\N文件未显示在编辑器中，因为它要么是二进制文件，
Dialogue: 0,0:17:38.23,0:17:41.43,english,,0,0,0,,AKA zeros and ones-- or uses an unsupported text encoding.
Dialogue: 0,0:17:38.23,0:17:41.43,chinese,,0,0,0,,也就是 0 和 1 ，要么使用的是不受支持的文本编码。
Dialogue: 0,0:17:41.43,0:17:42.52,english,,0,0,0,,In this case, it's binary.
Dialogue: 0,0:17:41.43,0:17:42.52,chinese,,0,0,0,,在这种情况下，它是二进制文件，
Dialogue: 0,0:17:42.52,0:17:43.66,english,,0,0,0,,It's zeros and ones.
Dialogue: 0,0:17:42.52,0:17:43.66,chinese,,0,0,0,,也就是由 0 和 1 组成的文件。
Dialogue: 0,0:17:43.66,0:17:47.68,english,,0,0,0,,Now, you could use software to see those zeros and ones.
Dialogue: 0,0:17:43.66,0:17:47.68,chinese,,0,0,0,,现在，你可以使用特殊的软件来查看这些二进制。
Dialogue: 0,0:17:47.68,0:17:50.32,english,,0,0,0,,It won't be intellectually enlightening to most any human.
Dialogue: 0,0:17:47.68,0:17:50.32,chinese,,0,0,0,,但对大多数人来说，这不会有什么启发。
Dialogue: 0,0:17:50.32,0:17:53.16,english,,0,0,0,,So VS Code just takes the choice of not showing it to you at all.
Dialogue: 0,0:17:50.32,0:17:53.16,chinese,,0,0,0,,所以 VS Code 选择根本不显示给我们。
Dialogue: 0,0:17:53.16,0:17:56.29,english,,0,0,0,,So that would be a common mistake too, clicking on a file you don't intend.
Dialogue: 0,0:17:53.16,0:17:56.29,chinese,,0,0,0,,所以这也是一个常见的错误，点击了不打算查看的文件。
Dialogue: 0,0:17:56.29,0:18:00.19,english,,0,0,0,,But the source code is indeed going to be editable by us.
Dialogue: 0,0:17:56.29,0:18:00.19,chinese,,0,0,0,,至少源代码确实是可以由我们编辑的。
Dialogue: 0,0:18:00.19,0:18:01.90,english,,0,0,0,,All right, so I've written this program.
Dialogue: 0,0:18:00.19,0:18:01.90,chinese,,0,0,0,,好的，我已经写了这个程序。
Dialogue: 0,0:18:01.90,0:18:06.70,english,,0,0,0,,It seems to magically work, at least with some effort if you get every single keystroke right.
Dialogue: 0,0:18:01.90,0:18:06.70,chinese,,0,0,0,,只要把每个部分都敲对了，它就能神奇地跑起来。
Dialogue: 0,0:18:06.70,0:18:08.44,english,,0,0,0,,Well, what is it that's going on?
Dialogue: 0,0:18:06.70,0:18:08.44,chinese,,0,0,0,,那么，到底发生了什么？
Dialogue: 0,0:18:08.44,0:18:09.46,english,,0,0,0,,And how is this working?
Dialogue: 0,0:18:08.44,0:18:09.46,chinese,,0,0,0,,是怎么起作用的？
Dialogue: 0,0:18:09.46,0:18:17.74,english,,0,0,0,,Well, first of all, notice that even without my highlighting things or choosing buttons for menus, notice that it's already color coded.
Dialogue: 0,0:18:09.46,0:18:17.74,chinese,,0,0,0,,首先，注意注意，就算我没有点高亮或者什么选项，\N也可以看到它已经自动进行代码的上色。
Dialogue: 0,0:18:17.74,0:18:22.51,english,,0,0,0,,And yet, I wasn't highlighting along the way in Google Docs style, changing the color, certainly.
Dialogue: 0,0:18:17.74,0:18:22.51,chinese,,0,0,0,,但是，我并没有像在 Google 文档中那样自己设置高亮显示或改变颜色，当然没有。
Dialogue: 0,0:18:22.51,0:18:29.60,english,,0,0,0,,Well, it turns out, what VS Code and most programming environments nowadays do for you automatically is syntax highlighting.
Dialogue: 0,0:18:22.51,0:18:29.60,chinese,,0,0,0,,实际上，VS Code 等大多数现代编程环境都会自动进行语法高亮。
Dialogue: 0,0:18:29.60,0:18:36.76,english,,0,0,0,,So syntax highlighting is just this feature of typical text editors nowadays that analyzes the code that you've typed.
Dialogue: 0,0:18:29.60,0:18:36.76,chinese,,0,0,0,,因此，语法高亮是现代文本编辑器的一个特性，它可以分析你输入的代码。
Dialogue: 0,0:18:36.76,0:18:47.57,english,,0,0,0,,And when it notices certain types of keystrokes, things that represent functions, or conditionals, or loops, or variables-- a lot of the vocab from last week-- it just highlights it ever so differently
Dialogue: 0,0:18:36.76,0:18:47.57,chinese,,0,0,0,,当它解析到敲进去代码的类型，\N比如函数、条件语句、循环或变量等等（上周我们提到的很多术语），\N它就会用不同的方式进行高亮显示。
Dialogue: 0,0:18:47.57,0:18:48.07,english,,0,0,0,,for you.
Dialogue: 0,0:18:48.07,0:18:51.43,english,,0,0,0,,So main, for instance, which we'll soon see, is in purple here.
Dialogue: 0,0:18:48.07,0:18:51.43,chinese,,0,0,0,,例如，这里的 main 就是紫色的。
Dialogue: 0,0:18:51.43,0:18:53.89,english,,0,0,0,,Int, and void, and include are in red.
Dialogue: 0,0:18:51.43,0:18:53.89,chinese,,0,0,0,,int、void、include 是红色的。
Dialogue: 0,0:18:53.89,0:18:55.63,english,,0,0,0,,Hello, world is in blue.
Dialogue: 0,0:18:53.89,0:18:55.63,chinese,,0,0,0,,Hello, world 是蓝色的。
Dialogue: 0,0:18:55.63,0:18:57.39,english,,0,0,0,,My parentheses are in green.
Dialogue: 0,0:18:55.63,0:18:57.39,chinese,,0,0,0,,我的括号是绿色的。
Dialogue: 0,0:18:57.39,0:18:59.29,english,,0,0,0,,This will totally vary by programmer too.
Dialogue: 0,0:18:57.39,0:18:59.29,chinese,,0,0,0,,实际上，这会因程序员而异。
Dialogue: 0,0:18:59.29,0:19:04.87,english,,0,0,0,,In fact, if you do want to change these colors for problem set 1 for your own environment, you can poke around
Dialogue: 0,0:18:59.29,0:19:04.87,chinese,,0,0,0,,如果你想在做 problem set 1 的时候更改配色，适应你自己的喜好，
Dialogue: 0,0:19:04.87,0:19:07.19,english,,0,0,0,,VS Code Settings via the gear icon.
Dialogue: 0,0:19:04.87,0:19:07.19,chinese,,0,0,0,,可以通过齿轮图标查看 VS Code 设置。
Dialogue: 0,0:19:07.19,0:19:09.82,english,,0,0,0,,You can change to a different color theme.
Dialogue: 0,0:19:07.19,0:19:09.82,chinese,,0,0,0,,就可以切换到不同的颜色主题了。
Dialogue: 0,0:19:09.82,0:19:13.48,english,,0,0,0,,Syntax highlighting isn't some specific color scheme like it is in Scratch.
Dialogue: 0,0:19:09.82,0:19:13.48,chinese,,0,0,0,,语法高亮并不像 Scratch 中一样，有固定的配色方案。
Dialogue: 0,0:19:13.48,0:19:16.48,english,,0,0,0,,It just generally is to each human their own preference.
Dialogue: 0,0:19:13.48,0:19:16.48,chinese,,0,0,0,,每个人都可以按照自己的喜好来。
Dialogue: 0,0:19:16.48,0:19:20.83,english,,0,0,0,,But that's all that's happening here is this notion of syntax highlighting at the moment.
Dialogue: 0,0:19:16.48,0:19:20.83,chinese,,0,0,0,,我只是想在这里提到，代码的语法高亮这个概念。
Dialogue: 0,0:19:20.83,0:19:25.51,english,,0,0,0,,Well, what more is going on in this code before I run it, but rather write it?
Dialogue: 0,0:19:20.83,0:19:25.51,chinese,,0,0,0,,那么，在运行代码之前，这段代码里还有什么要讨论的呢？
Dialogue: 0,0:19:25.51,0:19:28.79,english,,0,0,0,,Well, it looks a little something like this if I take away all of the colors.
Dialogue: 0,0:19:25.51,0:19:28.79,chinese,,0,0,0,,如果将所有的颜色都去掉，它会看起来像这样。
Dialogue: 0,0:19:28.79,0:19:32.50,english,,0,0,0,,And then just for discussion's sake, let me go ahead and color it a little more like Scratch.
Dialogue: 0,0:19:28.79,0:19:32.50,chinese,,0,0,0,,为了讨论起来方便，让我试着给它上点类似于 Scratch 的颜色。
Dialogue: 0,0:19:32.50,0:19:45.07,english,,0,0,0,,Recall that our very first Scratch program that just said hello, world on the screen had a green flag clicked icon-- puzzle piece, roughly in orange, and then a purple say block beneath it.
Dialogue: 0,0:19:32.50,0:19:45.07,chinese,,0,0,0,,回想一下我们在屏幕上显示 "Hello, world" 的第一个 Scratch 程序，\N它有一个 "when green flag clicked" 的拼图块，大致为橙色，然后下面是一个紫色的 say 函数。
Dialogue: 0,0:19:45.07,0:19:50.95,english,,0,0,0,,So whereas this is the C version, if we run rewind to last week, this was the same program in Scratch.
Dialogue: 0,0:19:45.07,0:19:50.95,chinese,,0,0,0,,因此，虽然这是 C 语言版本，如果我们倒回到上周，这就是在 Scratch 中的同一个程序。
Dialogue: 0,0:19:50.95,0:19:53.09,english,,0,0,0,,But what's happening now is exactly the same.
Dialogue: 0,0:19:50.95,0:19:53.09,chinese,,0,0,0,,发生的事情完全相同。
Dialogue: 0,0:19:53.09,0:20:03.19,english,,0,0,0,,So if you think back to last week and you've got some function, like the say function in purple, that might take one or more arguments, like inputs that influences what it says on the screen.
Dialogue: 0,0:19:53.09,0:20:03.19,chinese,,0,0,0,,回想一下上周，你有一个函数，比如紫色的 say 函数，\N可能需要一个或多个参数，能够影响它在屏幕上显示的内容。
Dialogue: 0,0:20:03.19,0:20:08.48,english,,0,0,0,,And then functions, recall, can sometimes have side effects, like the speech bubble appears on the screen.
Dialogue: 0,0:20:03.19,0:20:08.48,chinese,,0,0,0,,然后，函数有时可能会产生副作用，比如屏幕上会出现说话的气泡。
Dialogue: 0,0:20:08.48,0:20:18.79,english,,0,0,0,,So last week when we used the say block and we passed in an argument of hello, world at left, we got this visual side effect on the screen that says now hello, world in the speech bubble.
Dialogue: 0,0:20:08.48,0:20:18.79,chinese,,0,0,0,,因此，上周当我们使用 say 块并传入一个参数 "Hello, world" 时，\N我们在屏幕上得到了这个说话气泡的可视化副作用。
Dialogue: 0,0:20:18.79,0:20:23.23,english,,0,0,0,,And that's exactly what just happened in VS Code but much, much more textually.
Dialogue: 0,0:20:18.79,0:20:23.23,chinese,,0,0,0,,而这正是刚刚在 VS Code 中发生的事情，只不过是以更多的文本方式呈现。
Dialogue: 0,0:20:23.23,0:20:25.90,english,,0,0,0,,And let's look a little closer now at the code itself.
Dialogue: 0,0:20:23.23,0:20:25.90,chinese,,0,0,0,,让我们再回来仔细看看代码。
Dialogue: 0,0:20:25.90,0:20:38.35,english,,0,0,0,,Let me wave my hand at the equivalent of when green flag clicked part of my code, and let's focus only on the say block in Scratch and the corresponding function in C.
Dialogue: 0,0:20:25.90,0:20:38.35,chinese,,0,0,0,,我来解释一下 Scratch 中的 "当绿旗被点击" 部分，\N然后我们只关注 Scratch 中的 Say 块以及对应的 C 代码部分。
Dialogue: 0,0:20:38.35,0:20:44.83,english,,0,0,0,,So if I step through this and I wanted to convert what we did last week with the say block to C,
Dialogue: 0,0:20:38.35,0:20:44.83,chinese,,0,0,0,,所以如果我逐步进行这个转换，想要将我们上周用 say 块干的事变成 C 代码，
Dialogue: 0,0:20:44.83,0:20:48.52,english,,0,0,0,,I would first use the print function-- although that's actually a bit of a white lie.
Dialogue: 0,0:20:44.83,0:20:48.52,chinese,,0,0,0,,我会首先使用 print 函数—— 虽然这实际上撒了个谎。
Dialogue: 0,0:20:48.52,0:20:50.44,english,,0,0,0,,It's actually the printf function.
Dialogue: 0,0:20:48.52,0:20:50.44,chinese,,0,0,0,,实际上是使用 printf 函数。
Dialogue: 0,0:20:50.44,0:20:52.03,english,,0,0,0,,Printf means formatted.
Dialogue: 0,0:20:50.44,0:20:52.03,chinese,,0,0,0,,printf 代表格式化（formatted）地输出（print）。
Dialogue: 0,0:20:52.03,0:20:55.36,english,,0,0,0,,And it's just a function that allows you to format text on the screen.
Dialogue: 0,0:20:52.03,0:20:55.36,chinese,,0,0,0,,它只是一个允许你在屏幕上格式化文本的函数。
Dialogue: 0,0:20:55.36,0:20:58.57,english,,0,0,0,,There is no say function in C. There's a printf function.
Dialogue: 0,0:20:55.36,0:20:58.57,chinese,,0,0,0,,在 C 中没有 say 函数，只有 printf 函数。
Dialogue: 0,0:20:58.57,0:21:08.05,english,,0,0,0,,What MIT did down the road years ago was they took what existed historically as printf, and they simplified it for a broader audience by just calling it essentially say instead.
Dialogue: 0,0:20:58.57,0:21:08.05,chinese,,0,0,0,,MIT 之前做的事情是，他们参考了 C 语言存在的 printf，\N为了大家更容易接受就简化了它，然后给它取个名字 say。
Dialogue: 0,0:21:08.05,0:21:16.25,english,,0,0,0,,But notice that now if I want to convert the Scratch code at left to C code it right, it's the same shape.
Dialogue: 0,0:21:08.05,0:21:16.25,chinese,,0,0,0,,但是请注意，现在如果我想将左边的 Scratch 代码转换为 C 代码，它的形状是一样的。
Dialogue: 0,0:21:16.25,0:21:23.51,english,,0,0,0,,So MIT deliberately used this white oval, if only because it conjures this idea of having parentheses too.
Dialogue: 0,0:21:16.25,0:21:23.51,chinese,,0,0,0,,MIT 用这个白色的椭圆代表参数是有意为之，因为它比较能让人联想到括号。
Dialogue: 0,0:21:23.51,0:21:31.24,english,,0,0,0,,So on the right, if I want to pass an argument or an input to the printf function, I use an open parentheses and a close parentheses.
Dialogue: 0,0:21:23.51,0:21:31.24,chinese,,0,0,0,,在右边，如果我想将一个参数或输入传递给 printf 函数，我使用一个开括号和一个闭括号。
Dialogue: 0,0:21:31.24,0:21:37.46,english,,0,0,0,,In those parentheses, I then type whatever it is I want to print on the screen-- in this case, hello, comma, world.
Dialogue: 0,0:21:31.24,0:21:37.46,chinese,,0,0,0,,在括号中，输入我想要在屏幕上打印的内容—— 这个例子里是 "hello, world"。
Dialogue: 0,0:21:37.46,0:21:42.16,english,,0,0,0,,But notice I've deliberately left some room because you need some extra keystrokes in the world of C.
Dialogue: 0,0:21:37.46,0:21:42.16,chinese,,0,0,0,,但是请注意，我故意留了一些空间，因为在 C 的世界里还要添点别的。
Dialogue: 0,0:21:42.16,0:21:52.10,english,,0,0,0,,Any time you type out some text-- otherwise known as a string of text, to use computer science jargon-- you need to quote it, in this case with double quotes.
Dialogue: 0,0:21:42.16,0:21:52.10,chinese,,0,0,0,,每当输入一些文本——也就是计算机科学术语中的 string（字符串），\N你都需要用引号引起来，这里是双引号。
Dialogue: 0,0:21:52.10,0:21:54.52,english,,0,0,0,,Double quote at the left, double quote at the right.
Dialogue: 0,0:21:52.10,0:21:54.52,chinese,,0,0,0,,左边是一个双引号，右边也是一个双引号。
Dialogue: 0,0:21:54.52,0:22:01.66,english,,0,0,0,,And notice too I'm going to include some slightly cryptic symbol here too-- backslash n, which I also typed and said verbally earlier,
Dialogue: 0,0:21:54.52,0:22:01.66,chinese,,0,0,0,,同时请注意，我还要在这里加上一些稍微神秘的符号—— 反斜杠 n，我之前也输入并在口头上说过，
Dialogue: 0,0:22:01.66,0:22:05.48,english,,0,0,0,,and then one last nuisance at the end of this, which is a semicolon.
Dialogue: 0,0:22:01.66,0:22:05.48,chinese,,0,0,0,,然后在最后还有一个麻烦的地方，就是一个分号。
Dialogue: 0,0:22:05.48,0:22:08.89,english,,0,0,0,,So suffice it to say, this is why we start with Scratch.
Dialogue: 0,0:22:05.48,0:22:08.89,chinese,,0,0,0,,这就是为什么我们先从学习 Scratch 开始。
Dialogue: 0,0:22:08.89,0:22:10.96,english,,0,0,0,,This, drag and drop, you're good to go.
Dialogue: 0,0:22:08.89,0:22:10.96,chinese,,0,0,0,,在 Scratch 中，拖拖拖就行了。
Dialogue: 0,0:22:10.96,0:22:16.63,english,,0,0,0,,In a language like C, printf, parentheses, double quotes, the text you want, backslash n, semicolon at the end.
Dialogue: 0,0:22:10.96,0:22:16.63,chinese,,0,0,0,,在像 C 这样的语言中，有printf、括号、双引号、需要的字符串、\{}n 以及末尾的分号。
Dialogue: 0,0:22:16.63,0:22:18.97,english,,0,0,0,,There's just so much syntactic overhead.
Dialogue: 0,0:22:16.63,0:22:18.97,chinese,,0,0,0,,有太多的语法开销。
Dialogue: 0,0:22:18.97,0:22:21.29,english,,0,0,0,,But at the end of the day, it's just a function.
Dialogue: 0,0:22:18.97,0:22:21.29,chinese,,0,0,0,,但归根结底，这只是一个函数。
Dialogue: 0,0:22:21.29,0:22:27.13,english,,0,0,0,,And you'll get used to these nuisances like the parentheses, the quotes, the semicolon, and the like.
Dialogue: 0,0:22:21.29,0:22:27.13,chinese,,0,0,0,,你会习惯于这些麻烦的东西，比如括号、引号、分号等等。
Dialogue: 0,0:22:27.13,0:22:33.38,english,,0,0,0,,But things can very easily you go wrong, and it's very easy to make mistakes, even with lines of code like this.
Dialogue: 0,0:22:27.13,0:22:33.38,chinese,,0,0,0,,但是事情很容易出错，即使是像这样的一行代码，也很容易犯错。
Dialogue: 0,0:22:33.38,0:22:34.19,english,,0,0,0,,So let me do this.
Dialogue: 0,0:22:33.38,0:22:34.19,chinese,,0,0,0,,所以让我做一下演示。
Dialogue: 0,0:22:34.19,0:22:37.07,english,,0,0,0,,Let me go back to VS Code where I have the exact same code.
Dialogue: 0,0:22:34.19,0:22:37.07,chinese,,0,0,0,,回到我有完全相同代码的 VS Code。
Dialogue: 0,0:22:37.07,0:22:40.91,english,,0,0,0,,Notice that on line 5 is exactly that line of code.
Dialogue: 0,0:22:37.07,0:22:40.91,chinese,,0,0,0,,注意，在第 5 行就是完全相同的代码。
Dialogue: 0,0:22:40.91,0:22:42.91,english,,0,0,0,,So this is the equivalent of the say block.
Dialogue: 0,0:22:40.91,0:22:42.91,chinese,,0,0,0,,这就是等价于 say 块的代码。
Dialogue: 0,0:22:42.91,0:22:46.09,english,,0,0,0,,And let's consider what mistakes I may make early on or even now
Dialogue: 0,0:22:42.91,0:22:46.09,chinese,,0,0,0,,来想一想，我们在刚开始编程时可能犯下的错误，
Dialogue: 0,0:22:46.09,0:22:49.93,english,,0,0,0,,20 years later after learning this that are quite common in general.
Dialogue: 0,0:22:46.09,0:22:49.93,chinese,,0,0,0,,或者甚至是在学习了 20 年后，也会犯的常见错误。
Dialogue: 0,0:22:49.93,0:22:52.18,english,,0,0,0,,Suppose I forget the semicolon there.
Dialogue: 0,0:22:49.93,0:22:52.18,chinese,,0,0,0,,比如说我忘记了末尾的分号。
Dialogue: 0,0:22:52.18,0:22:53.38,english,,0,0,0,,So easy to do.
Dialogue: 0,0:22:52.18,0:22:53.38,chinese,,0,0,0,,很容易就忘掉。
Dialogue: 0,0:22:53.38,0:22:54.91,english,,0,0,0,,You will do this eventually.
Dialogue: 0,0:22:53.38,0:22:54.91,chinese,,0,0,0,,终究你也会忘掉那么一两次。
Dialogue: 0,0:22:54.91,0:22:59.92,english,,0,0,0,,Let's see what happens now when I go back to my terminal window and try to compile my code again.
Dialogue: 0,0:22:54.91,0:22:59.92,chinese,,0,0,0,,现在我们来看一下，在终端窗口重新编译代码会发生什么。
Dialogue: 0,0:22:59.92,0:23:02.59,english,,0,0,0,,Just to keep things tidy, I'm going to clear my screen.
Dialogue: 0,0:22:59.92,0:23:02.59,chinese,,0,0,0,,我先把终端清空，看着干净一点。
Dialogue: 0,0:23:02.59,0:23:06.46,english,,0,0,0,,But that's just for lecture's sake so that we can focus only on the most recent command.
Dialogue: 0,0:23:02.59,0:23:06.46,chinese,,0,0,0,,这只是为了方便讲课演示，只关注最近的命令，不是重新编译之前必须的。
Dialogue: 0,0:23:06.46,0:23:09.94,english,,0,0,0,,But I'm going to go ahead now and rerun make hello.
Dialogue: 0,0:23:06.46,0:23:09.94,chinese,,0,0,0,,我现在要重新执行 make hello。
Dialogue: 0,0:23:09.94,0:23:13.69,english,,0,0,0,,This will ensure that my program is recompiled.
Dialogue: 0,0:23:09.94,0:23:13.69,chinese,,0,0,0,,就可以让程序重新编译了。
Dialogue: 0,0:23:13.69,0:23:14.95,english,,0,0,0,,And this is a manual process.
Dialogue: 0,0:23:13.69,0:23:14.95,chinese,,0,0,0,,必须手动地进行这个过程。
Dialogue: 0,0:23:14.95,0:23:16.06,english,,0,0,0,,I changed my code.
Dialogue: 0,0:23:14.95,0:23:16.06,chinese,,0,0,0,,我修改了源代码文件。
Dialogue: 0,0:23:16.06,0:23:18.67,english,,0,0,0,,The zeros and ones on the hard drive have not changed.
Dialogue: 0,0:23:16.06,0:23:18.67,chinese,,0,0,0,,但是硬盘上的二进制文件还没变呢。
Dialogue: 0,0:23:18.67,0:23:21.98,english,,0,0,0,,I need to recompile it to output the latest machine code.
Dialogue: 0,0:23:18.67,0:23:21.98,chinese,,0,0,0,,需要重新编译，才能得到最新的机器码。
Dialogue: 0,0:23:21.98,0:23:22.58,english,,0,0,0,,So here we go.
Dialogue: 0,0:23:21.98,0:23:22.58,chinese,,0,0,0,,那么开始吧。
Dialogue: 0,0:23:22.58,0:23:24.83,english,,0,0,0,,I'm going to hit Enter, crossing my fingers as before.
Dialogue: 0,0:23:22.58,0:23:24.83,chinese,,0,0,0,,按下回车键，像以前一样祈祷。
Dialogue: 0,0:23:24.83,0:23:29.32,english,,0,0,0,,But again, I remove the semicolon by accident.
Dialogue: 0,0:23:24.83,0:23:29.32,chinese,,0,0,0,,区别在于，我不小心把行末分号去掉了。
Dialogue: 0,0:23:29.32,0:23:29.98,english,,0,0,0,,Oh, my god.
Dialogue: 0,0:23:29.32,0:23:29.98,chinese,,0,0,0,,我的天啊。
Dialogue: 0,0:23:29.98,0:23:33.70,english,,0,0,0,,There's more lines of errors now than there are of actual code.
Dialogue: 0,0:23:29.98,0:23:33.70,chinese,,0,0,0,,它的报错行数，比我写的代码行数还多。
Dialogue: 0,0:23:33.70,0:23:35.77,english,,0,0,0,,And this, too, takes some getting used to.
Dialogue: 0,0:23:33.70,0:23:35.77,chinese,,0,0,0,,你得花点时间习惯。
Dialogue: 0,0:23:35.77,0:23:42.76,english,,0,0,0,,The programs we're using were not necessarily written with the least comfortable audience in mind but, really, professional programmers back in the day.
Dialogue: 0,0:23:35.77,0:23:42.76,chinese,,0,0,0,,我们使用的这些编译程序，实际上是专业的程序员编写的，看起来初学者没那么好上手，
Dialogue: 0,0:23:42.76,0:23:47.75,english,,0,0,0,,But through practice, and through experience, and through mistakes, you'll start to notice patterns here too.
Dialogue: 0,0:23:42.76,0:23:47.75,chinese,,0,0,0,,不断地练习、经验和犯错，你会越来越习惯于这种模式的。
Dialogue: 0,0:23:47.75,0:23:49.09,english,,0,0,0,,So here's what I typed.
Dialogue: 0,0:23:47.75,0:23:49.09,chinese,,0,0,0,,下面是我键入的内容。
Dialogue: 0,0:23:49.09,0:23:51.22,english,,0,0,0,,Make hello after the sign prompt.
Dialogue: 0,0:23:49.09,0:23:51.22,chinese,,0,0,0,,在 $ 后的 make hello。
Dialogue: 0,0:23:51.22,0:23:57.01,english,,0,0,0,,Now I get yelled at as follows, hello.c, colon, 5, colon, 29.
Dialogue: 0,0:23:51.22,0:23:57.01,chinese,,0,0,0,,现在我得到了以下提示，hello.c，冒号，5，冒号，29。
Dialogue: 0,0:23:57.01,0:23:58.42,english,,0,0,0,,Well, what's that referring to?
Dialogue: 0,0:23:57.01,0:23:58.42,chinese,,0,0,0,,那是指什么呢？
Dialogue: 0,0:23:58.42,0:24:03.46,english,,0,0,0,,I've screwed up somewhere-- on line 5, on the 29th character on that line.
Dialogue: 0,0:23:58.42,0:24:03.46,chinese,,0,0,0,,我在第 5 行的第 29 个字符上搞错了。
Dialogue: 0,0:24:03.46,0:24:07.44,english,,0,0,0,,Generally, the specific character is not that useful unless you actually want to count it out.
Dialogue: 0,0:24:03.46,0:24:07.44,chinese,,0,0,0,,一般来说，我们不会一个个把它数出来，告诉你在第 29 个字符没有大用。
Dialogue: 0,0:24:07.44,0:24:08.63,english,,0,0,0,,But line 5 is a good clue.
Dialogue: 0,0:24:07.44,0:24:08.63,chinese,,0,0,0,,但是第 5 行是一个不错的线索。
Dialogue: 0,0:24:08.63,0:24:09.13,english,,0,0,0,,Why?
Dialogue: 0,0:24:09.13,0:24:11.66,english,,0,0,0,,It means I screwed up somewhere on line 5 here.
Dialogue: 0,0:24:09.13,0:24:11.66,chinese,,0,0,0,,说明我在第 5 行的某个地方出了差错。
Dialogue: 0,0:24:11.66,0:24:12.16,english,,0,0,0,,All right.
Dialogue: 0,0:24:12.16,0:24:13.36,english,,0,0,0,,Well, what is the error?
Dialogue: 0,0:24:12.16,0:24:13.36,chinese,,0,0,0,,那么错误是什么呢？
Dialogue: 0,0:24:13.36,0:24:16.24,english,,0,0,0,,Expected a semicolon after expression.
Dialogue: 0,0:24:13.36,0:24:16.24,chinese,,0,0,0,,在表达式后面需要一个分号。
Dialogue: 0,0:24:16.24,0:24:20.10,english,,0,0,0,,And this error is actually pretty obvious now that I see it and I realize, oh, wait a minute.
Dialogue: 0,0:24:16.24,0:24:20.10,chinese,,0,0,0,,这个错误其实很明显，现在我一看就知道了。
Dialogue: 0,0:24:20.10,0:24:21.52,english,,0,0,0,,All right, here's my line of code.
Dialogue: 0,0:24:20.10,0:24:21.52,chinese,,0,0,0,,嗯，这是我写的一行代码。
Dialogue: 0,0:24:21.52,0:24:30.55,english,,0,0,0,,Here in sort of ASCII art, so to speak-- textual text representing graphics-- it wants me to put in green here the semicolon at the end of that line.
Dialogue: 0,0:24:21.52,0:24:30.55,chinese,,0,0,0,,在这里，可以说是 ASCII 艺术—— 文字文本代表图形，它要我在这一行的末尾加上绿色的分号。
Dialogue: 0,0:24:30.55,0:24:33.85,english,,0,0,0,,1 error generated, builtin-- so some esoteric stuff there.
Dialogue: 0,0:24:30.55,0:24:33.85,chinese,,0,0,0,,生成了 1 个错误，内置的—— 后面是一些晦涩的东西。
Dialogue: 0,0:24:33.85,0:24:36.34,english,,0,0,0,,But my program did not compile.
Dialogue: 0,0:24:33.85,0:24:36.34,chinese,,0,0,0,,反正我的程序没有成功编译。
Dialogue: 0,0:24:36.34,0:24:39.47,english,,0,0,0,,When you see an error like this, it means it did not work.
Dialogue: 0,0:24:36.34,0:24:39.47,chinese,,0,0,0,,一看到这种错误，就要反应过来它没有正常工作。
Dialogue: 0,0:24:39.47,0:24:40.36,english,,0,0,0,,So what's the fix?
Dialogue: 0,0:24:39.47,0:24:40.36,chinese,,0,0,0,,怎么来解决呢？
Dialogue: 0,0:24:40.36,0:24:45.47,english,,0,0,0,,Well, obviously, the fix is to go back up here, put the semicolon there.
Dialogue: 0,0:24:40.36,0:24:45.47,chinese,,0,0,0,,显然，解决方法就是回到这行代码，在末尾加上分号。
Dialogue: 0,0:24:45.47,0:24:48.76,english,,0,0,0,,And now if I recompile my code with make hello--
Dialogue: 0,0:24:45.47,0:24:48.76,chinese,,0,0,0,,现在，如果我用 make hello 重新编译代码。
Dialogue: 0,0:24:48.76,0:24:52.99,english,,0,0,0,,I won't clear my screen just yet just to show you the difference-- now it just worked.
Dialogue: 0,0:24:48.76,0:24:52.99,chinese,,0,0,0,,我现在就不清屏了，方便你们对比不同之处—— 现在它就没问题了。
Dialogue: 0,0:24:52.99,0:24:55.55,english,,0,0,0,,So we're back in business as before.
Dialogue: 0,0:24:52.99,0:24:55.55,chinese,,0,0,0,,所以，我们又回到了先前的版本。
Dialogue: 0,0:24:55.55,0:25:02.24,english,,0,0,0,,All right, let me pause here, though, and ask if there's any questions about what I just did.
Dialogue: 0,0:24:55.55,0:25:02.24,chinese,,0,0,0,,好吧，在这里暂停一下，大家理解刚才的内容有没有问题。
Dialogue: 0,0:25:02.24,0:25:04.46,english,,0,0,0,,These error messages will become frequent initially.
Dialogue: 0,0:25:02.24,0:25:04.46,chinese,,0,0,0,,你可能会频繁遇到这些报错信息。
Dialogue: 0,0:25:04.46,0:25:04.96,english,,0,0,0,,Yeah?
Dialogue: 0,0:25:04.96,0:25:08.84,english,,0,0,0,,AUDIENCE: So do you need a semicolon after line or just some of them?
Dialogue: 0,0:25:04.96,0:25:08.84,chinese,,0,0,0,,观众：那需要在每一行后加上分号吗，还是特定的行？
Dialogue: 0,0:25:08.84,0:25:10.39,english,,0,0,0,,DAVID J. MALAN: Really good question.
Dialogue: 0,0:25:08.84,0:25:10.39,chinese,,0,0,0,,好问题。
Dialogue: 0,0:25:10.39,0:25:12.96,english,,0,0,0,,Do you need a semicolon after every line or just some?
Dialogue: 0,0:25:10.39,0:25:12.96,chinese,,0,0,0,,我们是需要在每一行后面都加上分号，还是只需要在某些行后面加上分号？
Dialogue: 0,0:25:12.96,0:25:14.02,english,,0,0,0,,It turns out, just some.
Dialogue: 0,0:25:12.96,0:25:14.02,chinese,,0,0,0,,其实只需要加一部分。
Dialogue: 0,0:25:14.02,0:25:18.24,english,,0,0,0,,This is something you'll learn through practice, through demonstrations and examples today.
Dialogue: 0,0:25:14.02,0:25:18.24,chinese,,0,0,0,,在今天，我们会通过实践、演示和举例，弄清楚这个问题。
Dialogue: 0,0:25:18.24,0:25:22.81,english,,0,0,0,,Generally, you put a semicolon after a statement, so to speak.
Dialogue: 0,0:25:18.24,0:25:22.81,chinese,,0,0,0,,通常情况下，在语句（statement）后面要加上一个分号。
Dialogue: 0,0:25:22.81,0:25:25.23,english,,0,0,0,,And this is the technical term for this line of code.
Dialogue: 0,0:25:22.81,0:25:25.23,chinese,,0,0,0,,语句（statement）就是指代这行代码的专业术语。
Dialogue: 0,0:25:25.23,0:25:25.95,english,,0,0,0,,It's a statement.
Dialogue: 0,0:25:25.23,0:25:25.95,chinese,,0,0,0,,这是一条语句。
Dialogue: 0,0:25:25.95,0:25:29.23,english,,0,0,0,,And think of it as it's the code equivalent of an English sentence.
Dialogue: 0,0:25:25.95,0:25:29.23,chinese,,0,0,0,,把这行代码想象成一个英语句子。
Dialogue: 0,0:25:29.23,0:25:34.83,english,,0,0,0,,So the semicolon in code is like a period in English when you're done with that particular thought.
Dialogue: 0,0:25:29.23,0:25:34.83,chinese,,0,0,0,,因此，在代码中的分号就像是英语中的句号，表示你完成了特定的思想。
Dialogue: 0,0:25:34.83,0:25:37.65,english,,0,0,0,,You don't need semicolons for now anywhere else.
Dialogue: 0,0:25:34.83,0:25:37.65,chinese,,0,0,0,,现在你不需要在其他地方使用分号。
Dialogue: 0,0:25:37.65,0:25:39.75,english,,0,0,0,,And we'll see examples of where else you put them.
Dialogue: 0,0:25:37.65,0:25:39.75,chinese,,0,0,0,,我们会看到放置分号的其他例子。
Dialogue: 0,0:25:39.75,0:25:46.98,english,,0,0,0,,But it usually is at the end of a line of code that isn't purely syntactic like curly braces instead.
Dialogue: 0,0:25:39.75,0:25:46.98,chinese,,0,0,0,,但通常情况下，它在代码行的末尾，不像花括号这种纯粹的语法。
Dialogue: 0,0:25:46.98,0:25:51.60,english,,0,0,0,,Other questions on the mistake I just fixed and created for myself?
Dialogue: 0,0:25:46.98,0:25:51.60,chinese,,0,0,0,,关于我刚才出的错，以及后面的修复，你们还有疑问吗？
Dialogue: 0,0:25:51.60,0:25:52.23,english,,0,0,0,,Yeah?
Dialogue: 0,0:25:52.23,0:25:55.17,english,,0,0,0,,AUDIENCE: [INAUDIBLE]
Dialogue: 0,0:25:55.17,0:25:56.17,english,,0,0,0,,DAVID J. MALAN: Correct.
Dialogue: 0,0:25:55.17,0:25:56.17,chinese,,0,0,0,,正确的。
Dialogue: 0,0:25:56.17,0:25:58.95,english,,0,0,0,,So line 5 is where the error is most likely.
Dialogue: 0,0:25:56.17,0:25:58.95,chinese,,0,0,0,,所以错误确实发生在第 5 行。
Dialogue: 0,0:25:58.95,0:26:02.25,english,,0,0,0,,Character 29 means it's 29 characters that way.
Dialogue: 0,0:25:58.95,0:26:02.25,chinese,,0,0,0,,字符 29 表示 29 个字符处出错了。
Dialogue: 0,0:26:02.25,0:26:04.80,english,,0,0,0,,And then it's actually, in this case, giving me a suggestion.
Dialogue: 0,0:26:02.25,0:26:04.80,chinese,,0,0,0,,在这个例子里面，它还实际上给了我一个修复 bug 的建议。
Dialogue: 0,0:26:04.80,0:26:09.75,english,,0,0,0,,The compiler won't always know how to advise me, especially if I've made a real mess of my code.
Dialogue: 0,0:26:04.80,0:26:09.75,chinese,,0,0,0,,但并不是每次它都会给出建议，尤其代码非常复杂的时候，它可能只会给出报错信息。
Dialogue: 0,0:26:09.75,0:26:13.26,english,,0,0,0,,But often, it will do its best to give you the answer like this.
Dialogue: 0,0:26:09.75,0:26:13.26,chinese,,0,0,0,,但通常情况下，它会尽力为你提供答案，就像这样。
Dialogue: 0,0:26:13.26,0:26:14.17,english,,0,0,0,,Yeah?
Dialogue: 0,0:26:14.17,0:26:16.93,english,,0,0,0,,AUDIENCE: How come you first put code hello.c?
Dialogue: 0,0:26:14.17,0:26:16.93,chinese,,0,0,0,,观众：最开始那个 code hello.c 命令是怎么来的？
Dialogue: 0,0:26:16.93,0:26:22.94,english,,0,0,0,,DAVID J. MALAN: Ah, so how come I first typed code, space, hello.c, and now I'm typing make hello?
Dialogue: 0,0:26:16.93,0:26:22.94,chinese,,0,0,0,,哦，那么为什么我首先键入了 code hello.c，然后现在我又键入了 make hello？
Dialogue: 0,0:26:22.94,0:26:24.18,english,,0,0,0,,Two different processes.
Dialogue: 0,0:26:22.94,0:26:24.18,chinese,,0,0,0,,这是两个不同的过程。
Dialogue: 0,0:26:24.18,0:26:31.28,english,,0,0,0,,So when I typed code, space, hello.c, that was because I wanted to open VS Code and create a new file called hello.c.
Dialogue: 0,0:26:24.18,0:26:31.28,chinese,,0,0,0,,所以当我键入 code hello.c 时，那是因为我想要打开 VS Code 并创建一个名为 hello.c 的新文件。
Dialogue: 0,0:26:31.28,0:26:34.91,english,,0,0,0,,It's like going to File, New in a Mac or PC.
Dialogue: 0,0:26:31.28,0:26:34.91,chinese,,0,0,0,,就像在 Mac 或 PC 上选择 "文件"，然后选择 "新建" 一样。
Dialogue: 0,0:26:34.91,0:26:42.56,english,,0,0,0,,Thereafter, though, once the file exists and is actually open here-- and it does autosave, you don't need to hit Command-S or Control-S all the time--
Dialogue: 0,0:26:34.91,0:26:42.56,chinese,,0,0,0,,然后，一旦文件存在并且用 VS Code 打开，它就会自动保存，\N不用一直按 ctrl/command+s 手动保存了。
Dialogue: 0,0:26:42.56,0:26:46.11,english,,0,0,0,,I can now compile it with make hello again and again.
Dialogue: 0,0:26:42.56,0:26:46.11,chinese,,0,0,0,,现在我可以用 make hello 一次又一次进行编译。
Dialogue: 0,0:26:46.11,0:26:54.02,english,,0,0,0,,So theoretically, I should never need to type code, space, hello.c again unless I want to create a brand-new file called the same thing.
Dialogue: 0,0:26:46.11,0:26:54.02,chinese,,0,0,0,,所以理论上是，只需要第一次创建 hello.c 的时候敲命令 code hello.c，后面再也不用了。
Dialogue: 0,0:26:54.02,0:26:57.20,english,,0,0,0,,All right, so what about this other piece of syntax here?
Dialogue: 0,0:26:54.02,0:26:57.20,chinese,,0,0,0,,行，那我们接着看下一段语法。
Dialogue: 0,0:26:57.20,0:26:58.79,english,,0,0,0,,Let me clear my terminal window here.
Dialogue: 0,0:26:57.20,0:26:58.79,chinese,,0,0,0,,先清空一下终端窗口。
Dialogue: 0,0:26:58.79,0:27:03.38,english,,0,0,0,,You can also hit Control-L just to throw everything away just to clean it up aesthetically.
Dialogue: 0,0:26:58.79,0:27:03.38,chinese,,0,0,0,,按下 ctrl+l 键，也可以清除所有东西，只是为了美观起见。
Dialogue: 0,0:27:03.38,0:27:11.46,english,,0,0,0,,Suppose that I omit whatever this sequence of symbols is, backslash n, since I'm not really sure at first glance why that's even there.
Dialogue: 0,0:27:03.38,0:27:11.46,chinese,,0,0,0,,我现在要省略 \{}n，因为乍一看我甚至不确定它为什么会在那里。
Dialogue: 0,0:27:11.46,0:27:20.45,english,,0,0,0,,Does anyone want to conjecture, especially if you've never programmed before, what might happen now if I recompile and rerun this version of the program?
Dialogue: 0,0:27:11.46,0:27:20.45,chinese,,0,0,0,,有没有人愿意猜测一下，特别是如果你以前没有编程经验，\N如果我重新编译并运行这个版本的程序，可能会发生什么？
Dialogue: 0,0:27:20.45,0:27:25.13,english,,0,0,0,,I left the semicolon, but I took away the backslash n.
Dialogue: 0,0:27:20.45,0:27:25.13,chinese,,0,0,0,,我把分号留着，但是去掉了 \{}n。
Dialogue: 0,0:27:25.13,0:27:28.39,english,,0,0,0,,Any instincts?
Dialogue: 0,0:27:25.13,0:27:28.39,chinese,,0,0,0,,直觉上会怎么样？
Dialogue: 0,0:27:28.39,0:27:29.92,english,,0,0,0,,All right, well-- yeah?
Dialogue: 0,0:27:28.39,0:27:29.92,chinese,,0,0,0,,你说？
Dialogue: 0,0:27:29.92,0:27:34.19,english,,0,0,0,,AUDIENCE: Will the next dollar sign appear straight after your hello, world?
Dialogue: 0,0:27:29.92,0:27:34.19,chinese,,0,0,0,,观众：下一个美元符号会直接出现在你的 hello, world 后面吗？
Dialogue: 0,0:27:34.19,0:27:35.19,english,,0,0,0,,DAVID J. MALAN: It will.
Dialogue: 0,0:27:34.19,0:27:35.19,chinese,,0,0,0,,对的。
Dialogue: 0,0:27:35.19,0:27:38.74,english,,0,0,0,,The next dollar sign will appear right after my hello, world.
Dialogue: 0,0:27:35.19,0:27:38.74,chinese,,0,0,0,,下一个美元符号会直接出现在我的 hello, world 后面。
Dialogue: 0,0:27:38.74,0:27:40.56,english,,0,0,0,,But what makes you think that?
Dialogue: 0,0:27:38.74,0:27:40.56,chinese,,0,0,0,,你是怎么想到的呢？
Dialogue: 0,0:27:40.56,0:27:43.01,english,,0,0,0,,AUDIENCE: Because the backslash n creates a new line?
Dialogue: 0,0:27:40.56,0:27:43.01,chinese,,0,0,0,,观众：因为 \{}n 会创建一个新行？
Dialogue: 0,0:27:43.01,0:27:44.01,english,,0,0,0,,DAVID J. MALAN: Exactly.
Dialogue: 0,0:27:43.01,0:27:44.01,chinese,,0,0,0,,没错。
Dialogue: 0,0:27:44.01,0:27:48.06,english,,0,0,0,,Backslash n is actually a special sequence of symbols that creates a new line.
Dialogue: 0,0:27:44.01,0:27:48.06,chinese,,0,0,0,, \{}n 实际上是一个特殊的符号序列，代表着换行。
Dialogue: 0,0:27:48.06,0:27:55.42,english,,0,0,0,,And so, to your point, if I recompile this program, make hello, Enter-- no syntax error, so it did compile this time.
Dialogue: 0,0:27:48.06,0:27:55.42,chinese,,0,0,0,,所以，正如你所说的，如果我重新编译这个程序，make hello，回车键——\N没有语法错误，这次的确是编译成功了。
Dialogue: 0,0:27:55.42,0:27:57.18,english,,0,0,0,,So you don't need the backslash n.
Dialogue: 0,0:27:55.42,0:27:57.18,chinese,,0,0,0,,所以说可以不用 \{}n。
Dialogue: 0,0:27:57.18,0:27:58.80,english,,0,0,0,,You do need the semicolon.
Dialogue: 0,0:27:57.18,0:27:58.80,chinese,,0,0,0,,但是分号是不可以省略掉的。
Dialogue: 0,0:27:58.80,0:28:03.51,english,,0,0,0,,But if you don't have the backslash n, watch what happens when I do ./hello this time.
Dialogue: 0,0:27:58.80,0:28:03.51,chinese,,0,0,0,,但是如果你没有 \{}n，看看当我这次运行 ./hello 时会发生什么。
Dialogue: 0,0:28:03.51,0:28:07.23,english,,0,0,0,,Now, indeed, I see hello, comma, world and then a weird dollar sign.
Dialogue: 0,0:28:03.51,0:28:07.23,chinese,,0,0,0,,我看到了 hello, world，然后是一个奇怪的美元符号。
Dialogue: 0,0:28:07.23,0:28:08.46,english,,0,0,0,,And this is still a prompt.
Dialogue: 0,0:28:07.23,0:28:08.46,chinese,,0,0,0,,这仍然是一个提示符。
Dialogue: 0,0:28:08.46,0:28:12.27,english,,0,0,0,,I can still type commands at it, like clear, and everything gets cleaned up.
Dialogue: 0,0:28:08.46,0:28:12.27,chinese,,0,0,0,,我仍然可以在上面输入命令，比如 clear，然后一切都会被清除。
Dialogue: 0,0:28:12.27,0:28:13.71,english,,0,0,0,,But it just looks kind of stupid.
Dialogue: 0,0:28:12.27,0:28:13.71,chinese,,0,0,0,,但这看起来有点傻。
Dialogue: 0,0:28:13.71,0:28:18.24,english,,0,0,0,,If I run it again here with ./hello, it's just not very user friendly.
Dialogue: 0,0:28:13.71,0:28:18.24,chinese,,0,0,0,,我再运行一次 ./hello，它就不太友好。
Dialogue: 0,0:28:18.24,0:28:24.46,english,,0,0,0,,It is convention that when you're done running your program, you should ideally clean things up, move the cursor to the next line for the user.
Dialogue: 0,0:28:18.24,0:28:24.46,chinese,,0,0,0,,运行程序后的理想情况，你应该清理一下，将光标移动到下一行供用户使用。
Dialogue: 0,0:28:24.46,0:28:34.98,english,,0,0,0,,And so the backslash n is simply the special symbol, otherwise known as an escape sequence that C knows means move the cursor to the next line.
Dialogue: 0,0:28:24.46,0:28:34.98,chinese,,0,0,0,,因此， \{}n 只是一个特殊符号，也被称为转义序列，C 知道它表示将光标移到下一行。
Dialogue: 0,0:28:34.98,0:28:39.64,english,,0,0,0,,In other languages, Python among them, uses this same symbology as well.
Dialogue: 0,0:28:34.98,0:28:39.64,chinese,,0,0,0,,在别的语言里，比如 Python，也使用了这个符号。
Dialogue: 0,0:28:39.64,0:28:44.85,english,,0,0,0,,Now, if I go back to the code here and, for instance,
Dialogue: 0,0:28:39.64,0:28:44.85,chinese,,0,0,0,,现在，如果我回到这里的代码，例如，
Dialogue: 0,0:28:44.85,0:28:47.22,english,,0,0,0,,I try to do this differently.
Dialogue: 0,0:28:44.85,0:28:47.22,chinese,,0,0,0,,我尝试以不同的方式来做这个。
Dialogue: 0,0:28:47.22,0:28:49.02,english,,0,0,0,,Suppose I don't put the backslash n.
Dialogue: 0,0:28:47.22,0:28:49.02,chinese,,0,0,0,,假设我不加入反斜杠 n。
Dialogue: 0,0:28:49.02,0:28:52.86,english,,0,0,0,,I just hit Enter like a normal person would in Google Docs or Microsoft Word.
Dialogue: 0,0:28:49.02,0:28:52.86,chinese,,0,0,0,,我只是按下回车键，就像在 Google Docs 或 Microsoft Word 中一样。
Dialogue: 0,0:28:52.86,0:28:55.10,english,,0,0,0,,Let me go ahead and try compiling this program.
Dialogue: 0,0:28:52.86,0:28:55.10,chinese,,0,0,0,,让我试试编译这个程序。
Dialogue: 0,0:28:55.10,0:28:56.94,english,,0,0,0,,And this, you would hope, would work, right?
Dialogue: 0,0:28:55.10,0:28:56.94,chinese,,0,0,0,,你希望这能跑吧？
Dialogue: 0,0:28:56.94,0:29:02.22,english,,0,0,0,,You would hope this would print out hello, world and then a blank line because I move the cursor to the next line.
Dialogue: 0,0:28:56.94,0:29:02.22,chinese,,0,0,0,,你希望它会打印出 hello, world，然后是一个空行，因为我把光标移到了下一行。
Dialogue: 0,0:29:02.22,0:29:02.79,english,,0,0,0,,But no.
Dialogue: 0,0:29:02.79,0:29:07.29,english,,0,0,0,,If I run make hello now and try to compile that, C does not like this.
Dialogue: 0,0:29:02.79,0:29:07.29,chinese,,0,0,0,,如果我运行 make hello 尝试编译，会发现 C 语言并不能够这样。
Dialogue: 0,0:29:07.29,0:29:17.07,english,,0,0,0,,Now I get a different error, still on line 5, this time starting at character 12-- error, missing terminating double quote character and then some other esoteric stuff.
Dialogue: 0,0:29:07.29,0:29:17.07,chinese,,0,0,0,,现在又报了一个错，还是在第 5 行，这次是从第 12 个字符开始的——\N错误，缺少终止的双引号字符，然后是一些其他深奥的东西。
Dialogue: 0,0:29:17.07,0:29:21.90,english,,0,0,0,,And then this does not sound good-- fatal error this time, too many errors emitted, stopping now.
Dialogue: 0,0:29:17.07,0:29:21.90,chinese,,0,0,0,,然后，这听起来不太妙—— 致命错误，这次发出了太多的错误，现在停止。
Dialogue: 0,0:29:21.90,0:29:23.47,english,,0,0,0,,So I really screwed up here.
Dialogue: 0,0:29:21.90,0:29:23.47,chinese,,0,0,0,,所以我真的搞砸了。
Dialogue: 0,0:29:23.47,0:29:25.32,english,,0,0,0,,So why can't I do this?
Dialogue: 0,0:29:23.47,0:29:25.32,chinese,,0,0,0,,那么，为什么我不能这样做呢？
Dialogue: 0,0:29:25.32,0:29:26.19,english,,0,0,0,,Just because.
Dialogue: 0,0:29:25.32,0:29:26.19,chinese,,0,0,0,,只是因为
Dialogue: 0,0:29:26.19,0:29:31.38,english,,0,0,0,,The humans who designed C decided that if you have a string of text, it must stay on the same line.
Dialogue: 0,0:29:26.19,0:29:31.38,chinese,,0,0,0,,设计 C 的人决定，如果你有一串文本，它必须保持在同一行。
Dialogue: 0,0:29:31.38,0:29:32.76,english,,0,0,0,,It can get really long.
Dialogue: 0,0:29:31.38,0:29:32.76,chinese,,0,0,0,,它可能会变得非常长。
Dialogue: 0,0:29:32.76,0:29:36.15,english,,0,0,0,,It can soft wrap-- that is, without you hitting Enter.
Dialogue: 0,0:29:32.76,0:29:36.15,chinese,,0,0,0,,它可以软换行——也就是说，不需要你按回车键。
Dialogue: 0,0:29:36.15,0:29:38.22,english,,0,0,0,,But you can't hit Enter to create a new line.
Dialogue: 0,0:29:36.15,0:29:38.22,chinese,,0,0,0,,但你不能按回车键创建新行。
Dialogue: 0,0:29:38.22,0:29:43.95,english,,0,0,0,,If you deliberately want a new line, you have to indeed use this backslash n escape character.
Dialogue: 0,0:29:38.22,0:29:43.95,chinese,,0,0,0,,如果你确实想要新行，你必须使用这个 \{}n 转义字符。
Dialogue: 0,0:29:43.95,0:29:45.25,english,,0,0,0,,So let me go ahead and do this.
Dialogue: 0,0:29:43.95,0:29:45.25,chinese,,0,0,0,,我得这么做。
Dialogue: 0,0:29:45.25,0:29:46.71,english,,0,0,0,,Let me put it back.
Dialogue: 0,0:29:45.25,0:29:46.71,chinese,,0,0,0,,让我把反斜杠 n 放回去。
Dialogue: 0,0:29:46.71,0:29:48.72,english,,0,0,0,,Let me go back to my terminal window.
Dialogue: 0,0:29:46.71,0:29:48.72,chinese,,0,0,0,,回到终端窗口。
Dialogue: 0,0:29:48.72,0:29:50.08,english,,0,0,0,,I'll clear the screen again.
Dialogue: 0,0:29:48.72,0:29:50.08,chinese,,0,0,0,,再次清屏。
Dialogue: 0,0:29:50.08,0:29:54.09,english,,0,0,0,,Let me go ahead now and do make hello to recompile to that version-- ./hello.
Dialogue: 0,0:29:50.08,0:29:54.09,chinese,,0,0,0,,现在，让我继续 make hello，重新编译到该版本。 ./hello。
Dialogue: 0,0:29:54.09,0:29:54.90,english,,0,0,0,,And voila.
Dialogue: 0,0:29:54.90,0:29:57.78,english,,0,0,0,,We're back in business with hello.
Dialogue: 0,0:29:54.90,0:29:57.78,chinese,,0,0,0,,hello 又能跑了。
Dialogue: 0,0:29:57.78,0:30:04.92,english,,0,0,0,,All right, so now let's tease apart some other aspects of this code because there's a lot going on just to get us to say hello, world on the screen.
Dialogue: 0,0:29:57.78,0:30:04.92,chinese,,0,0,0,,好的，现在让我们来分析一下这段代码的其他方面，\N为了让我们在屏幕上显示 "Hello, world"，这里涉及到了相当多工作。
Dialogue: 0,0:30:04.92,0:30:10.14,english,,0,0,0,,For today, we're largely going to ignore this-- int main(void) and these curly braces here.
Dialogue: 0,0:30:04.92,0:30:10.14,chinese,,0,0,0,,今天，我们先忽略 int main(void) 和这些花括号。
Dialogue: 0,0:30:10.14,0:30:12.52,english,,0,0,0,,We'll come back to that before long as to why it's there.
Dialogue: 0,0:30:10.14,0:30:12.52,chinese,,0,0,0,,至于为什么会有这个问题，我们很快就会说到。
Dialogue: 0,0:30:12.52,0:30:19.18,english,,0,0,0,,But for now just think of int main(void) and these curly braces here as really being the C equivalent of when green flag clicked.
Dialogue: 0,0:30:12.52,0:30:19.18,chinese,,0,0,0,,不过，现在只需把 int main(void) 和这些花括号看作是看作是 C 版本的 "当绿旗被点击" 块。
Dialogue: 0,0:30:19.18,0:30:19.68,english,,0,0,0,,Why?
Dialogue: 0,0:30:19.68,0:30:20.63,english,,0,0,0,,You just need it there.
Dialogue: 0,0:30:19.68,0:30:20.63,chinese,,0,0,0,,你只需要它在那里。
Dialogue: 0,0:30:20.63,0:30:22.32,english,,0,0,0,,That's how you get your program going.
Dialogue: 0,0:30:20.63,0:30:22.32,chinese,,0,0,0,,这就是启动程序的方式。
Dialogue: 0,0:30:22.32,0:30:26.34,english,,0,0,0,,And main is indeed going to be some special function, but more on that another time.
Dialogue: 0,0:30:22.32,0:30:26.34,chinese,,0,0,0,,而 main 实际上会是一个特殊的函数，但是关于这个我们以后再说。
Dialogue: 0,0:30:26.34,0:30:28.95,english,,0,0,0,,But why do I have this line of code here?
Dialogue: 0,0:30:26.34,0:30:28.95,chinese,,0,0,0,,那么为什么我有了这一行代码？
Dialogue: 0,0:30:28.95,0:30:33.99,english,,0,0,0,,The correct spelling is indeed stdio.h, S-T-D-I-O dot H.
Dialogue: 0,0:30:28.95,0:30:33.99,chinese,,0,0,0,,正确的拼写实际上是 stdio.h，S-T-D-I-O dot H。
Dialogue: 0,0:30:33.99,0:30:37.50,english,,0,0,0,,And they're angled brackets this time, so that's a little new.
Dialogue: 0,0:30:33.99,0:30:37.50,chinese,,0,0,0,,而且这次使用的是尖括号，所以这有点新奇。
Dialogue: 0,0:30:37.50,0:30:40.29,english,,0,0,0,,There's a hash and then an include keyword.
Dialogue: 0,0:30:37.50,0:30:40.29,chinese,,0,0,0,,有一个井号，然后是一个 include 关键字。
Dialogue: 0,0:30:40.29,0:30:45.16,english,,0,0,0,,If you don't know what something is, there's not really that much harm in just getting rid of it and see what happens.
Dialogue: 0,0:30:40.29,0:30:45.16,chinese,,0,0,0,,如果你不知道某个东西是什么，那么干掉它也没有太大的害处，看看会发生什么。
Dialogue: 0,0:30:45.16,0:30:46.36,english,,0,0,0,,So let me delete that line.
Dialogue: 0,0:30:45.16,0:30:46.36,chinese,,0,0,0,,让我删除那一行。
Dialogue: 0,0:30:46.36,0:30:50.16,english,,0,0,0,,Let me go back to my terminal window, clear the screen, and then run make hello again.
Dialogue: 0,0:30:46.36,0:30:50.16,chinese,,0,0,0,,让我回到终端窗口，清空屏幕，然后再次运行 make hello。
Dialogue: 0,0:30:50.16,0:30:53.29,english,,0,0,0,,And let's try compiling this program now without that first line.
Dialogue: 0,0:30:50.16,0:30:53.29,chinese,,0,0,0,,尝试编译这个程序，现在没有了那个第一行。
Dialogue: 0,0:30:53.29,0:30:53.79,english,,0,0,0,,Why?
Dialogue: 0,0:30:53.79,0:30:56.34,english,,0,0,0,,I don't understand it, so let's see what happens.
Dialogue: 0,0:30:53.79,0:30:56.34,chinese,,0,0,0,,我不理解它，所以让我们看看会发生什么。
Dialogue: 0,0:30:56.34,0:31:09.15,english,,0,0,0,,All right, here's yet another error, but let's see-- hello.c, line 5, character 5-- so it's pretty early on-- error, implicitly declaring library function printf with type int and then dot, dot, dot.
Dialogue: 0,0:30:56.34,0:31:09.15,chinese,,0,0,0,,好吧，又报了个错误，来看看 hello.c 第 5 行，第 5 个字符——\N错误，隐式声明库函数 printf，类型为 int，然后有点点点。
Dialogue: 0,0:31:09.15,0:31:14.49,english,,0,0,0,,So implicitly declaring library function printf-- so this is very cryptic sounding.
Dialogue: 0,0:31:09.15,0:31:14.49,chinese,,0,0,0,,隐式声明库函数 printf—— 这听起来一点都不直白。
Dialogue: 0,0:31:14.49,0:31:16.92,english,,0,0,0,,You'll get better at understanding phrases like these.
Dialogue: 0,0:31:14.49,0:31:16.92,chinese,,0,0,0,,你会越来越擅长理解这类短语。
Dialogue: 0,0:31:16.92,0:31:22.62,english,,0,0,0,,But apparently, I do need the include line for stdio.h.
Dialogue: 0,0:31:16.92,0:31:22.62,chinese,,0,0,0,,但显然，我确实需要 include stdio.h 这行。
Dialogue: 0,0:31:22.62,0:31:23.82,english,,0,0,0,,But why?
Dialogue: 0,0:31:23.82,0:31:33.33,english,,0,0,0,,Based on this symptom, what might your instinct be for what that first line of code is doing for us in the first place?
Dialogue: 0,0:31:23.82,0:31:33.33,chinese,,0,0,0,,根据刚才的现象，你可能会直观地感觉到第一行代码为我们做了点什么，
Dialogue: 0,0:31:33.33,0:31:35.37,english,,0,0,0,,Why intuitively must it be there?
Dialogue: 0,0:31:33.33,0:31:35.37,chinese,,0,0,0,,它才必须得存在。
Dialogue: 0,0:31:35.37,0:31:37.29,english,,0,0,0,,AUDIENCE: It's how the [INAUDIBLE] functions.
Dialogue: 0,0:31:37.29,0:31:38.29,english,,0,0,0,,DAVID J. MALAN: Exactly.
Dialogue: 0,0:31:37.29,0:31:38.29,chinese,,0,0,0,,确实。
Dialogue: 0,0:31:38.29,0:31:42.13,english,,0,0,0,,It's like importing a library so that you can do things like print things out on the screen.
Dialogue: 0,0:31:38.29,0:31:42.13,chinese,,0,0,0,,这就是导入一个库，这样你可以在屏幕上输出东西了。
Dialogue: 0,0:31:42.13,0:31:45.22,english,,0,0,0,,Now, in Scratch, you didn't have to do this for most of the puzzle pieces.
Dialogue: 0,0:31:42.13,0:31:45.22,chinese,,0,0,0,,在 Scratch 中，对于大多数的拼图块，你都不需要这样做。
Dialogue: 0,0:31:45.22,0:31:47.95,english,,0,0,0,,But you might recall that partway through week 0,
Dialogue: 0,0:31:45.22,0:31:47.95,chinese,,0,0,0,,但你可能还记得，在第 0 周的中途，
Dialogue: 0,0:31:47.95,0:32:00.10,english,,0,0,0,,I went to the Extensions button at the bottom left of the Scratch screen, and I imported some extra puzzle pieces for text to speech that gave us the creepy humanized voice that actually came out of the cat's mouth.
Dialogue: 0,0:31:47.95,0:32:00.10,chinese,,0,0,0,,但也许你还记得，在 Lecture 0 的中途，我点击了 Scratch 屏幕左下角的 "扩展" ，\N然后导入了一些额外的文本朗读的拼图块，后来让猫发出了有点机械诡异的人声。
Dialogue: 0,0:32:00.10,0:32:04.39,english,,0,0,0,,Well, that was like adding a library-- code that someone else wrote.
Dialogue: 0,0:32:00.10,0:32:04.39,chinese,,0,0,0,,这就像添加了一个库—— 别人写的代码。
Dialogue: 0,0:32:04.39,0:32:06.55,english,,0,0,0,,In that case, it was a third party.
Dialogue: 0,0:32:04.39,0:32:06.55,chinese,,0,0,0,,在那个情况下，它是一个第三方库。
Dialogue: 0,0:32:06.55,0:32:08.38,english,,0,0,0,,But I gave myself access to it.
Dialogue: 0,0:32:06.55,0:32:08.38,chinese,,0,0,0,,我让程序可以使用它。
Dialogue: 0,0:32:08.38,0:32:09.25,english,,0,0,0,,Same here.
Dialogue: 0,0:32:08.38,0:32:09.25,chinese,,0,0,0,,这里是一个道理。
Dialogue: 0,0:32:09.25,0:32:13.90,english,,0,0,0,,Turns out that you don't really get printf automatically in C.
Dialogue: 0,0:32:09.25,0:32:13.90,chinese,,0,0,0,,原来在 C 语言中并不能自动获得 printf 函数。
Dialogue: 0,0:32:13.90,0:32:20.02,english,,0,0,0,,You have to include a so-called header file that declares that function to exist.
Dialogue: 0,0:32:13.90,0:32:20.02,chinese,,0,0,0,,你得包含一个所谓的头文件，声明该函数的存在。
Dialogue: 0,0:32:20.02,0:32:22.57,english,,0,0,0,,Now, the reason for this historically is just efficiency.
Dialogue: 0,0:32:20.02,0:32:22.57,chinese,,0,0,0,,这样做的历史原因其实是效率问题。
Dialogue: 0,0:32:22.57,0:32:30.61,english,,0,0,0,,Back in the day when computers were really slower and resource constrained, you don't want to just give yourself access to the entire kitchen sink of functionality.
Dialogue: 0,0:32:22.57,0:32:30.61,chinese,,0,0,0,,在电脑运行速度较慢、资源有限的年代，你不想让自己随意访问所有函数。
Dialogue: 0,0:32:30.61,0:32:34.69,english,,0,0,0,,You only want to include only the functions you actually care about.
Dialogue: 0,0:32:30.61,0:32:34.69,chinese,,0,0,0,,你只想包含自己真正用到的函数。
Dialogue: 0,0:32:34.69,0:32:42.68,english,,0,0,0,,Nowadays, it's a copy/paste step because you almost always want to print something out on the screen, at least when writing programs like these.
Dialogue: 0,0:32:34.69,0:32:42.68,chinese,,0,0,0,,如今，这只是一个复制/粘贴的步骤，\N因为你几乎总是想在屏幕上打印出一些内容，至少在编写这类程序时是这样。
Dialogue: 0,0:32:42.68,0:32:50.35,english,,0,0,0,,But these so-called header files contain enough information about all of the functions in what's called the Standard I/O Library.
Dialogue: 0,0:32:42.68,0:32:50.35,chinese,,0,0,0,,这些所谓的头文件包含了有关标准 I/O 库中所有函数的足够信息。
Dialogue: 0,0:32:50.35,0:32:53.45,english,,0,0,0,,And standard I/O just means standard Input and Output.
Dialogue: 0,0:32:50.35,0:32:53.45,chinese,,0,0,0,,而 stdio，standard I/O 是指 standard Input and Output，标准输入输出。
Dialogue: 0,0:32:53.45,0:32:54.70,english,,0,0,0,,And that's appropriate, right?
Dialogue: 0,0:32:53.45,0:32:54.70,chinese,,0,0,0,,这很合适吧？
Dialogue: 0,0:32:54.70,0:32:57.01,english,,0,0,0,,Because printing is pretty basic output.
Dialogue: 0,0:32:54.70,0:32:57.01,chinese,,0,0,0,,因为打印是相当基本的输出操作。
Dialogue: 0,0:32:57.01,0:33:01.31,english,,0,0,0,,Turns out, there's other functions for getting input from the human's keyboard-- more on that in a bit.
Dialogue: 0,0:32:57.01,0:33:01.31,chinese,,0,0,0,,实际上，还有其他从键盘获取输入的函数——稍后我们会详细讨论。
Dialogue: 0,0:33:01.31,0:33:07.63,english,,0,0,0,,But any time you want to print something on the screen in C, you indeed need to include this header file at the top of your code.
Dialogue: 0,0:33:01.31,0:33:07.63,chinese,,0,0,0,,每当你想在 C 中在屏幕上打印一些内容时，确实需要在代码的顶部包含这个头文件。
Dialogue: 0,0:33:07.63,0:33:11.35,english,,0,0,0,,And that's going to essentially inform the compiler, hey, compiler,
Dialogue: 0,0:33:07.63,0:33:11.35,chinese,,0,0,0,,这实际上会告诉编译器，嘿，编译器，
Dialogue: 0,0:33:11.35,0:33:18.32,english,,0,0,0,,I want to use functionality from the Standard I/O Library, including printf in this case.
Dialogue: 0,0:33:11.35,0:33:18.32,chinese,,0,0,0,,我想使用标准 I/O 库的功能，包括这里的 printf。
Dialogue: 0,0:33:18.32,0:33:24.04,english,,0,0,0,,And if you omit the header file by accident, it's just not going to work because it doesn't know what printf is.
Dialogue: 0,0:33:18.32,0:33:24.04,chinese,,0,0,0,,如果你不小心省略了头文件，程序就跑不起来，因为它不知道 printf 是什么。
Dialogue: 0,0:33:24.04,0:33:27.97,english,,0,0,0,,It's some unrecognized symbol in that case.
Dialogue: 0,0:33:24.04,0:33:27.97,chinese,,0,0,0,,在这种情况下，它是一个无法识别的符号。
Dialogue: 0,0:33:27.97,0:33:37.59,english,,0,0,0,,All right, questions, then, about this line of code, this line of code here, or what these header files are?
Dialogue: 0,0:33:27.97,0:33:37.59,chinese,,0,0,0,,大家关于这行代码，以及头文件有什么疑问吗？
Dialogue: 0,0:33:37.59,0:33:40.89,english,,0,0,0,,All right, you might wonder, well, how do you know what functions exist?
Dialogue: 0,0:33:37.59,0:33:40.89,chinese,,0,0,0,,好吧，你可能会问，那你怎么知道的，哪个头文件里有哪些函数呢？
Dialogue: 0,0:33:40.89,0:33:43.99,english,,0,0,0,,How do you know what files you might indeed want to include?
Dialogue: 0,0:33:40.89,0:33:43.99,chinese,,0,0,0,,你怎么确定要不要 include 一个库？
Dialogue: 0,0:33:43.99,0:33:48.72,english,,0,0,0,,Well, it turns out that C is a many-year-old language, and it has ample documentation.
Dialogue: 0,0:33:43.99,0:33:48.72,chinese,,0,0,0,,其实 C 语言这么历史悠久，它积攒了大量的文档和资料。
Dialogue: 0,0:33:48.72,0:33:52.77,english,,0,0,0,,A caveat is that its documentation isn't necessarily all that user friendly.
Dialogue: 0,0:33:48.72,0:33:52.77,chinese,,0,0,0,,但是它的文档并不一定对用户很友好。
Dialogue: 0,0:33:52.77,0:34:01.68,english,,0,0,0,,But what we have for the course is a simplified version of the official documentation for C at this URL here, manual.cs50.io.
Dialogue: 0,0:33:52.77,0:34:01.68,chinese,,0,0,0,,所以我们为这门课提供了 C 语言官方文档的简化版，网址是 manual.cs50.io。
Dialogue: 0,0:34:01.68,0:34:06.15,english,,0,0,0,,So in the world of C, and other languages too, there are what are called manual pages.
Dialogue: 0,0:34:01.68,0:34:06.15,chinese,,0,0,0,,在 C 语言和其他语言的世界里，都有所谓的手册页文档。
Dialogue: 0,0:34:06.15,0:34:14.56,english,,0,0,0,,And these are just text-based documentation that, honestly, is typically written in a voice that you have to be an experienced programmer to understand some of it.
Dialogue: 0,0:34:06.15,0:34:14.56,chinese,,0,0,0,,老实说，这些带有特别大文字量的文档，\N通篇的语调透露着你必须是一个经验丰富的程序员才能理解。
Dialogue: 0,0:34:14.56,0:34:24.07,english,,0,0,0,,So what we've done in this version of the same documentation is we've imported all of the original official documentation, but we've added less comfortable translations in English
Dialogue: 0,0:34:14.56,0:34:24.07,chinese,,0,0,0,,在这门课的文档中，我们导入了所有官方的原始文档，\N但是我们还为你可能在课堂上使用的很多函数添加了不太复杂的英文翻译，
Dialogue: 0,0:34:24.07,0:34:27.71,english,,0,0,0,,for a lot of the functionality that you might use in class just to help onboard you.
Dialogue: 0,0:34:24.07,0:34:27.71,chinese,,0,0,0,,以帮助你入门。
Dialogue: 0,0:34:27.71,0:34:30.63,english,,0,0,0,,So at the end of the day, you don't need this documentation long term.
Dialogue: 0,0:34:27.71,0:34:30.63,chinese,,0,0,0,,你不需要长期使用这些文档。
Dialogue: 0,0:34:30.63,0:34:39.96,english,,0,0,0,,But just to get started, we'll translate it into terminology that you might appreciate from a teaching assistant, for instance, as opposed to the original author of these documents.
Dialogue: 0,0:34:30.63,0:34:39.96,chinese,,0,0,0,,但是为了入门，我们的助教把它们翻译成了对你来说更好理解的术语，而不是原始文档那样详尽严谨。
Dialogue: 0,0:34:39.96,0:34:52.83,english,,0,0,0,,And so, for instance, if you were interested in reading up on what functions exist in the stdio.h file, well, you could go to a URL like this, or you could search for it at manual.cs50.io.
Dialogue: 0,0:34:39.96,0:34:52.83,chinese,,0,0,0,,例如，如果你想阅读一下 stdio.h 文件中存在哪些函数，\N你可以访问这个网址，或是在 manual.cs50.io 上进行搜索。
Dialogue: 0,0:34:39.96,0:34:52.83,annotation,,0,0,0,,*注：这个网站不需要科学访问。
Dialogue: 0,0:34:52.83,0:34:58.35,english,,0,0,0,,That would show you a list of all of the available functions in that library, and printf indeed would be one of them.
Dialogue: 0,0:34:52.83,0:34:58.35,chinese,,0,0,0,,就可以显示出该库中所有可用函数的列表，而 printf 确实是其中之一。
Dialogue: 0,0:34:58.35,0:35:04.11,english,,0,0,0,,And then you could click further on that, reaching a URL like this that's going to give you all of the documentation for how to use printf.
Dialogue: 0,0:34:58.35,0:35:04.11,chinese,,0,0,0,,然后你可以进一步点击，访问这个网址，它提供了 printf 用法的所有文档。
Dialogue: 0,0:35:04.11,0:35:07.56,english,,0,0,0,,It turns out, you can do even more than just printing out hello, world.
Dialogue: 0,0:35:04.11,0:35:07.56,chinese,,0,0,0,,事实证明，你甚至可以做的不仅仅是打印出 "Hello, World"。
Dialogue: 0,0:35:07.56,0:35:09.45,english,,0,0,0,,And we'll scratch the surface of that today.
Dialogue: 0,0:35:07.56,0:35:09.45,chinese,,0,0,0,,今天我们只会浅尝辄止。
Dialogue: 0,0:35:09.45,0:35:18.16,english,,0,0,0,,But it turns out that the documentation will always be your authoritative source ultimately for questions like, what can I do, and how can I do it?
Dialogue: 0,0:35:09.45,0:35:18.16,chinese,,0,0,0,,但是，文档将始终是诸如 "我可以做什么，怎么做" 等问题的权威信息源。
Dialogue: 0,0:35:18.16,0:35:25.98,english,,0,0,0,,Meanwhile, it turns out that CS50 has its own library and accessible via header file called cs50.h.
Dialogue: 0,0:35:18.16,0:35:25.98,chinese,,0,0,0,,同时，CS50 有自己的库，可以通过名为 cs50.h 的头文件访问。
Dialogue: 0,0:35:18.16,0:35:25.98,annotation,,0,0,0,,*注：本地环境下是没有的，所以更推荐使用提到的云端 VS Code 同步学习。
Dialogue: 0,0:35:25.98,0:35:34.11,english,,0,0,0,,It turns out in C that output is actually pretty easy, relatively speaking, once you get used to all the curly braces, parentheses, quote marks, and the like.
Dialogue: 0,0:35:25.98,0:35:34.11,chinese,,0,0,0,,最终你会很习惯于 C 语言里的大括号、小括号、引号等，输出实际上是非常容易的。
Dialogue: 0,0:35:34.11,0:35:36.67,english,,0,0,0,,But input is a little more difficult.
Dialogue: 0,0:35:34.11,0:35:36.67,chinese,,0,0,0,,但输入就比较困难了。
Dialogue: 0,0:35:36.67,0:35:41.10,english,,0,0,0,,And if you have programmed before, input's not that hard to do in Python.
Dialogue: 0,0:35:36.67,0:35:41.10,chinese,,0,0,0,,如果你以前学过编程，用 Python 输入并不难。
Dialogue: 0,0:35:41.10,0:35:42.54,english,,0,0,0,,It's not that hard to do in Java.
Dialogue: 0,0:35:41.10,0:35:42.54,chinese,,0,0,0,,在 Java 中做到这一点并不难。
Dialogue: 0,0:35:42.54,0:35:46.31,english,,0,0,0,,It's more difficult to do in C. And we'll see why in a couple of weeks.
Dialogue: 0,0:35:42.54,0:35:46.31,chinese,,0,0,0,,在 C 里面复杂一点，过几周你就看出来了。
Dialogue: 0,0:35:46.31,0:35:56.43,english,,0,0,0,,But for the first couple of weeks of the class, we actually provide you with some training wheels, of sorts, whereby we have a number of functions that are declared in this file, cs50.h.
Dialogue: 0,0:35:46.31,0:35:56.43,chinese,,0,0,0,,但在课程的前几周，我们实际上为你提供了一些辅助的东西，我们在 cs50.h 文件里声明了一些函数。
Dialogue: 0,0:35:46.31,0:35:56.43,annotation,,0,0,0,,*注：training wheels 指自行车后轮两边的辅助轮。
Dialogue: 0,0:35:56.43,0:35:59.22,english,,0,0,0,,It lives its documentation at a URL like this.
Dialogue: 0,0:35:56.43,0:35:59.22,chinese,,0,0,0,,它的文档在这个网址上。
Dialogue: 0,0:35:59.22,0:36:01.23,english,,0,0,0,,And in a moment, we'll use a few of these.
Dialogue: 0,0:35:59.22,0:36:01.23,chinese,,0,0,0,,稍后，我们将使用其中的一些函数。
Dialogue: 0,0:36:01.23,0:36:11.79,english,,0,0,0,,You'll see that CS50 provides you with some functions like get_char for get a single character from the user's keyboard, get_int to get an integer from the user's keyboard,
Dialogue: 0,0:36:01.23,0:36:11.79,chinese,,0,0,0,,你会发现 CS50 为你提供了一些函数，\N例如 get_char 用于从用户键盘获取单个字符，get_int 用于从用户键盘获取整数，
Dialogue: 0,0:36:11.79,0:36:16.93,english,,0,0,0,,get_string to get a sequence of text from the user's keyboard, and a bunch of others as well.
Dialogue: 0,0:36:11.79,0:36:16.93,chinese,,0,0,0,,get_string 用于从用户键盘获取文本序列，以及其他一些函数。
Dialogue: 0,0:36:16.93,0:36:26.71,english,,0,0,0,,So let's actually use some of these functions, how about, by revisiting, really, the second program we wrote in Scratch last time, which adds some input to the output.
Dialogue: 0,0:36:16.93,0:36:26.71,chinese,,0,0,0,,所以让我们实际使用其中的一些函数，\N比如重新访问上次在 Scratch 中编写的第二个程序，它在输出中添加了一些输入。
Dialogue: 0,0:36:26.71,0:36:28.83,english,,0,0,0,,So first version of Scratch was just hello, world.
Dialogue: 0,0:36:26.71,0:36:28.83,chinese,,0,0,0,,Scratch 的第一个版本只是打印出 hello, world，
Dialogue: 0,0:36:28.83,0:36:31.20,english,,0,0,0,,Said the same thing every time you click the green flag.
Dialogue: 0,0:36:28.83,0:36:31.20,chinese,,0,0,0,,每次你点击绿旗时都是这样。
Dialogue: 0,0:36:31.20,0:36:33.18,english,,0,0,0,,Version 2, recall, though, did this.
Dialogue: 0,0:36:31.20,0:36:33.18,chinese,,0,0,0,,版本 2，回想一下，做了这个。
Dialogue: 0,0:36:33.18,0:36:35.19,english,,0,0,0,,It asked the user, what's your name?
Dialogue: 0,0:36:33.18,0:36:35.19,chinese,,0,0,0,,它会问用户，"你叫什么名字？"
Dialogue: 0,0:36:35.19,0:36:40.87,english,,0,0,0,,And then that somehow gave it back a return value, we called it.
Dialogue: 0,0:36:35.19,0:36:40.87,chinese,,0,0,0,,然后它会返回一个值，我们称之为返回值。
Dialogue: 0,0:36:40.87,0:36:46.42,english,,0,0,0,,And we then joined hello and that name to say something a little more interesting on the screen.
Dialogue: 0,0:36:40.87,0:36:46.42,chinese,,0,0,0,,然后我们把 hello 和那个名字组合起来，在屏幕上显示更加有意思了。
Dialogue: 0,0:36:46.42,0:36:48.42,english,,0,0,0,,So what did that model look like?
Dialogue: 0,0:36:46.42,0:36:48.42,chinese,,0,0,0,,这个模型是什么样的？
Dialogue: 0,0:36:48.42,0:36:49.56,english,,0,0,0,,Same thing as before.
Dialogue: 0,0:36:48.42,0:36:49.56,chinese,,0,0,0,,还是老样子。
Dialogue: 0,0:36:49.56,0:36:54.48,english,,0,0,0,,We've got a function in the middle where function is like the code implementation of our algorithm.
Dialogue: 0,0:36:49.56,0:36:54.48,chinese,,0,0,0,,中间有一个函数，这个函数就是我们算法的代码实现。
Dialogue: 0,0:36:54.48,0:37:00.00,english,,0,0,0,,That takes in one or more arguments, like what is it you want to say on the screen ultimately?
Dialogue: 0,0:36:54.48,0:37:00.00,chinese,,0,0,0,,它接收一个或多个参数，比如你最终想在屏幕上说的话。
Dialogue: 0,0:37:00.00,0:37:03.58,english,,0,0,0,,And return value, in this case, is going to be actually a value that comes back.
Dialogue: 0,0:37:00.00,0:37:03.58,chinese,,0,0,0,,返回值就是这个函数返回的那个值。
Dialogue: 0,0:37:03.58,0:37:08.49,english,,0,0,0,,So in the case of getting input, we can consider this ask block again, like last week.
Dialogue: 0,0:37:03.58,0:37:08.49,chinese,,0,0,0,,我们再来考虑考虑这个函数块，这次带上有输入的情况。
Dialogue: 0,0:37:08.49,0:37:12.42,english,,0,0,0,,The input to it is whatever words of English you want to ask the user.
Dialogue: 0,0:37:08.49,0:37:12.42,chinese,,0,0,0,,输入的内容就是你想问用户的英语句子。
Dialogue: 0,0:37:12.42,0:37:14.67,english,,0,0,0,,And then it returns a value.
Dialogue: 0,0:37:12.42,0:37:14.67,chinese,,0,0,0,,然后返回一个值。
Dialogue: 0,0:37:14.67,0:37:17.55,english,,0,0,0,,And this was called by default in MIT'S world answer.
Dialogue: 0,0:37:14.67,0:37:17.55,chinese,,0,0,0,,在 MIT 的 Scratch 里面，默认的返回值叫做 answer。
Dialogue: 0,0:37:17.55,0:37:22.30,english,,0,0,0,,But we'll see in C, you can call these return values anything you want ultimately in variables.
Dialogue: 0,0:37:17.55,0:37:22.30,chinese,,0,0,0,,你看这 C 语言里面，你可以随心所欲地用变量接住函数的返回值。
Dialogue: 0,0:37:22.30,0:37:24.10,english,,0,0,0,,But this is different from a side effect.
Dialogue: 0,0:37:22.30,0:37:24.10,chinese,,0,0,0,,这个和副作用不一样。
Dialogue: 0,0:37:24.10,0:37:28.98,english,,0,0,0,,A side effect is just something visual often that happens on the screen, like the speech bubble or hello, world.
Dialogue: 0,0:37:24.10,0:37:28.98,chinese,,0,0,0,,副作用是指屏幕上出现的视觉效果，比如语音气泡 "hello, world"。
Dialogue: 0,0:37:28.98,0:37:34.02,english,,0,0,0,,A return value is actually a value you get back from a function that you can use or reuse.
Dialogue: 0,0:37:28.98,0:37:34.02,chinese,,0,0,0,,返回值就是一个函数的输出，可以拿来反复使用。
Dialogue: 0,0:37:34.02,0:37:38.40,english,,0,0,0,,So how do we convert this Scratch block from last week to C code this week?
Dialogue: 0,0:37:34.02,0:37:38.40,chinese,,0,0,0,,那我们怎么来把上周的 Scratch 代码块转换为 C 代码呢？
Dialogue: 0,0:37:38.40,0:37:42.58,english,,0,0,0,,Well, if you want to ask the user for something like their name, you can do this.
Dialogue: 0,0:37:38.40,0:37:42.58,chinese,,0,0,0,,如果你想询问用户姓名之类的信息，可以这样做。
Dialogue: 0,0:37:42.58,0:37:45.60,english,,0,0,0,,You use a CS50 function called get_string.
Dialogue: 0,0:37:42.58,0:37:45.60,chinese,,0,0,0,,会用到的是 CS50 里的函数 get_string。
Dialogue: 0,0:37:45.60,0:37:49.95,english,,0,0,0,,And you use the parentheses to represent here comes the inputs there too.
Dialogue: 0,0:37:45.60,0:37:49.95,chinese,,0,0,0,,你使用括号来表示这里有输入。
Dialogue: 0,0:37:49.95,0:37:54.30,english,,0,0,0,,You can then put the sentence you want to ask the user-- quote/unquote, what's your name?
Dialogue: 0,0:37:49.95,0:37:54.30,chinese,,0,0,0,,然后你可以放置你想要问用户的句子—— 不带引号的 What's your name。
Dialogue: 0,0:37:54.30,0:37:57.15,english,,0,0,0,,But you do indeed need the quotes literally in C.
Dialogue: 0,0:37:54.30,0:37:57.15,chinese,,0,0,0,,不过在 C 语言里确实需要一对引号。
Dialogue: 0,0:37:57.15,0:37:59.22,english,,0,0,0,,So I'll go ahead and add those as well.
Dialogue: 0,0:37:57.15,0:37:59.22,chinese,,0,0,0,,所以我得添加上。
Dialogue: 0,0:37:59.22,0:38:08.99,english,,0,0,0,,Subtle, but I've deliberately included a space after the question mark, but before the double quote, just so that the cursor moves one step over because, in this case,
Dialogue: 0,0:37:59.22,0:38:08.99,chinese,,0,0,0,,微小的细节，但我有意在问号后面，双引号前面加了一个空格，\N只是为了让光标向右移动一格，因为在这种情况下，
Dialogue: 0,0:38:08.99,0:38:11.79,english,,0,0,0,,we're not going to get a special speech box like we did in Scratch.
Dialogue: 0,0:38:08.99,0:38:11.79,chinese,,0,0,0,,我们不会得到像在 Scratch 中那样的特殊语音框。
Dialogue: 0,0:38:11.79,0:38:19.80,english,,0,0,0,,It's just going to leave the cursor where it is, so we'll see that, aesthetically, that just moves the blinking cursor one space after the sentence on the screen.
Dialogue: 0,0:38:11.79,0:38:19.80,chinese,,0,0,0,,光标会留在原处，所以在屏幕上看到，在句子后面留出来一个空格，其后才是闪烁的光标。
Dialogue: 0,0:38:19.80,0:38:27.18,english,,0,0,0,,All right, but the catch is with Scratch, we just automatically got back the answer from the user in a special variable called answer.
Dialogue: 0,0:38:19.80,0:38:27.18,chinese,,0,0,0,,问题是使用 Scratch 时，我们会自动将用户的答案存储到 answer 这个特殊变量中。
Dialogue: 0,0:38:27.18,0:38:30.27,english,,0,0,0,,In C, you're going to have to be a little more specific.
Dialogue: 0,0:38:27.18,0:38:30.27,chinese,,0,0,0,,在 C 语言，你必须说得更具体一些。
Dialogue: 0,0:38:30.27,0:38:40.42,english,,0,0,0,,In C, If you want to get back a return value from a function like get_string, you have to use an equal sign and then the name of a variable on the left.
Dialogue: 0,0:38:30.27,0:38:40.42,chinese,,0,0,0,,在 C 语言里，如果要从函数（如 get_string）中获取返回值，\N必须使用等号，然后在左边输入变量名。
Dialogue: 0,0:38:40.42,0:38:42.28,english,,0,0,0,,The choice of variables is up to you.
Dialogue: 0,0:38:40.42,0:38:42.28,chinese,,0,0,0,,用什么变量来接住这个返回值由你来决定。
Dialogue: 0,0:38:42.28,0:38:44.29,english,,0,0,0,,I could have called this anything-- x, y, z.
Dialogue: 0,0:38:42.28,0:38:44.29,chinese,,0,0,0,,可以给它起任何名字—— x、y、z。
Dialogue: 0,0:38:44.29,0:38:47.47,english,,0,0,0,,I'm going to more descriptively call it answer for parity with what
Dialogue: 0,0:38:44.29,0:38:47.47,chinese,,0,0,0,,我比较愿意把它叫做 answer，
Dialogue: 0,0:38:47.47,0:38:48.88,english,,0,0,0,,MIT did with Scratch.
Dialogue: 0,0:38:47.47,0:38:48.88,chinese,,0,0,0,,因为 MIT 的 Scratch 里是这么做的。
Dialogue: 0,0:38:48.88,0:38:53.09,english,,0,0,0,,But notice that this doesn't represent equality, per se.
Dialogue: 0,0:38:48.88,0:38:53.09,chinese,,0,0,0,,但要注意，这里的等号并不代表相等。
Dialogue: 0,0:38:53.09,0:38:55.64,english,,0,0,0,,This is assignment in this case.
Dialogue: 0,0:38:53.09,0:38:55.64,chinese,,0,0,0,,这是的意思是赋值。
Dialogue: 0,0:38:55.64,0:39:03.59,english,,0,0,0,,So in C, when you use a single equal sign, that means copy the value on the right over to the value on the left-- from right to left.
Dialogue: 0,0:38:55.64,0:39:03.59,chinese,,0,0,0,,在 C 语言中，当你使用单个等号时，就是说把右边的值复制到左边的值—— 是从右到左。
Dialogue: 0,0:39:03.59,0:39:05.39,english,,0,0,0,,So what does this do for us?
Dialogue: 0,0:39:03.59,0:39:05.39,chinese,,0,0,0,,这对我们有什么作用呢？
Dialogue: 0,0:39:05.39,0:39:14.75,english,,0,0,0,,Well, if get_string is a function that prompts the user with, quote/unquote, what's your name, and it has I claim a return value, that means it hands me back some value.
Dialogue: 0,0:39:05.39,0:39:14.75,chinese,,0,0,0,,如果 get_string 是一个提示用户 "你叫什么名字?" 的函数，\N并且我声明它有一个返回值，那么这意味着它会某个值传递给我。
Dialogue: 0,0:39:14.75,0:39:17.96,english,,0,0,0,,But it's up to me in C to do something with that value.
Dialogue: 0,0:39:14.75,0:39:17.96,chinese,,0,0,0,,怎么样利用这个值完全取决于我接下来编写的 C 代码。
Dialogue: 0,0:39:17.96,0:39:21.52,english,,0,0,0,,So if I want to copy that value into a variable that I can use and reuse,
Dialogue: 0,0:39:17.96,0:39:21.52,chinese,,0,0,0,,我想把这个值复制到一个变量中，就可以重复使用它了，
Dialogue: 0,0:39:21.52,0:39:27.34,english,,0,0,0,,I use an equal sign, and I invent on the left-hand side of that equal sign any variable name I want.
Dialogue: 0,0:39:21.52,0:39:27.34,chinese,,0,0,0,,我就使用一个等号，并且在等号的左边发明一个任意的变量名。
Dialogue: 0,0:39:27.34,0:39:28.45,english,,0,0,0,,There are certain rules.
Dialogue: 0,0:39:27.34,0:39:28.45,chinese,,0,0,0,,有一些规则。
Dialogue: 0,0:39:28.45,0:39:29.70,english,,0,0,0,,There are certain conventions.
Dialogue: 0,0:39:28.45,0:39:29.70,chinese,,0,0,0,,有一些惯例。
Dialogue: 0,0:39:29.70,0:39:34.57,english,,0,0,0,,But generally if you use a single word with all lowercase, you're in good shape.
Dialogue: 0,0:39:29.70,0:39:34.57,chinese,,0,0,0,,但通常如果你使用一个全小写的单词，那就没问题。
Dialogue: 0,0:39:34.57,0:39:37.04,english,,0,0,0,,But C's a little more pedantic than that.
Dialogue: 0,0:39:34.57,0:39:37.04,chinese,,0,0,0,,但 C 语言对此还有一些要求。
Dialogue: 0,0:39:37.04,0:39:43.33,english,,0,0,0,,And those of you who have programmed before might not be used to this, for instance, in Python, which is a world we'll get to in a few weeks.
Dialogue: 0,0:39:37.04,0:39:43.33,chinese,,0,0,0,,以前学过编程的人可能不习惯这样做，比如在几周后我们将会接触的 Python 世界。
Dialogue: 0,0:39:43.33,0:39:48.67,english,,0,0,0,,You also have to tell C what type of value you're storing.
Dialogue: 0,0:39:43.33,0:39:48.67,chinese,,0,0,0,,你还得告诉 C 存储的值的类型是什么。
Dialogue: 0,0:39:48.67,0:39:55.27,english,,0,0,0,,So if I do want a string of text from the user-- so not an integer, not a single character.
Dialogue: 0,0:39:48.67,0:39:55.27,chinese,,0,0,0,,我确实需要用户提供一串文本，不是整数，也不是单个字符。
Dialogue: 0,0:39:55.27,0:39:59.27,english,,0,0,0,,I want a whole string of text, like a phrase, a sentence, a name, in this case--
Dialogue: 0,0:39:55.27,0:39:59.27,chinese,,0,0,0,,我想要一整串文本，比如一个短语、一个句子、一个名字，在这种情况下——
Dialogue: 0,0:39:59.27,0:40:04.25,english,,0,0,0,,I have to tell C that this variable is of type string.
Dialogue: 0,0:39:59.27,0:40:04.25,chinese,,0,0,0,,我必须告诉 C，这个变量的类型是字符串。
Dialogue: 0,0:40:04.25,0:40:06.26,english,,0,0,0,,So it's a little wordy, but you get used to it.
Dialogue: 0,0:40:04.25,0:40:06.26,chinese,,0,0,0,,所以有点啰嗦，但你会习惯的。
Dialogue: 0,0:40:06.26,0:40:07.60,english,,0,0,0,,And you just have to be precise.
Dialogue: 0,0:40:06.26,0:40:07.60,chinese,,0,0,0,,你需要做到准确无误地，
Dialogue: 0,0:40:07.60,0:40:12.76,english,,0,0,0,,You're informing the computer what type of value is going in this variable.
Dialogue: 0,0:40:07.60,0:40:12.76,chinese,,0,0,0,,告诉计算机这个变量里的值是什么类型的。
Dialogue: 0,0:40:12.76,0:40:19.21,english,,0,0,0,,All right, it's so close to being correct, but I have omitted something that's annoyingly important still.
Dialogue: 0,0:40:12.76,0:40:19.21,chinese,,0,0,0,,好吧，只差一点点，但我还是漏掉了一个重要的东西，让人很恼火。
Dialogue: 0,0:40:19.21,0:40:20.47,english,,0,0,0,,What's missing still?
Dialogue: 0,0:40:19.21,0:40:20.47,chinese,,0,0,0,,还缺什么？
Dialogue: 0,0:40:20.47,0:40:21.07,english,,0,0,0,,Yeah?
Dialogue: 0,0:40:21.07,0:40:21.97,english,,0,0,0,,AUDIENCE: Semicolon?
Dialogue: 0,0:40:21.07,0:40:21.97,chinese,,0,0,0,,观众：分号？
Dialogue: 0,0:40:21.97,0:40:23.17,english,,0,0,0,,DAVID J. MALAN: So semicolon.
Dialogue: 0,0:40:21.97,0:40:23.17,chinese,,0,0,0,,所以是分号。
Dialogue: 0,0:40:23.17,0:40:24.23,english,,0,0,0,,This is a statement.
Dialogue: 0,0:40:23.17,0:40:24.23,chinese,,0,0,0,,这是一个完整的语句。
Dialogue: 0,0:40:24.23,0:40:27.04,english,,0,0,0,,This is like a full thought, if you will.
Dialogue: 0,0:40:24.23,0:40:27.04,chinese,,0,0,0,,也可以想成，这就像是一个完整的想法。
Dialogue: 0,0:40:27.04,0:40:31.68,english,,0,0,0,,In code, I do need to end it ultimately with the semicolon at the end there.
Dialogue: 0,0:40:27.04,0:40:31.68,chinese,,0,0,0,,在代码里，我确实需要用结尾的分号作为结束。
Dialogue: 0,0:40:31.68,0:40:35.72,english,,0,0,0,,All right, so this was more of a mouthful, but let's try using this in now my code.
Dialogue: 0,0:40:31.68,0:40:35.72,chinese,,0,0,0,,好了，说了这么多费劲的，让我们试着在代码里用一用。
Dialogue: 0,0:40:35.72,0:40:40.25,english,,0,0,0,,Let me go back to VS Code where I have version 0 of my code here.
Dialogue: 0,0:40:35.72,0:40:40.25,chinese,,0,0,0,,回到 VS Code 界面，这里有我的代码的最初版。
Dialogue: 0,0:40:40.25,0:40:51.37,english,,0,0,0,,Let me go ahead and include one other file at the top of hello.c, namely include cs50.h so that I have access now to get_string and anything else I might want.
Dialogue: 0,0:40:40.25,0:40:51.37,chinese,,0,0,0,,现在要在 hello.c 的顶部 include 另一个文件，即 include <cs50.h>，\N这样我就可以访问 get_string 和其他我可能需要的函数了。
Dialogue: 0,0:40:51.37,0:40:56.71,english,,0,0,0,,Now let me go ahead and add a line of code here inside of these curly braces.
Dialogue: 0,0:40:51.37,0:40:56.71,chinese,,0,0,0,,现在，在花括号内添加一行代码。
Dialogue: 0,0:40:56.71,0:41:04.84,english,,0,0,0,,And let me go ahead and do this-- string answer equals get_string, quote/unquote, what's your name, question mark.
Dialogue: 0,0:40:56.71,0:41:04.84,chinese,,0,0,0,,我要写，字符串 answer = get_string、前后双引号、what's your name、问号。
Dialogue: 0,0:41:04.84,0:41:07.18,english,,0,0,0,,I'm going to add an extra space before the double quote.
Dialogue: 0,0:41:04.84,0:41:07.18,chinese,,0,0,0,,我要在双引号前多加一个空格。
Dialogue: 0,0:41:07.18,0:41:10.43,english,,0,0,0,,I'm going to indeed end my thought with a semicolon.
Dialogue: 0,0:41:07.18,0:41:10.43,chinese,,0,0,0,,然后用分号来结束这条语句。
Dialogue: 0,0:41:10.43,0:41:14.26,english,,0,0,0,,And now let me deliberately make a mistake, just to make a point here.
Dialogue: 0,0:41:10.43,0:41:14.26,chinese,,0,0,0,,现在，我要故意犯一个错误，来说明问题。
Dialogue: 0,0:41:14.26,0:41:19.84,english,,0,0,0,,Let me now try changing hello, world to hello, comma, answer.
Dialogue: 0,0:41:14.26,0:41:19.84,chinese,,0,0,0,,现在让我尝试将 hello, world 改为 hello, 逗号, answer。
Dialogue: 0,0:41:19.84,0:41:24.52,english,,0,0,0,,Now, perhaps, even though this is some new lines of code, you can see where I've errored already.
Dialogue: 0,0:41:19.84,0:41:24.52,chinese,,0,0,0,,尽管是我刚写的代码，但也许你已经能看出在哪犯错了。
Dialogue: 0,0:41:24.52,0:41:26.98,english,,0,0,0,,But let me try making this program now.
Dialogue: 0,0:41:24.52,0:41:26.98,chinese,,0,0,0,,不过走流程来 make 一下。
Dialogue: 0,0:41:26.98,0:41:27.97,english,,0,0,0,,So far, so good.
Dialogue: 0,0:41:26.98,0:41:27.97,chinese,,0,0,0,,到目前为止，一切顺利。
Dialogue: 0,0:41:27.97,0:41:29.12,english,,0,0,0,,So no error messages.
Dialogue: 0,0:41:27.97,0:41:29.12,chinese,,0,0,0,,没有错误信息。
Dialogue: 0,0:41:29.12,0:41:30.14,english,,0,0,0,,So that's a good thing.
Dialogue: 0,0:41:29.12,0:41:30.14,chinese,,0,0,0,,所以这是件好事。
Dialogue: 0,0:41:30.14,0:41:34.00,english,,0,0,0,,Let me go ahead and run ./hello, and you'll see the prompt.
Dialogue: 0,0:41:30.14,0:41:34.00,chinese,,0,0,0,,让我继续运行 ./hello，你会看到提示说。
Dialogue: 0,0:41:34.00,0:41:35.65,english,,0,0,0,,What's your name, question mark.
Dialogue: 0,0:41:34.00,0:41:35.65,chinese,,0,0,0,,你叫什么名字？
Dialogue: 0,0:41:35.65,0:41:43.60,english,,0,0,0,,And notice, the cursor is indeed one space to the right just because I thought it would look prettier to put a little blank space there as opposed to leaving it right after the question mark.
Dialogue: 0,0:41:35.65,0:41:43.60,chinese,,0,0,0,,注意，光标确实向右移了一个空格，\N这是因为我觉得在那里留一个小空格会更漂亮，而不是问号后面就出现光标。
Dialogue: 0,0:41:43.60,0:41:44.53,english,,0,0,0,,Let me type my name.
Dialogue: 0,0:41:43.60,0:41:44.53,chinese,,0,0,0,,输入我的名字。
Dialogue: 0,0:41:44.53,0:41:48.34,english,,0,0,0,,But even if you've never programmed before, I have screwed up here.
Dialogue: 0,0:41:44.53,0:41:48.34,chinese,,0,0,0,,你以前没写过代码，也能看出来我在这里搞砸了。
Dialogue: 0,0:41:48.34,0:41:51.24,english,,0,0,0,,What are we going to see on the screen when I hit Enter?
Dialogue: 0,0:41:48.34,0:41:51.24,chinese,,0,0,0,,按下回车键，屏幕上会出现什么？
Dialogue: 0,0:41:51.24,0:41:52.24,english,,0,0,0,,AUDIENCE: Hello, answer.
Dialogue: 0,0:41:51.24,0:41:52.24,chinese,,0,0,0,,观众：hello, answer。
Dialogue: 0,0:41:52.24,0:41:53.11,english,,0,0,0,,DAVID J. MALAN: Yeah.
Dialogue: 0,0:41:52.24,0:41:53.11,chinese,,0,0,0,,是的。
Dialogue: 0,0:41:53.11,0:41:54.28,english,,0,0,0,,Hello, answer, most likely.
Dialogue: 0,0:41:53.11,0:41:54.28,chinese,,0,0,0,,hello, answer，很有可能。
Dialogue: 0,0:41:54.28,0:41:54.73,english,,0,0,0,,Why?
Dialogue: 0,0:41:54.73,0:41:56.85,english,,0,0,0,,Because the computer is going to take me literally.
Dialogue: 0,0:41:54.73,0:41:56.85,chinese,,0,0,0,,因为电脑会从字面上理解。
Dialogue: 0,0:41:56.85,0:41:59.02,english,,0,0,0,,And if I say, quote/unquote, hello, answer.
Dialogue: 0,0:41:56.85,0:41:59.02,chinese,,0,0,0,,如果我说 "hello, answer"。
Dialogue: 0,0:41:59.02,0:42:03.26,english,,0,0,0,,That is the string of text followed by a new line that's going to be outputted to the screen.
Dialogue: 0,0:41:59.02,0:42:03.26,chinese,,0,0,0,,这就是要输出到屏幕上的文本字符串，后面另起一行。
Dialogue: 0,0:42:03.26,0:42:08.53,english,,0,0,0,,So we need some way of actually plugging answer into this line of code.
Dialogue: 0,0:42:03.26,0:42:08.53,chinese,,0,0,0,,因此，我们得想个办法让 answer 的值加入到代码里面。
Dialogue: 0,0:42:08.53,0:42:14.14,english,,0,0,0,,It's not quite as simple as scratch where you could just grab a second say block and drag and drop the variable there.
Dialogue: 0,0:42:08.53,0:42:14.14,chinese,,0,0,0,,这不像 Scratch 那样简单，你可以直接抓取第二个 say 块，把变量拖放到那里。
Dialogue: 0,0:42:14.14,0:42:15.67,english,,0,0,0,,We actually need a new syntax.
Dialogue: 0,0:42:14.14,0:42:15.67,chinese,,0,0,0,,实际上，我们需要一种新语法。
Dialogue: 0,0:42:15.67,0:42:22.90,english,,0,0,0,,And it's going to look weird at first, but it is everywhere in software nowadays, especially in the world of C and certain other languages.
Dialogue: 0,0:42:15.67,0:42:22.90,chinese,,0,0,0,,刚开始看起来很奇怪，但如今在软件中随处可见，尤其是在 C 语言和某些其他语言的代码里。
Dialogue: 0,0:42:22.90,0:42:27.61,english,,0,0,0,,So let me go ahead and propose that I solve it as follows.
Dialogue: 0,0:42:22.90,0:42:27.61,chinese,,0,0,0,,我来向你们介绍这种解决方案。
Dialogue: 0,0:42:27.61,0:42:32.35,english,,0,0,0,,Well, back when we did this in Scratch, remember that the most elegant solution was this here.
Dialogue: 0,0:42:27.61,0:42:32.35,chinese,,0,0,0,,记得我们用 Scratch 做这个的时候，最优雅的解决方案是这样的。
Dialogue: 0,0:42:32.35,0:42:36.55,english,,0,0,0,,We used the say block still, which is going to be analogous to printf today.
Dialogue: 0,0:42:32.35,0:42:36.55,chinese,,0,0,0,,我们仍然使用了 say 块，它与今天的 printf 类似。
Dialogue: 0,0:42:36.55,0:42:43.34,english,,0,0,0,,But I use the join puzzle piece and Scratch to combine hello, comma, space, and then the name of the human.
Dialogue: 0,0:42:36.55,0:42:43.34,chinese,,0,0,0,,但我使用了 join（连接）拼图把 "hello, " 和名字组合到一块。
Dialogue: 0,0:42:43.34,0:42:45.79,english,,0,0,0,,So how do we translate this code to C?
Dialogue: 0,0:42:43.34,0:42:45.79,chinese,,0,0,0,,那么，我们怎么把这些代码翻成 C 语言呢？
Dialogue: 0,0:42:45.79,0:42:47.83,english,,0,0,0,,Well, it's going to look a little different now.
Dialogue: 0,0:42:45.79,0:42:47.83,chinese,,0,0,0,,可能看起来有点不一样了。
Dialogue: 0,0:42:47.83,0:42:53.53,english,,0,0,0,,I'm going to start with printf with some parentheses and a semicolon representing the say block.
Dialogue: 0,0:42:47.83,0:42:53.53,chinese,,0,0,0,,我将从 printf 开始，用一对括号和一个分号代表 say 块。
Dialogue: 0,0:42:53.53,0:42:55.24,english,,0,0,0,,But how do I now do this joining?
Dialogue: 0,0:42:53.53,0:42:55.24,chinese,,0,0,0,,但现在该如何 join 呢？
Dialogue: 0,0:42:55.24,0:42:58.33,english,,0,0,0,,This is where the puzzle pieces don't quite translate perfectly.
Dialogue: 0,0:42:55.24,0:42:58.33,chinese,,0,0,0,,这就是拼图没有办法完美转换的地方。
Dialogue: 0,0:42:58.33,0:43:00.29,english,,0,0,0,,This would be the way to do this.
Dialogue: 0,0:42:58.33,0:43:00.29,chinese,,0,0,0,,我们要用这种方式解决。
Dialogue: 0,0:43:00.29,0:43:03.43,english,,0,0,0,,You put hello, comma, and then a placeholder.
Dialogue: 0,0:43:00.29,0:43:03.43,chinese,,0,0,0,,输入 hello、逗号和占位符 %s。
Dialogue: 0,0:43:03.43,0:43:07.81,english,,0,0,0,,So this is what's known as a format code in C, specifically for printf.
Dialogue: 0,0:43:03.43,0:43:07.81,chinese,,0,0,0,,这就是 C 语言中的格式代码，专门用于 printf。
Dialogue: 0,0:43:07.81,0:43:11.35,english,,0,0,0,,And it just means this is a placeholder for a string.
Dialogue: 0,0:43:07.81,0:43:11.35,chinese,,0,0,0,,它只是表示这是一个字符串的占位符。
Dialogue: 0,0:43:11.35,0:43:12.74,english,,0,0,0,,Again, a string is just text.
Dialogue: 0,0:43:11.35,0:43:12.74,chinese,,0,0,0,,同样，字符串只是文本。
Dialogue: 0,0:43:12.74,0:43:23.90,english,,0,0,0,,So this means, hey, computer, print out literally, hello, comma, space, and then not literally %s. %s is treated specially to mean plug in some value here.
Dialogue: 0,0:43:12.74,0:43:23.90,chinese,,0,0,0,,这意味着，嘿，计算机，打印出文字 "hello, "，然后不是字面上的 "%s"。\N"%s" 在这里被特殊处理，表示在这里插入某个值。
Dialogue: 0,0:43:23.90,0:43:25.57,english,,0,0,0,,All right, so what else do I still need?
Dialogue: 0,0:43:23.90,0:43:25.57,chinese,,0,0,0,,好的，还有什么是我需要的呢？
Dialogue: 0,0:43:25.57,0:43:32.46,english,,0,0,0,,Well, this is still some text, so I'm still going to surround the whole thing with double quotes.
Dialogue: 0,0:43:25.57,0:43:32.46,chinese,,0,0,0,,这仍然是一些文本，所以我仍然会用双引号将整个内容括起来。
Dialogue: 0,0:43:32.46,0:43:37.87,english,,0,0,0,,I'm still going to include my backslash n just to keep things tidy and move the cursor to the next line.
Dialogue: 0,0:43:32.46,0:43:37.87,chinese,,0,0,0,,我仍然会加上 \{}n，只是为了保持整洁，将光标移到下一行。
Dialogue: 0,0:43:37.87,0:43:45.12,english,,0,0,0,,So the last step here in C is to somehow join the answer with that word hello.
Dialogue: 0,0:43:37.87,0:43:45.12,chinese,,0,0,0,,因此，在 C 语言中，最后一步是如何将 answer 与那个词 "hello" 连接起来。
Dialogue: 0,0:43:45.12,0:43:51.00,english,,0,0,0,,And the way you do this is with printf, passing it not one argument, which is what I keep doing.
Dialogue: 0,0:43:45.12,0:43:51.00,chinese,,0,0,0,,而实现这一功能的方法就是使用 printf，不再只传递一个参数，像我之前那样。
Dialogue: 0,0:43:51.00,0:43:53.82,english,,0,0,0,,I keep passing it one string of text, quote/unquote.
Dialogue: 0,0:43:51.00,0:43:53.82,chinese,,0,0,0,,我一直给它的参数是，前引号，一个字符串，后引号。
Dialogue: 0,0:43:53.82,0:44:02.76,english,,0,0,0,,I'm going to now add a comma and then the name of the value that I want printf to go back and plug into that %s.
Dialogue: 0,0:43:53.82,0:44:02.76,chinese,,0,0,0,,我现在要添加一个逗号，然后是我希望 printf 回头插入到 "%s" 位置的值的名称。
Dialogue: 0,0:44:02.76,0:44:04.41,english,,0,0,0,,And printf is just smart about this.
Dialogue: 0,0:44:02.76,0:44:04.41,chinese,,0,0,0,,而 printf 会自动处理这一点。
Dialogue: 0,0:44:04.41,0:44:10.98,english,,0,0,0,,If you have one %s and one additional argument after a comma, it just does-- from right to left, it plugs it in.
Dialogue: 0,0:44:04.41,0:44:10.98,chinese,,0,0,0,,如果你有一个 "%s" 和一个逗号后面的附加参数，它会把右边的参数值插入到左边。
Dialogue: 0,0:44:10.98,0:44:16.47,english,,0,0,0,,If you have two %s's and two variables after the comma, that's OK too.
Dialogue: 0,0:44:10.98,0:44:16.47,chinese,,0,0,0,,如果你有两个 "%s"，然后在逗号后面跟着两个变量，这也是可以的。
Dialogue: 0,0:44:16.47,0:44:22.38,english,,0,0,0,,If you separate them with commas, it'll plug the first into the first %s and the second variable into the second %s.
Dialogue: 0,0:44:16.47,0:44:22.38,chinese,,0,0,0,,如果你用逗号分隔它们，它会将第一个插入到第一个 "%s"，第二个变量插入到第二个 "%s"。
Dialogue: 0,0:44:22.38,0:44:24.75,english,,0,0,0,,So it's just left to right, order of operations.
Dialogue: 0,0:44:22.38,0:44:24.75,chinese,,0,0,0,,所以它是从左到右的，按照操作顺序来的。
Dialogue: 0,0:44:24.75,0:44:30.30,english,,0,0,0,,It's not as pretty or as simple as this, but this is how it's done in C.
Dialogue: 0,0:44:24.75,0:44:30.30,chinese,,0,0,0,,虽然不像 Scratch 漂亮或简单，但这就是在 C 语言中的做法。
Dialogue: 0,0:44:30.30,0:44:32.76,english,,0,0,0,,All right, let me pause because this is a lot of symbology.
Dialogue: 0,0:44:30.30,0:44:32.76,chinese,,0,0,0,,好的，让我稍微停一下，因为这有很多符号。
Dialogue: 0,0:44:32.76,0:44:35.08,english,,0,0,0,,Any questions on this technique here?
Dialogue: 0,0:44:32.76,0:44:35.08,chinese,,0,0,0,,对于这种技术有什么问题吗？
Dialogue: 0,0:44:35.08,0:44:35.58,english,,0,0,0,,Yeah?
Dialogue: 0,0:44:35.58,0:44:39.72,english,,0,0,0,,AUDIENCE: Why did you exclude the backslash n in the previous section?
Dialogue: 0,0:44:35.58,0:44:39.72,chinese,,0,0,0,,观众：为什么刚才没有用 \{}n？
Dialogue: 0,0:44:39.72,0:44:41.60,english,,0,0,0,,DAVID J. MALAN: Yeah, a really good question.
Dialogue: 0,0:44:39.72,0:44:41.60,chinese,,0,0,0,,是的，非常好问题。
Dialogue: 0,0:44:41.60,0:44:45.55,english,,0,0,0,,Why did I exclude the backslash n a moment ago?
Dialogue: 0,0:44:41.60,0:44:45.55,chinese,,0,0,0,,我刚才为什么不用 \{}n？
Dialogue: 0,0:44:45.55,0:44:48.28,english,,0,0,0,,Really, just my sense of aesthetics, if you will.
Dialogue: 0,0:44:45.55,0:44:48.28,chinese,,0,0,0,,真的，这只是因为符合我的审美。
Dialogue: 0,0:44:48.28,0:44:49.76,english,,0,0,0,,No good reason beyond that.
Dialogue: 0,0:44:48.28,0:44:49.76,chinese,,0,0,0,,除此之外，没有其他充分的理由。
Dialogue: 0,0:44:49.76,0:44:54.46,english,,0,0,0,,So if I look back at my code, you quite rightly notice that I didn't have a backslash n there.
Dialogue: 0,0:44:49.76,0:44:54.46,chinese,,0,0,0,,如果我回过头来看自己写的代码，你们确实会注意，这行代码中没有 \{}n。
Dialogue: 0,0:44:54.46,0:44:57.40,english,,0,0,0,,That's just because, for whatever sense of style that I have,
Dialogue: 0,0:44:54.46,0:44:57.40,chinese,,0,0,0,,这只是因为我有自己的风格，
Dialogue: 0,0:44:57.40,0:45:00.46,english,,0,0,0,,I wanted the name to be typed right after the question.
Dialogue: 0,0:44:57.40,0:45:00.46,chinese,,0,0,0,,我想在问题之后，让用户输入姓名。
Dialogue: 0,0:45:00.46,0:45:04.03,english,,0,0,0,,I totally could have added a backslash n there instead of a space.
Dialogue: 0,0:45:00.46,0:45:04.03,chinese,,0,0,0,,我完全可以在这里加一个 \{}n，而不是空格。
Dialogue: 0,0:45:04.03,0:45:06.49,english,,0,0,0,,That would have just allowed me to type down here.
Dialogue: 0,0:45:04.03,0:45:06.49,chinese,,0,0,0,,这样我就可以在下面新起一行打字了。
Dialogue: 0,0:45:06.49,0:45:07.49,english,,0,0,0,,Totally fine.
Dialogue: 0,0:45:06.49,0:45:07.49,chinese,,0,0,0,,完全没问题。
Dialogue: 0,0:45:07.49,0:45:09.67,english,,0,0,0,,Just wanted to show you something different.
Dialogue: 0,0:45:07.49,0:45:09.67,chinese,,0,0,0,,只是想来点不一样的。
Dialogue: 0,0:45:09.67,0:45:10.21,english,,0,0,0,,Good catch.
Dialogue: 0,0:45:09.67,0:45:10.21,chinese,,0,0,0,,好问题。
Dialogue: 0,0:45:10.21,0:45:10.66,english,,0,0,0,,Yeah?
Dialogue: 0,0:45:10.66,0:45:12.07,english,,0,0,0,,AUDIENCE: Can you show an example with two %s's?
Dialogue: 0,0:45:10.66,0:45:12.07,chinese,,0,0,0,,观众：你能不能举一个带两个 %s 的例子？
Dialogue: 0,0:45:12.07,0:45:14.47,english,,0,0,0,,DAVID J. MALAN: Can I show an example with two %s's?
Dialogue: 0,0:45:12.07,0:45:14.47,chinese,,0,0,0,,我能举一个有两个 %s 的例子吗？
Dialogue: 0,0:45:14.47,0:45:15.25,english,,0,0,0,,Surely.
Dialogue: 0,0:45:15.25,0:45:17.57,english,,0,0,0,,So let me in VS Code do this.
Dialogue: 0,0:45:15.25,0:45:17.57,chinese,,0,0,0,,我得在 VS Code 里面演示。
Dialogue: 0,0:45:17.57,0:45:20.05,english,,0,0,0,,Let me clear my terminal window to clean things up.
Dialogue: 0,0:45:17.57,0:45:20.05,chinese,,0,0,0,,先清空终端窗口，清理一下。
Dialogue: 0,0:45:20.05,0:45:21.17,english,,0,0,0,,And let me do this.
Dialogue: 0,0:45:20.05,0:45:21.17,chinese,,0,0,0,,来试一下。
Dialogue: 0,0:45:21.17,0:45:26.08,english,,0,0,0,,Instead of calling the variable answer all over the place, let me call it first.
Dialogue: 0,0:45:21.17,0:45:26.08,chinese,,0,0,0,,现在不叫它 answer 了，换个变量名 first。
Dialogue: 0,0:45:26.08,0:45:27.49,english,,0,0,0,,And I'll ask two questions.
Dialogue: 0,0:45:26.08,0:45:27.49,chinese,,0,0,0,,然后我要向用户提两个问。
Dialogue: 0,0:45:27.49,0:45:28.88,english,,0,0,0,,What's your first name?
Dialogue: 0,0:45:27.49,0:45:28.88,chinese,,0,0,0,,你的名是什么？
Dialogue: 0,0:45:28.88,0:45:41.72,english,,0,0,0,,And now let me do string last equals get_string-- whoops, capitalization matters, so let me fix my capital S there-- quote/unquote, What's your last name, question mark, semicolon.
Dialogue: 0,0:45:28.88,0:45:41.72,chinese,,0,0,0,,接着是 string last = get_string... 哎呀，大小写正确很重要，把大写字母 S 改一下... \N一对引号、"What's your last name"、问号、分号。
Dialogue: 0,0:45:41.72,0:45:47.32,english,,0,0,0,,And now we'll plug in one %s and a second %s.
Dialogue: 0,0:45:41.72,0:45:47.32,chinese,,0,0,0,,现在我们输入一个 %s 和第二个 %s。
Dialogue: 0,0:45:47.32,0:45:52.72,english,,0,0,0,,And now I'm going to plug in first first and last last, coincidentally.
Dialogue: 0,0:45:47.32,0:45:52.72,chinese,,0,0,0,,恰巧，第一个位置的输入叫 first，第二个位置叫 last。
Dialogue: 0,0:45:52.72,0:45:55.24,english,,0,0,0,,And now I'm going to go back to the terminal window.
Dialogue: 0,0:45:52.72,0:45:55.24,chinese,,0,0,0,,现在我要回到终端窗口。
Dialogue: 0,0:45:55.24,0:46:00.28,english,,0,0,0,,Make hello-- crossing my fingers, all good-- ./hello.
Dialogue: 0,0:45:55.24,0:46:00.28,chinese,,0,0,0,,make hello—— 祈祷一切顺利—— ./hello。
Dialogue: 0,0:46:00.28,0:46:02.62,english,,0,0,0,,Here's my first question, David.
Dialogue: 0,0:46:00.28,0:46:02.62,chinese,,0,0,0,,这是我的第一个问题，输入 David。
Dialogue: 0,0:46:02.62,0:46:04.24,english,,0,0,0,,Here's my second question, Malan.
Dialogue: 0,0:46:02.62,0:46:04.24,chinese,,0,0,0,,这是我的第二个问题，输入 Malan。
Dialogue: 0,0:46:04.24,0:46:05.65,english,,0,0,0,,And again?
Dialogue: 0,0:46:05.65,0:46:06.67,english,,0,0,0,,Hello, David Malan.
Dialogue: 0,0:46:06.67,0:46:08.44,english,,0,0,0,,So it just inserts them left to right.
Dialogue: 0,0:46:06.67,0:46:08.44,chinese,,0,0,0,,因此，它的插入顺序是自左向右。
Dialogue: 0,0:46:08.44,0:46:12.67,english,,0,0,0,,All I was doing for parity with Scratch though-- and let me go ahead and undo this again.
Dialogue: 0,0:46:08.44,0:46:12.67,chinese,,0,0,0,,不过，我想让所有东西和上节课的 Scratch 保持一致，把刚才的操作撤销掉。
Dialogue: 0,0:46:12.67,0:46:15.13,english,,0,0,0,,I'll go back to answer, like this.
Dialogue: 0,0:46:12.67,0:46:15.13,chinese,,0,0,0,,得回到带 answer 的版本，现在这样。
Dialogue: 0,0:46:15.13,0:46:17.80,english,,0,0,0,,I'll go back to just asking for the person's name.
Dialogue: 0,0:46:15.13,0:46:17.80,chinese,,0,0,0,,我还是只问名字吧。
Dialogue: 0,0:46:17.80,0:46:19.30,english,,0,0,0,,I'm going to delete mention of last.
Dialogue: 0,0:46:17.80,0:46:19.30,chinese,,0,0,0,,删除掉 last 。
Dialogue: 0,0:46:19.30,0:46:21.52,english,,0,0,0,,I'm going to delete mention of the second %s.
Dialogue: 0,0:46:19.30,0:46:21.52,chinese,,0,0,0,,删除掉第二个 %s。
Dialogue: 0,0:46:21.52,0:46:27.72,english,,0,0,0,,And now if I recompile this simpler version, oh, I did screw up-- didn't intend it.
Dialogue: 0,0:46:21.52,0:46:27.72,chinese,,0,0,0,,现在重新编译这个更简单的版本，哦，我搞错了—— 不是故意的。
Dialogue: 0,0:46:27.72,0:46:29.22,english,,0,0,0,,What did I do wrong?
Dialogue: 0,0:46:27.72,0:46:29.22,chinese,,0,0,0,,错哪了？
Dialogue: 0,0:46:29.22,0:46:31.35,english,,0,0,0,,AUDIENCE: You forgot to change first in line 7.
Dialogue: 0,0:46:29.22,0:46:31.35,chinese,,0,0,0,,观众：你忘了改第 7 行的 first。
Dialogue: 0,0:46:31.35,0:46:33.27,english,,0,0,0,,DAVID J. MALAN: Yeah, so just newbie mistakes.
Dialogue: 0,0:46:31.35,0:46:33.27,chinese,,0,0,0,,对的，新手会犯的错误。
Dialogue: 0,0:46:33.27,0:46:39.61,english,,0,0,0,,So I changed my variable back to answer just to be consistent with week 0, but I didn't change it here.
Dialogue: 0,0:46:33.27,0:46:39.61,chinese,,0,0,0,,因此，为了与第 0 周保持一致，我把变量名改回了 answer，但这里没改完。
Dialogue: 0,0:46:39.61,0:46:42.75,english,,0,0,0,,So I have an use of undeclared identifier first.
Dialogue: 0,0:46:39.61,0:46:42.75,chinese,,0,0,0,,所以说，我使用了未声明的标识符 first。
Dialogue: 0,0:46:42.75,0:46:46.47,english,,0,0,0,,It's undeclared in the sense that I declared answer a line prior.
Dialogue: 0,0:46:42.75,0:46:46.47,chinese,,0,0,0,,它没有被声明过，因为前一行声明的是 answer。
Dialogue: 0,0:46:46.47,0:46:47.95,english,,0,0,0,,I didn't declare first.
Dialogue: 0,0:46:46.47,0:46:47.95,chinese,,0,0,0,,我没有先声明就在使用。
Dialogue: 0,0:46:47.95,0:46:51.06,english,,0,0,0,,So indeed, intuitively, I want to just change that to that.
Dialogue: 0,0:46:47.95,0:46:51.06,chinese,,0,0,0,,所以，凭直觉，把它改成这样。
Dialogue: 0,0:46:51.06,0:46:56.74,english,,0,0,0,,Let me now do make hello again, ./hello, type in just my first name this time.
Dialogue: 0,0:46:51.06,0:46:56.74,chinese,,0,0,0,,现在再来 make hello，./hello，这次只输入我的名字。
Dialogue: 0,0:46:56.74,0:46:59.40,english,,0,0,0,,And there it is-- hello, David.
Dialogue: 0,0:46:56.74,0:46:59.40,chinese,,0,0,0,,得到了 hello, David。
Dialogue: 0,0:46:59.40,0:47:02.22,english,,0,0,0,,Questions on this then syntax with printf?
Dialogue: 0,0:46:59.40,0:47:02.22,chinese,,0,0,0,,还有没有语法上的问题？
Dialogue: 0,0:47:02.22,0:47:03.39,english,,0,0,0,,Yeah?
Dialogue: 0,0:47:03.39,0:47:04.60,english,,0,0,0,,AUDIENCE: [INAUDIBLE]
Dialogue: 0,0:47:04.60,0:47:06.15,english,,0,0,0,,DAVID J. MALAN: Ah, the placeholder--
Dialogue: 0,0:47:04.60,0:47:06.15,chinese,,0,0,0,,啊，占位符...
Dialogue: 0,0:47:06.15,0:47:09.24,english,,0,0,0,,I'll zoom in-- is just a single percent then an s.
Dialogue: 0,0:47:06.15,0:47:09.24,chinese,,0,0,0,,我放大一下，只是一个百分号，然后是一个 s。
Dialogue: 0,0:47:09.24,0:47:23.40,english,,0,0,0,,So inside of my string here is %s, and then I have a comma outside the quotes, and then the name of the variable whose value I want to plug in for that %s.
Dialogue: 0,0:47:09.24,0:47:23.40,chinese,,0,0,0,,所以在我的字符串里面是 %s，\N然后我在引号外面有一个逗号，然后是我想要为那个 %s 插入值的变量的名称。
Dialogue: 0,0:47:23.40,0:47:30.30,english,,0,0,0,,And now notice there's technically two commas inside of these parentheses on line 7.
Dialogue: 0,0:47:23.40,0:47:30.30,chinese,,0,0,0,,注意，在第 7 行的括号内实际上有两个逗号。
Dialogue: 0,0:47:30.30,0:47:37.29,english,,0,0,0,,And yet, I claim that printf, at the moment, is only taking in two arguments.
Dialogue: 0,0:47:30.30,0:47:37.29,chinese,,0,0,0,,然而，我刚才说的是，printf 只接收了两个参数。
Dialogue: 0,0:47:37.29,0:47:41.58,english,,0,0,0,,Why is there then two commas but only two arguments?
Dialogue: 0,0:47:37.29,0:47:41.58,chinese,,0,0,0,,为什么有两个逗号，但只有两个参数？
Dialogue: 0,0:47:41.58,0:47:45.70,english,,0,0,0,,If there were two commas, you would think there would be three arguments, right?
Dialogue: 0,0:47:41.58,0:47:45.70,chinese,,0,0,0,,如果有两个逗号，你会认为会有三个参数，对吗？
Dialogue: 0,0:47:45.70,0:47:49.70,english,,0,0,0,,AUDIENCE: The comma is between the quotes, so it counts as a comma [INAUDIBLE]
Dialogue: 0,0:47:49.70,0:47:50.70,english,,0,0,0,,DAVID J. MALAN: Exactly.
Dialogue: 0,0:47:49.70,0:47:50.70,chinese,,0,0,0,,没错。
Dialogue: 0,0:47:50.70,0:47:53.16,english,,0,0,0,,The comma in between the quotes is just an English thing.
Dialogue: 0,0:47:50.70,0:47:53.16,chinese,,0,0,0,,引号之间的逗号只是英语的一种表达方式。
Dialogue: 0,0:47:53.16,0:47:55.24,english,,0,0,0,,It's separating the hello from the name.
Dialogue: 0,0:47:53.16,0:47:55.24,chinese,,0,0,0,,它作为句子的标点将 hello 和名字分开。
Dialogue: 0,0:47:55.24,0:48:05.58,english,,0,0,0,,So that's why indeed it's not only in quotes, that's also why programs like VS Code tend to syntax highlight it a little differently just so that it jumps out as different to you,
Dialogue: 0,0:47:55.24,0:48:05.58,chinese,,0,0,0,,这就是为什么它在引号内外都存在，\N这也是为什么 VS Code 这样的软件会对其进行不同的语法高亮，\N只是为了我们看起来更加区别分明，
Dialogue: 0,0:48:05.58,0:48:10.83,english,,0,0,0,,even though, in this case, it's a little subtle-- a light blue versus white-- but indeed, it's trying its best.
Dialogue: 0,0:48:05.58,0:48:10.83,chinese,,0,0,0,,尽管现在的差别有点微妙，只是浅蓝色与白色的区别。但确实，它有在想办法区分。
Dialogue: 0,0:48:10.83,0:48:13.15,english,,0,0,0,,Other questions now on this placeholder?
Dialogue: 0,0:48:10.83,0:48:13.15,chinese,,0,0,0,,有没有关于这个占位符的其他问题？
Dialogue: 0,0:48:13.15,0:48:13.65,english,,0,0,0,,Yeah?
Dialogue: 0,0:48:13.65,0:48:21.94,english,,0,0,0,,AUDIENCE: If you wanted to put an exclamation point at the end, would you put a comma after your answer variable, and would that put it [INAUDIBLE],, or would you have to add a new line?
Dialogue: 0,0:48:21.94,0:48:23.36,english,,0,0,0,,DAVID J. MALAN: Ah, good question.
Dialogue: 0,0:48:21.94,0:48:23.36,chinese,,0,0,0,,啊，问得好。
Dialogue: 0,0:48:23.36,0:48:28.23,english,,0,0,0,,If I wanted to add an exclamation point after the name, would I have to add another placeholder and so forth?
Dialogue: 0,0:48:23.36,0:48:28.23,chinese,,0,0,0,,如果我想在名字后面添加一个感叹号，是否还需要添加另一个占位符什么的？
Dialogue: 0,0:48:28.23,0:48:29.98,english,,0,0,0,,I could actually do that much more simply.
Dialogue: 0,0:48:28.23,0:48:29.98,chinese,,0,0,0,,实际上做起来很简单。
Dialogue: 0,0:48:29.98,0:48:33.61,english,,0,0,0,,I can just put the exclamation point right after the percent sign.
Dialogue: 0,0:48:29.98,0:48:33.61,chinese,,0,0,0,,把感叹号放在 %s 的后面就行。
Dialogue: 0,0:48:33.61,0:48:35.83,english,,0,0,0,,I don't need an additional placeholder, per se.
Dialogue: 0,0:48:33.61,0:48:35.83,chinese,,0,0,0,,并不需要额外的占位符。
Dialogue: 0,0:48:35.83,0:48:45.58,english,,0,0,0,,If I zoom out now and run make hello again, ./hello, and type in just my name-- no exclamation point-- now you'll see more excitedly, hello, comma, David.
Dialogue: 0,0:48:35.83,0:48:45.58,chinese,,0,0,0,,现在缩小一点，make hello、./hello，\N然后只输入我的名字，不输入感叹号—— 现在你会更兴奋地看到，"hello, David!"。
Dialogue: 0,0:48:45.58,0:48:46.51,english,,0,0,0,,So printf is smart.
Dialogue: 0,0:48:45.58,0:48:46.51,chinese,,0,0,0,,所以 printf 很聪明。
Dialogue: 0,0:48:46.51,0:48:51.40,english,,0,0,0,,It will figure out where the %s is and then go and replace it.
Dialogue: 0,0:48:46.51,0:48:51.40,chinese,,0,0,0,,它会找出 %s 所在的位置，然后去替换。
Dialogue: 0,0:48:51.40,0:49:01.24,english,,0,0,0,,Now, let me propose that a common thing in programming is that as soon as we make a decision as how to design something, we often paint ourselves into a corner and regret a decision.
Dialogue: 0,0:48:51.40,0:49:01.24,chinese,,0,0,0,,现在我想说的是，编程中的一个普遍现象是，\N我们最开始决定好怎么样设计某个功能，后来做的时候却陷入了困境，后悔当初的决定。
Dialogue: 0,0:49:01.24,0:49:11.68,english,,0,0,0,,Can anyone think of a problem that arises from using %s as a placeholder in this string to printf?
Dialogue: 0,0:49:01.24,0:49:11.68,chinese,,0,0,0,,有人能想到在这个字符串中，使用 %s 作为占位符会出现的问题吗？
Dialogue: 0,0:49:11.68,0:49:14.63,english,,0,0,0,,What could go wrong if we're using percent in this special way?
Dialogue: 0,0:49:11.68,0:49:14.63,chinese,,0,0,0,,如果我们以这种特殊方式使用百分号，会有什么问题？
Dialogue: 0,0:49:14.63,0:49:16.77,english,,0,0,0,,AUDIENCE: [INAUDIBLE]
Dialogue: 0,0:49:16.77,0:49:17.65,english,,0,0,0,,DAVID J. MALAN: Yeah.
Dialogue: 0,0:49:16.77,0:49:17.65,chinese,,0,0,0,,是的。
Dialogue: 0,0:49:17.65,0:49:20.32,english,,0,0,0,,If you literally want to say, for whatever weird reason,
Dialogue: 0,0:49:17.65,0:49:20.32,chinese,,0,0,0,,如果你真的想在屏幕上输出 %s，出于某种奇怪的原因，
Dialogue: 0,0:49:20.32,0:49:23.24,english,,0,0,0,,%s on the screen-- or honestly, even just a single %.
Dialogue: 0,0:49:20.32,0:49:23.24,chinese,,0,0,0,,或者老实说，甚至只是一个单独的 % 也会出问题。
Dialogue: 0,0:49:23.24,0:49:29.65,english,,0,0,0,,It turns out that a percent sign is treated specially inside of printf strings.
Dialogue: 0,0:49:23.24,0:49:29.65,chinese,,0,0,0,,事实上，在 printf 的第一个参数字符串里，百分号是被特殊处理的。
Dialogue: 0,0:49:29.65,0:49:31.46,english,,0,0,0,,So what's the solution here?
Dialogue: 0,0:49:29.65,0:49:31.46,chinese,,0,0,0,,那么解决方案是什么呢？
Dialogue: 0,0:49:31.46,0:49:34.69,english,,0,0,0,,There's different patterns of solutions to problems like these.
Dialogue: 0,0:49:31.46,0:49:34.69,chinese,,0,0,0,,解决这类问题有不同的办法。
Dialogue: 0,0:49:34.69,0:49:40.99,english,,0,0,0,,But suppose you wanted to say, I got 100%, for instance.
Dialogue: 0,0:49:34.69,0:49:40.99,chinese,,0,0,0,,假设你想说，比如，我在考试里拿了 100%。
Dialogue: 0,0:49:40.99,0:49:43.48,english,,0,0,0,,Let me go ahead and change this completely.
Dialogue: 0,0:49:40.99,0:49:43.48,chinese,,0,0,0,,让我在代码里改成这个。
Dialogue: 0,0:49:43.48,0:49:47.29,english,,0,0,0,,So I got 100% on your test or whatever.
Dialogue: 0,0:49:43.48,0:49:47.29,chinese,,0,0,0,,所以我在考试中得了 100 分，或者其他什么。
Dialogue: 0,0:49:47.29,0:49:50.86,english,,0,0,0,,All right, let me go ahead and run make hello, Enter.
Dialogue: 0,0:49:47.29,0:49:50.86,chinese,,0,0,0,,好的，运行 make hello，然后回车。
Dialogue: 0,0:49:50.86,0:49:52.95,english,,0,0,0,,All right, so invalid conversions specifier.
Dialogue: 0,0:49:50.86,0:49:52.95,chinese,,0,0,0,,好的，无效的转换说明符。
Dialogue: 0,0:49:52.95,0:49:57.41,english,,0,0,0,,I mean, I have no idea what this means, but it's underlining the percent sign as problematic.
Dialogue: 0,0:49:52.95,0:49:57.41,chinese,,0,0,0,,我不知道这是什么意思，但它强调百分号是有问题的，在问题百分号下面进行了下划线标记。
Dialogue: 0,0:49:57.41,0:50:00.73,english,,0,0,0,,Well, it turns out that humans years ago decided, ugh, all right, damn it.
Dialogue: 0,0:49:57.41,0:50:00.73,chinese,,0,0,0,,事实证明，很多年前的人们决定，噢，好吧，该死的。
Dialogue: 0,0:50:00.73,0:50:01.61,english,,0,0,0,,We already used %.
Dialogue: 0,0:50:00.73,0:50:01.61,chinese,,0,0,0,,我们已经使用了 %。
Dialogue: 0,0:50:01.61,0:50:04.99,english,,0,0,0,,Well, two percent signs will mean one %, literally.
Dialogue: 0,0:50:01.61,0:50:04.99,chinese,,0,0,0,,那就两个百分号表示一个字面上的 %。
Dialogue: 0,0:50:04.99,0:50:09.72,english,,0,0,0,,So now if I rerun make hello, aha, ./hello, I got 100%.
Dialogue: 0,0:50:04.99,0:50:09.72,chinese,,0,0,0,,现在，如果我重新运行make hello，./hello，我得到了100%。
Dialogue: 0,0:50:09.72,0:50:15.19,english,,0,0,0,,So there's going to be things like that, honestly, that you have to ask someone, you have to Google, you have to look it up in the documentation.
Dialogue: 0,0:50:09.72,0:50:15.19,chinese,,0,0,0,,老实说，有些事情你必须去问别人，你必须去 Google，你必须去文档中查找。
Dialogue: 0,0:50:15.19,0:50:17.84,english,,0,0,0,,But there's always a solution to those kinds of problems.
Dialogue: 0,0:50:15.19,0:50:17.84,chinese,,0,0,0,,但这些问题总是有解决方法的。
Dialogue: 0,0:50:17.84,0:50:19.93,english,,0,0,0,,And thankfully, they don't come up all that often.
Dialogue: 0,0:50:17.84,0:50:19.93,chinese,,0,0,0,,而且值得庆幸的是，这种情况并不常见。
Dialogue: 0,0:50:19.93,0:50:21.23,english,,0,0,0,,Yeah?
Dialogue: 0,0:50:21.23,0:50:22.36,english,,0,0,0,,Oh, just pointing.
Dialogue: 0,0:50:21.23,0:50:22.36,chinese,,0,0,0,,哦，只是说说而已。
Dialogue: 0,0:50:22.36,0:50:23.06,english,,0,0,0,,Other questions?
Dialogue: 0,0:50:22.36,0:50:23.06,chinese,,0,0,0,,还有其他问题吗？
Dialogue: 0,0:50:23.06,0:50:23.56,english,,0,0,0,,Yeah?
Dialogue: 0,0:50:23.56,0:50:27.62,english,,0,0,0,,AUDIENCE: So if you have multiple [INAUDIBLE]
Dialogue: 0,0:50:27.62,0:50:31.38,english,,0,0,0,,DAVID J. MALAN: If you have multiple variables, it is in the left-right order.
Dialogue: 0,0:50:27.62,0:50:31.38,chinese,,0,0,0,,如果你有多个变量，那就是按左右顺序排列的。
Dialogue: 0,0:50:31.38,0:50:35.52,english,,0,0,0,,So printf will analyze the first string of text that you pass in between quotes.
Dialogue: 0,0:50:31.38,0:50:35.52,chinese,,0,0,0,,因此，printf 会分析你传进去的第一个字符串参数。
Dialogue: 0,0:50:35.52,0:50:41.20,english,,0,0,0,,And whatever the first % is, the first variable that's passed in after a comma gets plugged in there.
Dialogue: 0,0:50:35.52,0:50:41.20,chinese,,0,0,0,,无论第一个 % 是什么，逗号后传入的第一个变量都会被插到这个位置。
Dialogue: 0,0:50:41.20,0:50:44.83,english,,0,0,0,,And then the second gets plugged into the second, third, and to the third, and so forth.
Dialogue: 0,0:50:41.20,0:50:44.83,chinese,,0,0,0,,然后，第二个变量连接到第二个占位符... 以此类推。
Dialogue: 0,0:50:44.83,0:50:47.13,english,,0,0,0,,So it's just based on left to right.
Dialogue: 0,0:50:44.83,0:50:47.13,chinese,,0,0,0,,因此，它只是按照从左到右的顺序。
Dialogue: 0,0:50:47.13,0:50:48.22,english,,0,0,0,,Yeah?
Dialogue: 0,0:50:48.22,0:50:50.76,english,,0,0,0,,AUDIENCE: This more of a clarification question.
Dialogue: 0,0:50:48.22,0:50:50.76,chinese,,0,0,0,,观众：这更像是一个定义上问题。
Dialogue: 0,0:50:50.76,0:50:52.45,english,,0,0,0,,What exactly does the %s mean?
Dialogue: 0,0:50:50.76,0:50:52.45,chinese,,0,0,0,,%s 到底是什么意思？
Dialogue: 0,0:50:52.45,0:50:54.12,english,,0,0,0,,DAVID J. MALAN: It's just a placeholder.
Dialogue: 0,0:50:52.45,0:50:54.12,chinese,,0,0,0,,这只是一个占位符。
Dialogue: 0,0:50:54.12,0:50:59.07,english,,0,0,0,,It's called a format code, and it just means colloquially, plug in some value here.
Dialogue: 0,0:50:54.12,0:50:59.07,chinese,,0,0,0,,它被称为格式代码，通俗地说，就是 "在这里插入某个值"。
Dialogue: 0,0:50:59.07,0:51:04.56,english,,0,0,0,,And printf-- the humans who wrote printf decades ago decided to treat %s special.
Dialogue: 0,0:50:59.07,0:51:04.56,chinese,,0,0,0,,几十年前编写 printf 的人决定将 %s 视为特殊情况。
Dialogue: 0,0:51:04.56,0:51:04.89,english,,0,0,0,,Why?
Dialogue: 0,0:51:04.89,0:51:05.49,english,,0,0,0,,Just because.
Dialogue: 0,0:51:04.89,0:51:05.49,chinese,,0,0,0,,只是因为：
Dialogue: 0,0:51:05.49,0:51:06.90,english,,0,0,0,,They needed some placeholder.
Dialogue: 0,0:51:05.49,0:51:06.90,chinese,,0,0,0,,他们需要一个占位符。
Dialogue: 0,0:51:06.90,0:51:10.11,english,,0,0,0,,They decided that, eh, no one's ever going to really want to type %s.
Dialogue: 0,0:51:06.90,0:51:10.11,chinese,,0,0,0,,他们觉得，没有人实际会输出 %s 这个内容。
Dialogue: 0,0:51:10.11,0:51:12.42,english,,0,0,0,,And if they do, they can just do %%s.
Dialogue: 0,0:51:10.11,0:51:12.42,chinese,,0,0,0,,如果有人真想这么输出，他们用 %%s 就行了。
Dialogue: 0,0:51:12.42,0:51:24.96,english,,0,0,0,,So they decided to implement printf in such a way that they have code that analyzes whatever text comes in, looks for %s, and then somehow plugs in the subsequent values into that placeholder.
Dialogue: 0,0:51:12.42,0:51:24.96,chinese,,0,0,0,,所以以这种方式实现了 printf，在第一个说明输出格式的字符串里，\N找到 %s，然后用一些方式，把后面参数的值插入到这占位符的位置。
Dialogue: 0,0:51:24.96,0:51:28.39,english,,0,0,0,,And just the-- ah, question?
Dialogue: 0,0:51:24.96,0:51:28.39,chinese,,0,0,0,,有问题吗？
Dialogue: 0,0:51:28.39,0:51:28.89,english,,0,0,0,,Sorry?
Dialogue: 0,0:51:28.89,0:51:30.87,english,,0,0,0,,AUDIENCE: What if we wanted to do our initials or something?
Dialogue: 0,0:51:28.89,0:51:30.87,chinese,,0,0,0,,观众：如果我们想打印自己名字缩写什么的呢？
Dialogue: 0,0:51:30.87,0:51:38.07,english,,0,0,0,,DAVID J. MALAN: Ah, so what if you wanted to do a single characters, like initials, like D M or D J M for first, middle, last, absolutely.
Dialogue: 0,0:51:30.87,0:51:38.07,chinese,,0,0,0,,啊，如果你想要显示单个字符，比如缩写，\N比如 D M 或者 D J M，分别代表名字、中间名和姓氏，当然可以。
Dialogue: 0,0:51:38.07,0:51:44.31,english,,0,0,0,,And that, too, is a perfect segue from the two of you to what, in general, are going to be called data types in C.
Dialogue: 0,0:51:38.07,0:51:44.31,chinese,,0,0,0,,你们两位同学提出的问题真不错。\N这个问题也正好过渡到了 C 语言中称为 "数据类型" 的概念。
Dialogue: 0,0:51:44.31,0:51:48.13,english,,0,0,0,,So it turns out, in C, there's not only strings as text.
Dialogue: 0,0:51:44.31,0:51:48.13,chinese,,0,0,0,,实际上，在 C 语言中，字符串并不是唯一的文本类型。
Dialogue: 0,0:51:48.13,0:51:52.56,english,,0,0,0,,And we'll see in more detail over the next couple of weeks what a string really is underneath the hood.
Dialogue: 0,0:51:48.13,0:51:52.56,chinese,,0,0,0,,在接下来的几周里，我们将更详细地了解到字符串的真实面目。
Dialogue: 0,0:51:52.56,0:51:55.62,english,,0,0,0,,But strings of text are not the only thing that programs can output.
Dialogue: 0,0:51:52.56,0:51:55.62,chinese,,0,0,0,,其实不是说程序只能输出文本字符串。
Dialogue: 0,0:51:55.62,0:51:58.86,english,,0,0,0,,They can indeed output single characters, as for initials.
Dialogue: 0,0:51:55.62,0:51:58.86,chinese,,0,0,0,,它们当然可以输出单字符，首字母缩写什么的。
Dialogue: 0,0:51:58.86,0:52:01.02,english,,0,0,0,,They can output integers as well.
Dialogue: 0,0:51:58.86,0:52:01.02,chinese,,0,0,0,,也可以输出整数。
Dialogue: 0,0:52:01.02,0:52:05.86,english,,0,0,0,,Turns out that printf has different format codes for all sorts of different data types.
Dialogue: 0,0:52:01.02,0:52:05.86,chinese,,0,0,0,,实际上，printf 函数为各种不同的数据类型提供了不同的格式代码。
Dialogue: 0,0:52:05.86,0:52:13.92,english,,0,0,0,,And just some of the data types we'll see in the coming weeks will be this list here, which you'll notice it almost perfectly lines up with the CS50 functions
Dialogue: 0,0:52:05.86,0:52:13.92,chinese,,0,0,0,,接下来几周我们将会看到一系列的数据类型，比如我之前提到 CS50 函数列表里面的，
Dialogue: 0,0:52:13.92,0:52:17.72,english,,0,0,0,,that I rattled off earlier, like get_char, get_int, get_string.
Dialogue: 0,0:52:13.92,0:52:17.72,chinese,,0,0,0,,get_char、get_int 和 get_string 什么的。
Dialogue: 0,0:52:17.72,0:52:23.49,english,,0,0,0,,The reason we called those functions that is because each of them is designed to return to you a different type of value.
Dialogue: 0,0:52:17.72,0:52:23.49,chinese,,0,0,0,,我们给这些函数取的函数名，其实是对应着它们返回的不同类型的值。
Dialogue: 0,0:52:23.49,0:52:26.07,english,,0,0,0,,We've used get_string already in this example here.
Dialogue: 0,0:52:23.49,0:52:26.07,chinese,,0,0,0,,刚才例子里面，我们已经用过了 get_string。
Dialogue: 0,0:52:26.07,0:52:29.88,english,,0,0,0,,We'll soon see get_int, and we'll see opportunities to use others.
Dialogue: 0,0:52:26.07,0:52:29.88,chinese,,0,0,0,,马上就会用到 get_int，也许还有别的。
Dialogue: 0,0:52:29.88,0:52:38.40,english,,0,0,0,,But these indeed are the menu of available data types plus others-- dot, dot, dot-- that you can use when writing a program in C.
Dialogue: 0,0:52:29.88,0:52:38.40,chinese,,0,0,0,,这里列出了一些数据类型，当然还省略了一些，都是你们写 C 程序的时候可以用到的。
Dialogue: 0,0:52:38.40,0:52:48.42,english,,0,0,0,,The onus, therefore, is on you to decide in advance, do I want to store an int in this variable, or a string, or, heck, when writing fancier code, an image, or a sound, or a video, even.
Dialogue: 0,0:52:38.40,0:52:48.42,chinese,,0,0,0,,现在，这个决定权在于你，你想在这个变量中存储一个 int，还是一个 string，\N或者，在编写更高级的代码时，存储图像、声音或视频什么的。
Dialogue: 0,0:52:48.42,0:52:51.03,english,,0,0,0,,Those can all be different data types, dot dot dot.
Dialogue: 0,0:52:48.42,0:52:51.03,chinese,,0,0,0,,这些数据类型列举不完的，点点点。
Dialogue: 0,0:52:48.42,0:52:51.03,annotation,,0,0,0,,*注：后面会学习到定义自己需要的数据类型，这里是说数据类型是无限多的。
Dialogue: 0,0:52:51.03,0:52:54.30,english,,0,0,0,,But for now we'll focus really on just these primitives.
Dialogue: 0,0:52:51.03,0:52:54.30,chinese,,0,0,0,,但现在我们只关注这些基本的数据类型。
Dialogue: 0,0:52:54.30,0:52:54.98,english,,0,0,0,,That was a lot.
Dialogue: 0,0:52:54.30,0:52:54.98,chinese,,0,0,0,,其实也不少了。
Dialogue: 0,0:52:54.98,0:52:57.03,english,,0,0,0,,Let's go ahead and take a five-minute break here.
Dialogue: 0,0:52:54.98,0:52:57.03,chinese,,0,0,0,,不过我们先休息五分钟。
Dialogue: 0,0:52:57.03,0:52:57.68,english,,0,0,0,,No cookies yet.
Dialogue: 0,0:52:57.03,0:52:57.68,chinese,,0,0,0,,现在还没饼干吃。
Dialogue: 0,0:52:57.68,0:53:00.18,english,,0,0,0,,But in five minutes, we'll come back, dive into more detail.
Dialogue: 0,0:52:57.68,0:53:00.18,chinese,,0,0,0,,五分钟后再回来，我们深入探讨更多细节。
Dialogue: 0,0:53:00.18,0:53:02.09,english,,0,0,0,,On our second break today, we'll have cookies.
Dialogue: 0,0:53:00.18,0:53:02.09,chinese,,0,0,0,,今天第二次休息时，我们就能吃到饼干了。
Dialogue: 0,0:53:05.64,0:53:07.29,english,,0,0,0,,All right, we are back.
Dialogue: 0,0:53:05.64,0:53:07.29,chinese,,0,0,0,,好了，我们继续。
Dialogue: 0,0:53:07.29,0:53:11.58,english,,0,0,0,,And so if you have been playing along at home but hitting some bumps in the road, that's totally normal.
Dialogue: 0,0:53:07.29,0:53:11.58,chinese,,0,0,0,,如果你在自己的电脑上跟着做练习时遇到了一些问题，其实很正常。
Dialogue: 0,0:53:11.58,0:53:18.02,english,,0,0,0,,And indeed, the goals of lecture generally will be to give you a sense, conceptually, of where we'll be going during the course of the week.
Dialogue: 0,0:53:11.58,0:53:18.02,chinese,,0,0,0,,其实，我们讲座的目标通常是在概念上为你展示这周我们将要学习的内容。
Dialogue: 0,0:53:18.02,0:53:25.73,english,,0,0,0,,But it's indeed through the hands-on labs and problem sets that you'll really have an opportunity at your own pace to work through some of those same bumps in the road.
Dialogue: 0,0:53:18.02,0:53:25.73,chinese,,0,0,0,,但是只有经过实验和问题集的磨砺，你才能慢慢按照自己的节奏解决问题和克服困难。
Dialogue: 0,0:53:25.73,0:53:28.88,english,,0,0,0,,But for today, let me give you a few more building blocks.
Dialogue: 0,0:53:25.73,0:53:28.88,chinese,,0,0,0,,今天的讲座里，我会再给你们介绍几个基础的东西。
Dialogue: 0,0:53:28.88,0:53:31.46,english,,0,0,0,,And these two will translate from Scratch initially.
Dialogue: 0,0:53:28.88,0:53:31.46,chinese,,0,0,0,,其中有两个例子还是从上周的 Scratch 转化过来的。
Dialogue: 0,0:53:31.46,0:53:43.37,english,,0,0,0,,Namely, like conditionals, like how now in C, after knowing now how we can use functions-- at least get_string and printf-- and we can use variables like the string I created earlier,
Dialogue: 0,0:53:31.46,0:53:43.37,chinese,,0,0,0,,具体来说，就是条件语句，以及怎么样在 C 语言里实现决策和条件判断。\N现在我们已经学到了使用函数，至少会用 get_string 和 printf 这两个函数了，\N还有怎么使用变量，比如我之前创建的那个字符串。
Dialogue: 0,0:53:43.37,0:53:47.10,english,,0,0,0,,how can I now add to the mix things like decision making and conditionals at that?
Dialogue: 0,0:53:43.37,0:53:47.10,chinese,,0,0,0,,那么现在我们要探索的是，如何把条件判断加入到这个过程中呢？
Dialogue: 0,0:53:47.10,0:53:50.78,english,,0,0,0,,Well, with conditionals in Scratch, we had this kind of syntax on the left.
Dialogue: 0,0:53:47.10,0:53:50.78,chinese,,0,0,0,,在 Scratch 中，我们有这种语法，就像左边这样。
Dialogue: 0,0:53:50.78,0:53:56.36,english,,0,0,0,,Here in Scratch is how you might express if two variables, x and y, have this relationship.
Dialogue: 0,0:53:50.78,0:53:56.36,chinese,,0,0,0,,这是 Scratch 里面，表达两个变量 x 和 y 之间关系的方式。
Dialogue: 0,0:53:56.36,0:54:01.02,english,,0,0,0,,If x is less than y, then say on the screen, x is less than y.
Dialogue: 0,0:53:56.36,0:54:01.02,chinese,,0,0,0,,如果 x 小于 y，那么在屏幕上显示 "x is less than y"。
Dialogue: 0,0:54:01.02,0:54:03.32,english,,0,0,0,,Well, let me translate that to the right now in C code.
Dialogue: 0,0:54:01.02,0:54:03.32,chinese,,0,0,0,,好吧，我现在要翻译成 C 代码。
Dialogue: 0,0:54:03.32,0:54:09.53,english,,0,0,0,,So in C, the corresponding code is going to look like this, assuming x and y already exist-- more on that later.
Dialogue: 0,0:54:03.32,0:54:09.53,chinese,,0,0,0,,那么在 C 语言中，对应的代码长这样，假设 x 和 y 已经存在—— 待会再详细解释。
Dialogue: 0,0:54:09.53,0:54:13.14,english,,0,0,0,,And notice a pattern we're going to see again and again.
Dialogue: 0,0:54:09.53,0:54:13.14,chinese,,0,0,0,,请注意，这是我们会一再看到的一种模式。
Dialogue: 0,0:54:13.14,0:54:20.39,english,,0,0,0,,There is going to be parentheses around the x and less than y-- so parentheses around the Boolean expression, recall.
Dialogue: 0,0:54:13.14,0:54:20.39,chinese,,0,0,0,,在 x 和 y 周围会有括号，就像布尔表达式周围的括号一样。
Dialogue: 0,0:54:20.39,0:54:27.68,english,,0,0,0,,The Boolean expression is the true/false, the yes/no answer, a question that you're trying to ask in order to decide whether or not to do something.
Dialogue: 0,0:54:20.39,0:54:27.68,chinese,,0,0,0,,回想一下，布尔表达式就是真/假、是/否的答案，提出来一个问题，决定是不是该执行某些操作。
Dialogue: 0,0:54:27.68,0:54:29.31,english,,0,0,0,,So you use parentheses there.
Dialogue: 0,0:54:27.68,0:54:29.31,chinese,,0,0,0,,因此，你要在这里使用括号。
Dialogue: 0,0:54:29.31,0:54:38.66,english,,0,0,0,,So similar in functions where we use parentheses for printf and parentheses for get_string, and this is just a weird inconsistency stylistically.
Dialogue: 0,0:54:29.31,0:54:38.66,chinese,,0,0,0,,类似于在使用 printf 和 get_string 时使用的括号，这只是一个可能各语言不太一致的风格问题。
Dialogue: 0,0:54:29.31,0:54:38.66,annotation,,0,0,0,,*注：就是说，有的语言里，条件语句的 if 后面不需要带括号，\N比如 python，这无伤大雅只是编程语言发明者选择的风格。
Dialogue: 0,0:54:38.66,0:54:44.69,english,,0,0,0,,When using the keyword if, you should, as a matter of best practice, put a space after the word if.
Dialogue: 0,0:54:38.66,0:54:44.69,chinese,,0,0,0,,在使用 if 关键字时，最好的做法是在单词 if 后面加上一个空格。
Dialogue: 0,0:54:44.69,0:54:49.07,english,,0,0,0,,When using a function like printf or get_string, you shouldn't.
Dialogue: 0,0:54:44.69,0:54:49.07,chinese,,0,0,0,,在使用 printf 或 get_string 这样的函数时，则不需要。
Dialogue: 0,0:54:49.07,0:54:55.97,english,,0,0,0,,Both will work, but you'll find that these are conventions stylistically that most people adhere to-- so space when using an if here.
Dialogue: 0,0:54:49.07,0:54:55.97,chinese,,0,0,0,,两种写法都可以，但你会发现这些都是大多数人遵循的风格约定——\N这里在 if 后面加上一个空格。
Dialogue: 0,0:54:55.97,0:55:02.36,english,,0,0,0,,All right, now inside of the curly braces is where the actual code goes that you want to execute conditionally.
Dialogue: 0,0:54:55.97,0:55:02.36,chinese,,0,0,0,,好的，现在花括号里面是你要根据上面条件执行的实际代码。
Dialogue: 0,0:55:02.36,0:55:12.74,english,,0,0,0,,So if you want to print out x is less than y only if x is actually less than y in C, you use this open curly brace-- which, up until now, you've probably rarely used on your keyboard--
Dialogue: 0,0:55:02.36,0:55:12.74,chinese,,0,0,0,,所以，如果你想在 C 语言中只有当 x 确实小于 y 时才打印出 "x is less than y"，\N你就会使用一对花括号，也许之前你没怎么敲过这个符号。
Dialogue: 0,0:55:12.74,0:55:14.82,english,,0,0,0,,and the closed curly brace down here.
Dialogue: 0,0:55:12.74,0:55:14.82,chinese,,0,0,0,,在这里添加左花括号，然后在下面添加右花括号。
Dialogue: 0,0:55:14.82,0:55:25.05,english,,0,0,0,,And those are hugging, if you will, the one or more lines of code underneath the if-- very similar in spirit to how the orange block here hugs the purple puzzle piece here.
Dialogue: 0,0:55:14.82,0:55:25.05,chinese,,0,0,0,,可以把它们看作是在 if 下方紧密相连的，就像这里橙色的块紧密包裹住里面紫色的代码块一样。
Dialogue: 0,0:55:25.05,0:55:27.05,english,,0,0,0,,So there's no graphics in C. It's all text.
Dialogue: 0,0:55:25.05,0:55:27.05,chinese,,0,0,0,,在 C 语言中没有图形，都是文本。
Dialogue: 0,0:55:27.05,0:55:31.76,english,,0,0,0,,So you can think of those curly braces as really representing the same idea.
Dialogue: 0,0:55:27.05,0:55:31.76,chinese,,0,0,0,,这个花括号和 Scratch 里面的表示异曲同工。
Dialogue: 0,0:55:31.76,0:55:41.43,english,,0,0,0,,As a side note, if you only have one line of code inside of the if condition, if you will, you strictly, speaking, don't need the curly braces.
Dialogue: 0,0:55:31.76,0:55:41.43,chinese,,0,0,0,,顺便说一句，如果在 if 条件中只有一行代码，严格来说，你不需要使用花括号。
Dialogue: 0,0:55:41.43,0:55:43.67,english,,0,0,0,,But as a matter of good style, do include them.
Dialogue: 0,0:55:41.43,0:55:43.67,chinese,,0,0,0,,不过，为了保持良好的编码风格，最好还是加上花括号。
Dialogue: 0,0:55:43.67,0:55:46.04,english,,0,0,0,,It will make more obvious what your intent is.
Dialogue: 0,0:55:43.67,0:55:46.04,chinese,,0,0,0,,这将使你的意图更加明显。
Dialogue: 0,0:55:46.04,0:55:52.70,english,,0,0,0,,How about in Scratch if you wanted to express this-- two ways in the road that you might go, left or right, so to speak?
Dialogue: 0,0:55:46.04,0:55:52.70,chinese,,0,0,0,,在 Scratch 中，如果你想要表达这个条件，\N在两个分支中选择一条路，左边或右边，那么你可以这样做：
Dialogue: 0,0:55:52.70,0:55:56.48,english,,0,0,0,,Well, if x is less than y, I want to say, x is less than y.
Dialogue: 0,0:55:52.70,0:55:56.48,chinese,,0,0,0,,如果 x 小于 y，我想要在屏幕上显示 "x is less than y"。
Dialogue: 0,0:55:56.48,0:56:01.19,english,,0,0,0,,Else, I want to say the opposite, x is not less than y in this case.
Dialogue: 0,0:55:56.48,0:56:01.19,chinese,,0,0,0,,否则，我想在这种情况下显示相反的信息，即 "x is not less than y"。
Dialogue: 0,0:56:01.19,0:56:03.71,english,,0,0,0,,So I'm making a decision based on that Boolean expression.
Dialogue: 0,0:56:01.19,0:56:03.71,chinese,,0,0,0,,所以，我根据布尔表达式做出了一个决策。
Dialogue: 0,0:56:03.71,0:56:14.69,english,,0,0,0,,In C, It's almost the same, but you're adding to the mix the key word else-- so MIT borrowed for Scratch the same keyword there-- and a second pair of curly braces, open and close respectively.
Dialogue: 0,0:56:03.71,0:56:14.69,chinese,,0,0,0,,在 C 语言中几乎是一样的，但是你需要在这个过程中加入关键字 else，\N所以说MIT 在 Scratch 中借用了同一个关键字，当然还多了一对花括号，左花括号和右花括号。
Dialogue: 0,0:56:14.69,0:56:17.15,english,,0,0,0,,And you might guess now what goes inside of those.
Dialogue: 0,0:56:14.69,0:56:17.15,chinese,,0,0,0,,现在你可能已经猜到里面应该装什么了。
Dialogue: 0,0:56:17.15,0:56:22.90,english,,0,0,0,,Well, you print out x is less than y, or you print out x is not less than y.
Dialogue: 0,0:56:17.15,0:56:22.90,chinese,,0,0,0,,那么，你可以打印出 "x is less than y"，或者打印出 "x is not less than y"。
Dialogue: 0,0:56:22.90,0:56:25.28,english,,0,0,0,,All right, what if there is a three-way fork in the road?
Dialogue: 0,0:56:22.90,0:56:25.28,chinese,,0,0,0,,那要是我们想要三岔路口呢？
Dialogue: 0,0:56:25.28,0:56:29.37,english,,0,0,0,,In Scratch, this actually gets a little unwieldy graphically, if you will.
Dialogue: 0,0:56:25.28,0:56:29.37,chinese,,0,0,0,,在 Scratch 中，这用图形表示得确实有点不方便。
Dialogue: 0,0:56:29.37,0:56:36.11,english,,0,0,0,,But notice that in Scratch, this is how we could express if x is less than y, say x is less than y.
Dialogue: 0,0:56:29.37,0:56:36.11,chinese,,0,0,0,,注意在 Scratch 中，我们可以这样表达：如果 x 小于 y，则显示 "x is less than y"。
Dialogue: 0,0:56:36.11,0:56:40.76,english,,0,0,0,,Else if x is greater than y, say x is greater than y.
Dialogue: 0,0:56:36.11,0:56:40.76,chinese,,0,0,0,,否则，如果 x 大于 y，则显示 "x is greater than y"。
Dialogue: 0,0:56:40.76,0:56:45.47,english,,0,0,0,,Else if x equals y, then say x is equal to y.
Dialogue: 0,0:56:40.76,0:56:45.47,chinese,,0,0,0,,或者，如果 x 等于 y，则显示 "x is equal to y"。
Dialogue: 0,0:56:45.47,0:56:48.77,english,,0,0,0,,Now, minor inconsistency here.
Dialogue: 0,0:56:45.47,0:56:48.77,chinese,,0,0,0,,这里有一点小矛盾。
Dialogue: 0,0:56:48.77,0:56:54.43,english,,0,0,0,,Just a little bit ago, I claimed, in C, that an equal sign represents what operation?
Dialogue: 0,0:56:48.77,0:56:54.43,chinese,,0,0,0,,就在刚才，我说在 C 语言中，等号表示什么操作？
Dialogue: 0,0:56:54.43,0:56:55.31,english,,0,0,0,,AUDIENCE: Assignment.
Dialogue: 0,0:56:54.43,0:56:55.31,chinese,,0,0,0,,观众：赋值。
Dialogue: 0,0:56:55.31,0:56:57.77,english,,0,0,0,,DAVID J. MALAN: Assignment from right to left.
Dialogue: 0,0:56:55.31,0:56:57.77,chinese,,0,0,0,,从右到左的赋值操作。
Dialogue: 0,0:56:57.77,0:57:06.36,english,,0,0,0,,Insofar as Scratch is really meant for kids, and they didn't really want to get into the weeds of this kind of semantic, equal sign in Scratch means equality.
Dialogue: 0,0:56:57.77,0:57:06.36,chinese,,0,0,0,,由于 Scratch 实际上是为孩子们设计的，并且不想让他们被语法所困扰，\N所以在 Scratch 中，等号表示相等。
Dialogue: 0,0:57:06.36,0:57:09.05,english,,0,0,0,,However, we're going to need to fix this in C in just a moment.
Dialogue: 0,0:57:06.36,0:57:09.05,chinese,,0,0,0,,不过，我们马上就需要用 C 语言来纠正这个用法。
Dialogue: 0,0:57:09.05,0:57:11.75,english,,0,0,0,,In C, equal sign means assignment right to left.
Dialogue: 0,0:57:09.05,0:57:11.75,chinese,,0,0,0,,在 C 语言中，等号表示从右到左的赋值。
Dialogue: 0,0:57:11.75,0:57:14.21,english,,0,0,0,,In Scratch, it literally means what you would expect.
Dialogue: 0,0:57:11.75,0:57:14.21,chinese,,0,0,0,,在 Scratch 中，它表示你期望相等的。
Dialogue: 0,0:57:14.21,0:57:20.78,english,,0,0,0,,All right, let's translate this code then to C. On the right, this code would correspond really to this.
Dialogue: 0,0:57:14.21,0:57:20.78,chinese,,0,0,0,,好了，让我们把这段代码翻译成 C 语言。
Dialogue: 0,0:57:20.78,0:57:29.10,english,,0,0,0,,And you can perhaps see, somewhat goofily, what the solution was, not unlike the %% solution earlier when humans painted themselves into one other corner.
Dialogue: 0,0:57:20.78,0:57:29.10,chinese,,0,0,0,,左右边的代码是对应的。\N你可能看出来了，有点滑稽，= 的解决方法跟之前解决 % 问题差不多（变成 %%）。
Dialogue: 0,0:57:29.10,0:57:36.62,english,,0,0,0,,You say if, you say else if, and you say else if, and how did we resolve the use of a single equal sign already?
Dialogue: 0,0:57:29.10,0:57:36.62,chinese,,0,0,0,,你使用 if，还有两个 else if，但我们怎么解决 = 已经用来代表赋值这个问题呢？
Dialogue: 0,0:57:36.62,0:57:47.09,english,,0,0,0,,In C, when you want to express equality-- is the thing on the left equal to the thing on the right-- you literally use two equal signs right next to each other, no space in between them.
Dialogue: 0,0:57:36.62,0:57:47.09,chinese,,0,0,0,,在 C 语言中，当你想要表达相等性，也就是左边的东西是否等于右边的东西时，\N你会在一起使用两个连续的等号，它们之间没有空格。
Dialogue: 0,0:57:47.09,0:57:53.64,english,,0,0,0,,But now this code would be correct on both the left and the right, whether you're doing this in Scratch or C respectively.
Dialogue: 0,0:57:47.09,0:57:53.64,chinese,,0,0,0,,现在左右这两段代码都是正确的，无论在 Scratch 还是在 C 中执行。
Dialogue: 0,0:57:53.64,0:57:58.40,english,,0,0,0,,But now we can nitpick our code, specifically the design thereof.
Dialogue: 0,0:57:53.64,0:57:58.40,chinese,,0,0,0,,不过我们现在可以更加挑剔一点，来审视其中的设计。
Dialogue: 0,0:57:58.40,0:58:04.28,english,,0,0,0,,Logically, can anyone critique the design of this code, either in Scratch or C?
Dialogue: 0,0:57:58.40,0:58:04.28,chinese,,0,0,0,,从逻辑上讲，有人能对这段代码的设计（Scratch 或 C 语言）提出批评吗？
Dialogue: 0,0:58:04.28,0:58:06.20,english,,0,0,0,,I feel like we could do better.
Dialogue: 0,0:58:04.28,0:58:06.20,chinese,,0,0,0,,我觉得我们可以做得更好。
Dialogue: 0,0:58:06.20,0:58:07.57,english,,0,0,0,,How about in back?
Dialogue: 0,0:58:06.20,0:58:07.57,chinese,,0,0,0,,后面这位请讲？
Dialogue: 0,0:58:07.57,0:58:12.93,english,,0,0,0,,AUDIENCE: The only option after it getting greater than or less than is [INAUDIBLE].
Dialogue: 0,0:58:12.93,0:58:13.93,english,,0,0,0,,DAVID J. MALAN: Perfect.
Dialogue: 0,0:58:12.93,0:58:13.93,chinese,,0,0,0,,太好了。
Dialogue: 0,0:58:13.93,0:58:22.51,english,,0,0,0,,Logically, it's got to be the case that x is less than y, or x is greater than y, or by conclusion, it's got to be equal to y.
Dialogue: 0,0:58:13.93,0:58:22.51,chinese,,0,0,0,,逻辑上，必须是 x 小于 y，或者 x 大于 y，或者都不满足，接下来必须是等于 y。
Dialogue: 0,0:58:22.51,0:58:26.17,english,,0,0,0,,So why are you wasting my time or the computer's time asking a third question?
Dialogue: 0,0:58:22.51,0:58:26.17,chinese,,0,0,0,,那么为什么要浪费时间来问第三个问题呢？
Dialogue: 0,0:58:26.17,0:58:31.51,english,,0,0,0,,You don't need to ask this final else if because logically, as you note, it should go without saying.
Dialogue: 0,0:58:26.17,0:58:31.51,chinese,,0,0,0,,你不需要问这个最后的 else if，因为从逻辑上讲，刚才同学说的，这是不言自明的。
Dialogue: 0,0:58:31.51,0:58:33.22,english,,0,0,0,,So it's a minor tweak.
Dialogue: 0,0:58:31.51,0:58:33.22,chinese,,0,0,0,,所以这只是一个小的调整。
Dialogue: 0,0:58:33.22,0:58:37.12,english,,0,0,0,,You're doing extra work potentially in the cases where x equals y.
Dialogue: 0,0:58:33.22,0:58:37.12,chinese,,0,0,0,,在 x 等于 y 的情况下，你可能会多做一些工作。
Dialogue: 0,0:58:37.12,0:58:38.35,english,,0,0,0,,So we can just refine that.
Dialogue: 0,0:58:37.12,0:58:38.35,chinese,,0,0,0,,所以我们可以进行一些改进。
Dialogue: 0,0:58:38.35,0:58:47.11,english,,0,0,0,,And just like in Scratch, you could just use an else block, similarly in C, could we simplify this code to just an else, a sort of catch-all logically
Dialogue: 0,0:58:38.35,0:58:47.11,chinese,,0,0,0,,就像在 Scratch，你可以使用 else 块，\N 同样在 C 中，我们可以简化这段代码，只使用一个 else，
Dialogue: 0,0:58:47.11,0:58:52.40,english,,0,0,0,,that just handles the reality that, of course, that's going to be the final situation instead.
Dialogue: 0,0:58:47.11,0:58:52.40,chinese,,0,0,0,,最后的 else 能用于处理最终 x == y 的情况，现在所有情况都考虑到了。
Dialogue: 0,0:58:52.40,0:58:56.77,english,,0,0,0,,All right, so we have this ability now to express conditionals with Boolean expressions.
Dialogue: 0,0:58:52.40,0:58:56.77,chinese,,0,0,0,,好了，我们现在学会用布尔表达式来表示条件语句了。
Dialogue: 0,0:58:56.77,0:58:59.03,english,,0,0,0,,Let's actually do something with this next here.
Dialogue: 0,0:58:56.77,0:58:59.03,chinese,,0,0,0,,接下来，让我们来实际做些事情。
Dialogue: 0,0:58:59.03,0:59:00.61,english,,0,0,0,,So let me go back to VS Code.
Dialogue: 0,0:58:59.03,0:59:00.61,chinese,,0,0,0,,回到 VS Code。
Dialogue: 0,0:59:00.61,0:59:05.02,english,,0,0,0,,I've closed hello.c, and I want to create a second file for the sake of some demos now.
Dialogue: 0,0:59:00.61,0:59:05.02,chinese,,0,0,0,,我已经关闭了 hello.c，现在想再创建一个文件，好进行演示。
Dialogue: 0,0:59:05.02,0:59:11.44,english,,0,0,0,,Recall that you can create a new files by typing code, space, and then the name of the file you want to create.
Dialogue: 0,0:59:05.02,0:59:11.44,chinese,,0,0,0,,要记住，创建新文件的命令是，code，空格，后面是你想创建的文件名字。
Dialogue: 0,0:59:11.44,0:59:13.56,english,,0,0,0,,For instance, I might do compare.c.
Dialogue: 0,0:59:11.44,0:59:13.56,chinese,,0,0,0,,这里例子需要我创建 compare.c。
Dialogue: 0,0:59:13.56,0:59:17.74,english,,0,0,0,,I want to write a program that's going to start comparing some values for demonstration's sake.
Dialogue: 0,0:59:13.56,0:59:17.74,chinese,,0,0,0,,我想编写一个程序，来比较一些数值作为演示。
Dialogue: 0,0:59:17.74,0:59:25.18,english,,0,0,0,,But before I do that, let me just show you by opening the File Explorer at right, this is similar in spirit to a Mac or PC.
Dialogue: 0,0:59:17.74,0:59:25.18,chinese,,0,0,0,,敲回车以前，我先打开左边的文件资源管理器，\N向你展示一下，它的功能与 Mac 或 PC 相似。
Dialogue: 0,0:59:25.18,0:59:30.01,english,,0,0,0,,You can go up here and click on an icon, and you can click on the plus icon, and you'll get a blue box.
Dialogue: 0,0:59:25.18,0:59:30.01,chinese,,0,0,0,,你可以点击这个带加号的图标，会出现一个蓝色框。
Dialogue: 0,0:59:30.01,0:59:34.12,english,,0,0,0,,And I can type in compare.c, and I can just manually create it that way.
Dialogue: 0,0:59:30.01,0:59:34.12,chinese,,0,0,0,,我可以输入 compare.c，以此手动创建。
Dialogue: 0,0:59:34.12,0:59:37.93,english,,0,0,0,,Notice that opens the tab even without my having typed code.
Dialogue: 0,0:59:34.12,0:59:37.93,chinese,,0,0,0,,请注意，即使我还没有输入代码，也能打开这个标签页。
Dialogue: 0,0:59:37.93,0:59:42.82,english,,0,0,0,,So again, on the left, you have a GUI, a Graphical User Interface, albeit a simplistic one.
Dialogue: 0,0:59:37.93,0:59:42.82,chinese,,0,0,0,,再说明一遍，在左边，你有一个图形用户界面（GUI），尽管很简单。
Dialogue: 0,0:59:42.82,0:59:47.26,english,,0,0,0,,On the right and at the bottom here, you have a command line interface, but they're one in the same.
Dialogue: 0,0:59:42.82,0:59:47.26,chinese,,0,0,0,,在右下角，你有一个命令行界面（CLI），它们是一致的。
Dialogue: 0,0:59:47.26,0:59:58.93,english,,0,0,0,,What's nice, though, is that if I close this file accidentally, intentionally, whatnot, I can reopen it without creating a new one by just running that same command-- code, space, compare.c.
Dialogue: 0,0:59:47.26,0:59:58.93,chinese,,0,0,0,,如果我关闭了这个标签页，只要运行同样的命令——\Ncode compare.c，就能重新打开它，而不是创建一个新文件。
Dialogue: 0,0:59:58.93,1:00:00.34,english,,0,0,0,,So code is a VS Code thing.
Dialogue: 0,0:59:58.93,1:00:00.34,chinese,,0,0,0,,所以 code 命令是 VS Code 的东西。
Dialogue: 0,1:00:00.34,1:00:02.14,english,,0,0,0,,It's just a user-friendly shortcut.
Dialogue: 0,1:00:00.34,1:00:02.14,chinese,,0,0,0,,这只是一个方便用户的快捷方式。
Dialogue: 0,1:00:02.14,1:00:05.88,english,,0,0,0,,But it's just creating a file or opening an existing file like that.
Dialogue: 0,1:00:02.14,1:00:05.88,chinese,,0,0,0,,它的用途是创建一个文件或打开一个现有的文件。
Dialogue: 0,1:00:05.88,1:00:08.93,english,,0,0,0,,I'm going to hide the File Explorer just to make more room for code here.
Dialogue: 0,1:00:05.88,1:00:08.93,chinese,,0,0,0,,为了给右边代码腾出些空间，我把文件资源管理器隐藏掉。
Dialogue: 0,1:00:08.93,1:00:10.22,english,,0,0,0,,And let's go ahead and do this.
Dialogue: 0,1:00:08.93,1:00:10.22,chinese,,0,0,0,,现在开始写吧。
Dialogue: 0,1:00:10.22,1:00:15.34,english,,0,0,0,,Let's write a program that compares two values that the human inputs, but not strings this time.
Dialogue: 0,1:00:10.22,1:00:15.34,chinese,,0,0,0,,我们来写个程序，比较输入的两个值，但这次不是字符串了。
Dialogue: 0,1:00:15.34,1:00:17.17,english,,0,0,0,,Let's use some actual integers.
Dialogue: 0,1:00:15.34,1:00:17.17,chinese,,0,0,0,,这次要用到整数。
Dialogue: 0,1:00:17.17,1:00:23.26,english,,0,0,0,,All right, I'm going to go ahead and include the CS50 library's header file at top-- cs50.h.
Dialogue: 0,1:00:17.17,1:00:23.26,chinese,,0,0,0,,一样的，在代码最开头 include CS50 库的头文件 cs50.h。
Dialogue: 0,1:00:23.26,1:00:25.80,english,,0,0,0,,I'm going to also include stdio.h.
Dialogue: 0,1:00:23.26,1:00:25.80,chinese,,0,0,0,,以及 stdio.h。
Dialogue: 0,1:00:25.80,1:00:26.66,english,,0,0,0,,Why?
Dialogue: 0,1:00:26.66,1:00:31.19,english,,0,0,0,,One gives me user-friendly input via get_string, get_int, and so forth.
Dialogue: 0,1:00:26.66,1:00:31.19,chinese,,0,0,0,,cs50.h 提供了 get_string、get_int 等函数方便用户进行输入。
Dialogue: 0,1:00:31.19,1:00:35.56,english,,0,0,0,,One gives me user-friendly output via printf in the case of stdio.h.
Dialogue: 0,1:00:31.19,1:00:35.56,chinese,,0,0,0,,stdio.h 提供了 printf，能够用户友好地进行输出。
Dialogue: 0,1:00:35.56,1:00:40.31,english,,0,0,0,,Now I'm just going to blindly type this line of code, which we'll come back to in future weeks.
Dialogue: 0,1:00:35.56,1:00:40.31,chinese,,0,0,0,,现在，我只是把这几行照搬下来了，过几周我们会讨论到这个。
Dialogue: 0,1:00:40.31,1:00:44.92,english,,0,0,0,,But for now, that's analogous to the when green flag clicked code in Scratch.
Dialogue: 0,1:00:40.31,1:00:44.92,chinese,,0,0,0,,现在可以类比 Scratch 中 "when green flag clicked" 那个代码块。
Dialogue: 0,1:00:44.92,1:00:46.46,english,,0,0,0,,And now let's go ahead and do this.
Dialogue: 0,1:00:44.92,1:00:46.46,chinese,,0,0,0,,说干就干。
Dialogue: 0,1:00:46.46,1:00:51.71,english,,0,0,0,,Let me go ahead and get_int from the user and ask the user, What's x, question mark.
Dialogue: 0,1:00:46.46,1:00:51.71,chinese,,0,0,0,,用 get_int 函数从用户那里拿到一个整数（integer），问的问题是 "What's x?"。
Dialogue: 0,1:00:51.71,1:00:53.38,english,,0,0,0,,I'm not going to bother with a new line.
Dialogue: 0,1:00:51.71,1:00:53.38,chinese,,0,0,0,,我不想新起一行了。
Dialogue: 0,1:00:53.38,1:00:56.41,english,,0,0,0,,I want to keep it all in one line, just for aesthetics' sake.
Dialogue: 0,1:00:53.38,1:00:56.41,chinese,,0,0,0,,为了美观起见，问的问题就保持到这一行上面。
Dialogue: 0,1:00:56.41,1:00:59.71,english,,0,0,0,,But when I get back and int, just like I get back a string,
Dialogue: 0,1:00:56.41,1:00:59.71,chinese,,0,0,0,,但是，当我取回一个 int 时，跟取回一个字符串一样，
Dialogue: 0,1:00:59.71,1:01:01.58,english,,0,0,0,,I get back a return value.
Dialogue: 0,1:00:59.71,1:01:01.58,chinese,,0,0,0,,我得到的是一个返回值。
Dialogue: 0,1:01:01.58,1:01:06.04,english,,0,0,0,,So if I want to store the result of get_int somewhere,
Dialogue: 0,1:01:01.58,1:01:06.04,chinese,,0,0,0,,因此，如果我想把 get_int 的结果存储在某个地方，我应该怎么做呢？
Dialogue: 0,1:01:06.04,1:01:07.92,english,,0,0,0,,I had better put it in a variable.
Dialogue: 0,1:01:06.04,1:01:07.92,chinese,,0,0,0,,我最好把它存在一个变量里。
Dialogue: 0,1:01:07.92,1:01:09.76,english,,0,0,0,,And I can call the variable anything I want.
Dialogue: 0,1:01:07.92,1:01:09.76,chinese,,0,0,0,,我可以随意调用变量。
Dialogue: 0,1:01:09.76,1:01:12.79,english,,0,0,0,,Previously, I used answer, or first, or last.
Dialogue: 0,1:01:09.76,1:01:12.79,chinese,,0,0,0,,以前用过的变量叫 answer，first 和 last。
Dialogue: 0,1:01:12.79,1:01:14.41,english,,0,0,0,,Now I'm going to use x.
Dialogue: 0,1:01:12.79,1:01:14.41,chinese,,0,0,0,,现在我取个名字 x。
Dialogue: 0,1:01:14.41,1:01:19.87,english,,0,0,0,,But there's still two things left to do here logically, even though we haven't technically done this yet.
Dialogue: 0,1:01:14.41,1:01:19.87,chinese,,0,0,0,,但从逻辑上讲，这里还要做两件事，我们还没有进行技术上的实现。
Dialogue: 0,1:01:19.87,1:01:21.13,english,,0,0,0,,What I still need to do?
Dialogue: 0,1:01:19.87,1:01:21.13,chinese,,0,0,0,,是什么事情要做？
Dialogue: 0,1:01:21.13,1:01:22.41,english,,0,0,0,,AUDIENCE: A semicolon.
Dialogue: 0,1:01:21.13,1:01:22.41,chinese,,0,0,0,,观众：添一个分号。
Dialogue: 0,1:01:22.41,1:01:24.53,english,,0,0,0,,DAVID J. MALAN: So I need the semicolon at the end.
Dialogue: 0,1:01:22.41,1:01:24.53,chinese,,0,0,0,,所以我需要在末尾加上分号。
Dialogue: 0,1:01:24.53,1:01:26.01,english,,0,0,0,,AUDIENCE: And the int first.
Dialogue: 0,1:01:24.53,1:01:26.01,chinese,,0,0,0,,观众：在最开始添上 int。
Dialogue: 0,1:01:26.01,1:01:27.88,english,,0,0,0,,DAVID J. MALAN: And the int at the beginning.
Dialogue: 0,1:01:26.01,1:01:27.88,chinese,,0,0,0,,还有开头的 int。
Dialogue: 0,1:01:27.88,1:01:32.84,english,,0,0,0,,You the programmer, starting today, need to decide what you're going to be storing in your variables.
Dialogue: 0,1:01:27.88,1:01:32.84,chinese,,0,0,0,,从现在起，程序员需要自己决定在变量中存储什么内容。
Dialogue: 0,1:01:32.84,1:01:35.75,english,,0,0,0,,And you just need to tell the computer that so that it knows.
Dialogue: 0,1:01:32.84,1:01:35.75,chinese,,0,0,0,,你需要声明给电脑，它就记住了。
Dialogue: 0,1:01:35.75,1:01:41.24,english,,0,0,0,,Now, as a teaser for languages like Python, more modern languages, turns out, humans realized, well, gee, this is stupid.
Dialogue: 0,1:01:35.75,1:01:41.24,chinese,,0,0,0,,现在，我先预告一下 Python 等更加现代的语言。人类意识到，哎呀这太蠢了。
Dialogue: 0,1:01:41.24,1:01:44.11,english,,0,0,0,,Why can't the computer just figure out that I'm putting an int there?
Dialogue: 0,1:01:41.24,1:01:44.11,chinese,,0,0,0,,为什么电脑不能判断出我在这里输入了一个 int？
Dialogue: 0,1:01:44.11,1:01:45.80,english,,0,0,0,,Why do I have to tell it proactively?
Dialogue: 0,1:01:44.11,1:01:45.80,chinese,,0,0,0,,为什么一定要我主动告诉它？
Dialogue: 0,1:01:45.80,1:01:50.99,english,,0,0,0,,So in some languages nowadays, like Python will get rid of some of this syntax, will get rid of the semicolons.
Dialogue: 0,1:01:45.80,1:01:50.99,chinese,,0,0,0,,因此，在一些现代语言里，比如 Python，\N把必须类型声明这个规定去掉了，把对分号的要求也去掉了。
Dialogue: 0,1:01:50.99,1:01:54.53,english,,0,0,0,,But for now we're looking at, really, the origins of how this all worked.
Dialogue: 0,1:01:50.99,1:01:54.53,chinese,,0,0,0,,我们现在看到的，是语言万法的那个源头。
Dialogue: 0,1:01:54.53,1:01:57.38,english,,0,0,0,,All right, so I've done this one line ending with semicolon.
Dialogue: 0,1:01:54.53,1:01:57.38,chinese,,0,0,0,,好了，我用分号给这行收尾了。
Dialogue: 0,1:01:57.38,1:01:58.44,english,,0,0,0,,Let me do one other.
Dialogue: 0,1:01:57.38,1:01:58.44,chinese,,0,0,0,,还要做一件事。
Dialogue: 0,1:01:58.44,1:02:02.39,english,,0,0,0,,And let me get a second int asking the user, What's y, question mark.
Dialogue: 0,1:01:58.44,1:02:02.39,chinese,,0,0,0,,再问一下用户，"What's y?"。
Dialogue: 0,1:02:02.39,1:02:06.68,english,,0,0,0,,So almost identical but different responses from the user, hopefully.
Dialogue: 0,1:02:02.39,1:02:06.68,chinese,,0,0,0,,和上一行差不多，但希望用户输进来点不一样的。
Dialogue: 0,1:02:06.68,1:02:18.95,english,,0,0,0,,And let me just ask simply if x is less than y, in parentheses, then some curly braces, let me go ahead and print out, quote/unquote, x is less than y backslash n.
Dialogue: 0,1:02:06.68,1:02:18.95,chinese,,0,0,0,,然后我得做出条件判断：\N如果 x 小于 y，然后输入一对花括号，我就打印出 "x is less than y\{}n" 。
Dialogue: 0,1:02:18.95,1:02:20.60,english,,0,0,0,,And now just as a side note--
Dialogue: 0,1:02:18.95,1:02:20.60,chinese,,0,0,0,,顺便说一句，
Dialogue: 0,1:02:20.60,1:02:23.24,english,,0,0,0,,I seem to be typing fast.
Dialogue: 0,1:02:20.60,1:02:23.24,chinese,,0,0,0,,我好像敲起代码来很快。
Dialogue: 0,1:02:23.24,1:02:25.61,english,,0,0,0,,Some of that is because VS Code is helping me.
Dialogue: 0,1:02:23.24,1:02:25.61,chinese,,0,0,0,,有些是因为 VS Code 在帮助我。
Dialogue: 0,1:02:25.61,1:02:29.72,english,,0,0,0,,Let me go back to this first line with the if, hit Enter.
Dialogue: 0,1:02:25.61,1:02:29.72,chinese,,0,0,0,,让我返回到 if 的第一行，然后按 Enter 键。
Dialogue: 0,1:02:29.72,1:02:33.63,english,,0,0,0,,And now I'm only on my keyboard going to type the open curly brace.
Dialogue: 0,1:02:29.72,1:02:33.63,chinese,,0,0,0,,现在我只需要在键盘上输入左花括号。
Dialogue: 0,1:02:33.63,1:02:36.41,english,,0,0,0,,This is a feature of many text editors nowadays.
Dialogue: 0,1:02:33.63,1:02:36.41,chinese,,0,0,0,,这是现在许多文本编辑器都有的一个功能。
Dialogue: 0,1:02:36.41,1:02:37.98,english,,0,0,0,,It finishes part of your thought.
Dialogue: 0,1:02:36.41,1:02:37.98,chinese,,0,0,0,,它会完成你的部分想法。
Dialogue: 0,1:02:37.98,1:02:38.48,english,,0,0,0,,Why?
Dialogue: 0,1:02:38.48,1:02:42.66,english,,0,0,0,,Just to save yourself a keystroke to make sure you don't accidentally forget the closing one.
Dialogue: 0,1:02:38.48,1:02:42.66,chinese,,0,0,0,,这样可以节省一个按键，免得你不小心忘记了右花括号。
Dialogue: 0,1:02:42.66,1:02:45.75,english,,0,0,0,,So you'll notice sometimes that things are happening that you didn't type.
Dialogue: 0,1:02:42.66,1:02:45.75,chinese,,0,0,0,,所以你会注意到，有时会出现一些你没有输入的东西。
Dialogue: 0,1:02:45.75,1:02:49.55,english,,0,0,0,,It's just VS Code or future programs you use trying to be helpful for you.
Dialogue: 0,1:02:45.75,1:02:49.55,chinese,,0,0,0,,这只是 VS Code 或什么程序想帮帮你。
Dialogue: 0,1:02:49.55,1:02:57.05,english,,0,0,0,,I'll go ahead and manually type out now printf x is less than y backslash n close quote semicolon.
Dialogue: 0,1:02:49.55,1:02:57.05,chinese,,0,0,0,,我现在就手动输入 printf("x is less than y\{}n"); 。
Dialogue: 0,1:02:57.05,1:03:02.00,english,,0,0,0,,So let me go ahead now and try to run this, and we'll see-- let's see.
Dialogue: 0,1:02:57.05,1:03:02.00,chinese,,0,0,0,,然后现在尝试跑一下看看。
Dialogue: 0,1:03:02.00,1:03:09.05,english,,0,0,0,,So make-- not hello-- but make compare because this file is called compare.c, hitting Enter.
Dialogue: 0,1:03:02.00,1:03:09.05,chinese,,0,0,0,,这次不是 make hello 了，而是 make compare，因为这个文件叫 compare.c，敲回车。
Dialogue: 0,1:03:09.05,1:03:12.32,english,,0,0,0,,No output is good because it means I haven't messed up.
Dialogue: 0,1:03:09.05,1:03:12.32,chinese,,0,0,0,,命令没有输出是好事，这说明没有任何错误和警告信息。
Dialogue: 0,1:03:12.32,1:03:16.58,english,,0,0,0,,Let me ./compare instead of ./hello, Enter.
Dialogue: 0,1:03:12.32,1:03:16.58,chinese,,0,0,0,,让我用 ./compare 代替 ./hello，回车。
Dialogue: 0,1:03:16.58,1:03:17.39,english,,0,0,0,,What's x?
Dialogue: 0,1:03:17.39,1:03:18.41,english,,0,0,0,,How about 1?
Dialogue: 0,1:03:17.39,1:03:18.41,chinese,,0,0,0,,1 怎么样？
Dialogue: 0,1:03:18.41,1:03:19.04,english,,0,0,0,,What's y?
Dialogue: 0,1:03:19.04,1:03:19.84,english,,0,0,0,,How about 2?
Dialogue: 0,1:03:19.04,1:03:19.84,chinese,,0,0,0,,2 吧。
Dialogue: 0,1:03:19.84,1:03:22.23,english,,0,0,0,,X is less than y.
Dialogue: 0,1:03:22.23,1:03:23.38,english,,0,0,0,,Well, let's try it again.
Dialogue: 0,1:03:22.23,1:03:23.38,chinese,,0,0,0,,再试一次。
Dialogue: 0,1:03:23.38,1:03:25.22,english,,0,0,0,,And here, I'll save you some keystrokes too.
Dialogue: 0,1:03:23.38,1:03:25.22,chinese,,0,0,0,,现在教你怎么少敲几个字。
Dialogue: 0,1:03:25.22,1:03:26.36,english,,0,0,0,,Let me clear my screen.
Dialogue: 0,1:03:25.22,1:03:26.36,chinese,,0,0,0,,我先清屏。
Dialogue: 0,1:03:26.36,1:03:35.31,english,,0,0,0,,Instead of constantly typing ./this and ./that, you can also use your keyboard's arrow keys in VS Code to scroll back through time.
Dialogue: 0,1:03:26.36,1:03:35.31,chinese,,0,0,0,,在 VS Code 里面，用不着反复敲 ./ 什么的，用键盘的箭头键可以得到先前用过的命令。
Dialogue: 0,1:03:26.36,1:03:35.31,annotation,,0,0,0,,*注：其实大多数终端都提供，这个功能非常实用。
Dialogue: 0,1:03:35.31,1:03:37.94,english,,0,0,0,,So if I hit Up once, there's the last command I wrote.
Dialogue: 0,1:03:35.31,1:03:37.94,chinese,,0,0,0,,如果我按一次上箭头，就出现了我刚写的最后一条命令。
Dialogue: 0,1:03:37.94,1:03:41.48,english,,0,0,0,,If I do it Up twice, there's the second to last command I wrote.
Dialogue: 0,1:03:37.94,1:03:41.48,chinese,,0,0,0,,如果我按两次上箭头，就会出现我写的倒数第二个命令。
Dialogue: 0,1:03:41.48,1:03:46.55,english,,0,0,0,,So sometimes if you see me doing things fast, it's just because I'm cheating and going through my history like that.
Dialogue: 0,1:03:41.48,1:03:46.55,chinese,,0,0,0,,所以，有时候如果你看到我操作特快，那只是因为我在作弊翻阅历史记录。
Dialogue: 0,1:03:46.55,1:03:51.38,english,,0,0,0,,All right, let me go ahead, though, and rerun ./compare, Enter.
Dialogue: 0,1:03:46.55,1:03:51.38,chinese,,0,0,0,,好吧，我来重新运行 ./compare，回车。
Dialogue: 0,1:03:51.38,1:03:52.67,english,,0,0,0,,Let's reverse it this time--
Dialogue: 0,1:03:51.38,1:03:52.67,chinese,,0,0,0,,这次反过来，
Dialogue: 0,1:03:52.67,1:03:55.10,english,,0,0,0,,2 for x, 1 for y.
Dialogue: 0,1:03:52.67,1:03:55.10,chinese,,0,0,0,,x 是 2，y 是 1。
Dialogue: 0,1:03:55.10,1:03:56.87,english,,0,0,0,,And now, of course, there's no output.
Dialogue: 0,1:03:55.10,1:03:56.87,chinese,,0,0,0,,现在当然还是没有任何输出。
Dialogue: 0,1:03:56.87,1:04:00.17,english,,0,0,0,,All right, well, that's logically to be expected because we didn't have an else here.
Dialogue: 0,1:03:56.87,1:04:00.17,chinese,,0,0,0,,其实说得通，因为我们还没添加 else 语句。
Dialogue: 0,1:04:00.17,1:04:00.98,english,,0,0,0,,So let's add that.
Dialogue: 0,1:04:00.17,1:04:00.98,chinese,,0,0,0,,那就加上这个吧。
Dialogue: 0,1:04:00.98,1:04:12.35,english,,0,0,0,,Else-- now let's open my curly braces, letting VS Code do one of them for me-- printf, quote/unquote, x is not less than y backslash n semicolon.
Dialogue: 0,1:04:00.98,1:04:12.35,chinese,,0,0,0,,【口述代码】
Dialogue: 0,1:04:12.35,1:04:16.43,english,,0,0,0,,Let me go ahead and try this again-- ./compare, Enter.
Dialogue: 0,1:04:12.35,1:04:16.43,chinese,,0,0,0,,再试一次 ./compare，回车。
Dialogue: 0,1:04:16.43,1:04:19.10,english,,0,0,0,,Again, 2 for x, 1 for y.
Dialogue: 0,1:04:16.43,1:04:19.10,chinese,,0,0,0,,同样，x 为 2，y 为 1。
Dialogue: 0,1:04:19.10,1:04:22.99,english,,0,0,0,,And we should see-- huh.
Dialogue: 0,1:04:19.10,1:04:22.99,chinese,,0,0,0,,看一下。
Dialogue: 0,1:04:22.99,1:04:24.83,english,,0,0,0,,What did I do wrong?
Dialogue: 0,1:04:22.99,1:04:24.83,chinese,,0,0,0,,哪里出问题了？
Dialogue: 0,1:04:24.83,1:04:27.05,english,,0,0,0,,Why am I not seeing any else output?
Dialogue: 0,1:04:24.83,1:04:27.05,chinese,,0,0,0,,为什么看不到 else 的输出？
Dialogue: 0,1:04:27.05,1:04:27.55,english,,0,0,0,,Yeah?
Dialogue: 0,1:04:27.55,1:04:29.59,english,,0,0,0,,AUDIENCE: You changed your code when you rebuild.
Dialogue: 0,1:04:27.55,1:04:29.59,chinese,,0,0,0,,观众：重新构建的时候代码修改了。
Dialogue: 0,1:04:29.59,1:04:30.69,english,,0,0,0,,You need to compile it.
Dialogue: 0,1:04:29.59,1:04:30.69,chinese,,0,0,0,,你得重新编译。
Dialogue: 0,1:04:30.69,1:04:31.29,english,,0,0,0,,DAVID J. MALAN: Exactly.
Dialogue: 0,1:04:30.69,1:04:31.29,chinese,,0,0,0,,没错。
Dialogue: 0,1:04:31.29,1:04:34.41,english,,0,0,0,,You got to get into the habit after you change your code of recompiling it.
Dialogue: 0,1:04:31.29,1:04:34.41,chinese,,0,0,0,,你们必须养成修改代码后重新编译的习惯。
Dialogue: 0,1:04:34.41,1:04:39.00,english,,0,0,0,,Or otherwise, the zeros and ones in the server are the old ones until you manually compile.
Dialogue: 0,1:04:34.41,1:04:39.00,chinese,,0,0,0,,要不然的话，服务器（云端环境）中的二进制可执行文件还是旧的。
Dialogue: 0,1:04:39.00,1:04:41.04,english,,0,0,0,,So let's fix this-- make compare, Enter.
Dialogue: 0,1:04:39.00,1:04:41.04,chinese,,0,0,0,,来解决掉这个问题，make compare，回车。
Dialogue: 0,1:04:41.04,1:04:42.03,english,,0,0,0,,No error messages.
Dialogue: 0,1:04:41.04,1:04:42.03,chinese,,0,0,0,,没有错误信息。
Dialogue: 0,1:04:42.03,1:04:45.42,english,,0,0,0,,That's good. ./compare, 2, 1.
Dialogue: 0,1:04:42.03,1:04:45.42,chinese,,0,0,0,,很好。./compare, 2, 1.
Dialogue: 0,1:04:45.42,1:04:47.32,english,,0,0,0,,And now I get back the output.
Dialogue: 0,1:04:45.42,1:04:47.32,chinese,,0,0,0,,这次有输出了。
Dialogue: 0,1:04:47.32,1:04:49.23,english,,0,0,0,,So x is not less than y.
Dialogue: 0,1:04:49.23,1:04:52.39,english,,0,0,0,,How about if I go and add in the third condition?
Dialogue: 0,1:04:49.23,1:04:52.39,chinese,,0,0,0,,如果我再加上第三种情况呢？
Dialogue: 0,1:04:52.39,1:04:55.65,english,,0,0,0,,Well, we can do this either efficiently or inefficiently.
Dialogue: 0,1:04:52.39,1:04:55.65,chinese,,0,0,0,,刚才介绍过，我们能做到这一点，后来又使它更加高效。
Dialogue: 0,1:04:55.65,1:04:57.27,english,,0,0,0,,Let me go ahead and refine this.
Dialogue: 0,1:04:55.65,1:04:57.27,chinese,,0,0,0,,接着完善这个程序。
Dialogue: 0,1:04:57.27,1:05:03.78,english,,0,0,0,,So else if x is greater than y, let's literally say, x is greater than y.
Dialogue: 0,1:04:57.27,1:05:03.78,chinese,,0,0,0,,因此，如果 x 大于 y，我们就从字面上说，"x is greater than y"。
Dialogue: 0,1:05:03.78,1:05:07.95,english,,0,0,0,,And now I could do x else if x equals equals y.
Dialogue: 0,1:05:03.78,1:05:07.95,chinese,,0,0,0,,现在，添加 else if (x == y)。
Dialogue: 0,1:05:07.95,1:05:11.08,english,,0,0,0,,But I think we already claimed that that's unnecessarily inefficient.
Dialogue: 0,1:05:07.95,1:05:11.08,chinese,,0,0,0,,我们已经讨论过了，这样不必要，有点低效。
Dialogue: 0,1:05:11.08,1:05:12.81,english,,0,0,0,,So let's just have our catchall.
Dialogue: 0,1:05:11.08,1:05:12.81,chinese,,0,0,0,,所以，直接一网打尽了。
Dialogue: 0,1:05:12.81,1:05:19.96,english,,0,0,0,,And here I'm going to say, quote/unquote, x is equal to y backslash n, close quote there.
Dialogue: 0,1:05:12.81,1:05:19.96,chinese,,0,0,0,,这里要写，printf("x is equal to y\{}n"); 。
Dialogue: 0,1:05:19.96,1:05:24.07,english,,0,0,0,,So I think now with this code, we've handled all three scenarios.
Dialogue: 0,1:05:19.96,1:05:24.07,chinese,,0,0,0,,现在通过这段代码，我们已经处理了所有三种情况。
Dialogue: 0,1:05:24.07,1:05:28.68,english,,0,0,0,,Let me go ahead and recompile it properly-- make compare, ./compare.
Dialogue: 0,1:05:24.07,1:05:28.68,chinese,,0,0,0,,重新编译，make compare, ./compare.
Dialogue: 0,1:05:28.68,1:05:32.34,english,,0,0,0,,And now 1 and 2-- is less than y.
Dialogue: 0,1:05:28.68,1:05:32.34,chinese,,0,0,0,,输入 1，2，得到 x is less than y。
Dialogue: 0,1:05:32.34,1:05:33.51,english,,0,0,0,,Let me run it again.
Dialogue: 0,1:05:32.34,1:05:33.51,chinese,,0,0,0,,让我再跑一遍。
Dialogue: 0,1:05:33.51,1:05:36.69,english,,0,0,0,,2 and 1-- x is greater than y.
Dialogue: 0,1:05:33.51,1:05:36.69,chinese,,0,0,0,,2 和 1，得到输出 x is greater than y。
Dialogue: 0,1:05:36.69,1:05:41.10,english,,0,0,0,,And lastly, 1 and 1, and x is equal to y.
Dialogue: 0,1:05:36.69,1:05:41.10,chinese,,0,0,0,,最后，1 和 1，得到 x is equal to y。
Dialogue: 0,1:05:41.10,1:05:43.27,english,,0,0,0,,So for the most part, our code is getting longer.
Dialogue: 0,1:05:41.10,1:05:43.27,chinese,,0,0,0,,因此，在大多数情况下，我们的代码越来越长。
Dialogue: 0,1:05:43.27,1:05:47.70,english,,0,0,0,,We're up to 21 lines of code, though some of them are just single characters on the screen.
Dialogue: 0,1:05:43.27,1:05:47.70,chinese,,0,0,0,,我们已经写了 21 行代码，尽管有些行只有一个字符。
Dialogue: 0,1:05:47.70,1:05:49.41,english,,0,0,0,,Almost everything else is the same.
Dialogue: 0,1:05:47.70,1:05:49.41,chinese,,0,0,0,,还有些不变的东西，比如头文件。
Dialogue: 0,1:05:49.41,1:06:01.81,english,,0,0,0,,I'm using the CS50 library's header file for my get_int function, stdio.h for my printf function, and the rest of this is just now new syntax for conditionals as well.
Dialogue: 0,1:05:49.41,1:06:01.81,chinese,,0,0,0,,我使用了 CS50 库头文件里面的 get_int，\N为了用 printf 函数而 include stdio.h，另外的内容就是新学的条件语法了。
Dialogue: 0,1:06:01.81,1:06:08.23,english,,0,0,0,,Questions, then, on this C implementation of just some basic comparisons like this?
Dialogue: 0,1:06:01.81,1:06:08.23,chinese,,0,0,0,,那么，对于这段用 C 语言实现的比较程序，大家有没有疑问？
Dialogue: 0,1:06:08.23,1:06:08.82,english,,0,0,0,,Any questions?
Dialogue: 0,1:06:08.23,1:06:08.82,chinese,,0,0,0,,有问题吗？
Dialogue: 0,1:06:08.82,1:06:09.32,english,,0,0,0,,Yeah?
Dialogue: 0,1:06:09.32,1:06:14.53,english,,0,0,0,,AUDIENCE: Just a syntax question-- do the opening brackets need to be on a separate line?
Dialogue: 0,1:06:09.32,1:06:14.53,chinese,,0,0,0,,只是一个语法问题，开头的括号需要另起一行吗？
Dialogue: 0,1:06:14.53,1:06:15.19,english,,0,0,0,,DAVID J. MALAN: Good question.
Dialogue: 0,1:06:14.53,1:06:15.19,chinese,,0,0,0,,好问题。
Dialogue: 0,1:06:15.19,1:06:17.44,english,,0,0,0,,Do the opening brackets need to be on a separate line?
Dialogue: 0,1:06:15.19,1:06:17.44,chinese,,0,0,0,,开头的括号需要另起一行吗？
Dialogue: 0,1:06:17.44,1:06:18.61,english,,0,0,0,,In CS50, yes.
Dialogue: 0,1:06:17.44,1:06:18.61,chinese,,0,0,0,,在 CS50 里，是的。
Dialogue: 0,1:06:18.61,1:06:25.54,english,,0,0,0,,What you'll see is that as part of the submission process, we compare your code against a style guide, which is the norm in industry.
Dialogue: 0,1:06:18.61,1:06:25.54,chinese,,0,0,0,,在提交的流程里面，我们会把你们的代码跟一种行业规范的风格进行比较。
Dialogue: 0,1:06:25.54,1:06:29.29,english,,0,0,0,,A company would have its own sense of style and how its code should look.
Dialogue: 0,1:06:25.54,1:06:29.29,chinese,,0,0,0,,每家公司都有自己的代码风格约定。
Dialogue: 0,1:06:29.29,1:06:35.08,english,,0,0,0,,And there's generally automated tools within a company that help give feedback on the code or stylize it as such.
Dialogue: 0,1:06:29.29,1:06:35.08,chinese,,0,0,0,,一般来说，公司内部都有自动化工具来帮助反馈，以及进行代码格式化。
Dialogue: 0,1:06:35.08,1:06:38.41,english,,0,0,0,,There are alternative styles than what we use in the class.
Dialogue: 0,1:06:35.08,1:06:38.41,chinese,,0,0,0,,除了我们在课堂上使用的风格，还有别的风格。
Dialogue: 0,1:06:38.41,1:06:48.43,english,,0,0,0,,We deliberately keep and ask that you keep the curly braces on their own line, if only because it rather resembles like the hugging nature of Scratch's blocks
Dialogue: 0,1:06:38.41,1:06:48.43,chinese,,0,0,0,,我们特意保留并要求你们让大括号独占一行，\N这完全是因为它看起来像 Scratch 块，外面的包裹住里面，
Dialogue: 0,1:06:48.43,1:06:51.37,english,,0,0,0,,and just makes clear that they're balanced, opened and closed.
Dialogue: 0,1:06:48.43,1:06:51.37,chinese,,0,0,0,,这样能清楚地表明它们是平衡的，一开启一闭合。
Dialogue: 0,1:06:51.37,1:06:59.42,english,,0,0,0,,However, another common paradigm in some languages and with some programmers is to do something like this on each of them.
Dialogue: 0,1:06:51.37,1:06:59.42,chinese,,0,0,0,,不过，在某些语言和某些程序员那里，另一种常见的范式是在每个程序上都这么操作。
Dialogue: 0,1:06:59.42,1:07:03.67,english,,0,0,0,,So you have the opening curly brace on the same line as here.
Dialogue: 0,1:06:59.42,1:07:03.67,chinese,,0,0,0,,因此，开头的大括号和这条语句在一行里面了。
Dialogue: 0,1:07:03.67,1:07:05.03,english,,0,0,0,,We do not recommend this.
Dialogue: 0,1:07:03.67,1:07:05.03,chinese,,0,0,0,,我们不建议这样做。
Dialogue: 0,1:07:05.03,1:07:07.90,english,,0,0,0,,This is en vogue in the JavaScript world and some others.
Dialogue: 0,1:07:05.03,1:07:07.90,chinese,,0,0,0,,这在 JavaScript 社区和其他语言的社区非常流行。
Dialogue: 0,1:07:07.90,1:07:16.21,english,,0,0,0,,But ultimately in the real world, it's up to each individual programmer and/or the company they're working for, if applicable, to decide on those things.
Dialogue: 0,1:07:07.90,1:07:16.21,chinese,,0,0,0,,现实情况里，决定代码风格的最终是程序员或者他们的公司。
Dialogue: 0,1:07:16.21,1:07:21.14,english,,0,0,0,,All right, so beyond, then, these conditionals, what if we want to do something that's maybe pretty common?
Dialogue: 0,1:07:16.21,1:07:21.14,chinese,,0,0,0,,好吧，那除了这些条件语句，还有一些很常见的事情怎么用代码实现？
Dialogue: 0,1:07:21.14,1:07:28.36,english,,0,0,0,,So almost every piece of software or website nowadays that you use has you agree to some terms and conditions by typing Yes or No or just
Dialogue: 0,1:07:21.14,1:07:28.36,chinese,,0,0,0,,比如说，现在大家使用的几乎所有软件或网站，\N都要求输入 "是" 或 "否"，来决定要不要同意一些条款和条件。
Dialogue: 0,1:07:28.36,1:07:30.28,english,,0,0,0,,Y for Yes and N for No.
Dialogue: 0,1:07:28.36,1:07:30.28,chinese,,0,0,0,,Y 代表是，N 代表否。
Dialogue: 0,1:07:30.28,1:07:33.19,english,,0,0,0,,So how could we implement some kind of agreement system?
Dialogue: 0,1:07:30.28,1:07:33.19,chinese,,0,0,0,,那我们要怎么实现这种同意条款系统呢？
Dialogue: 0,1:07:33.19,1:07:34.07,english,,0,0,0,,Well, let me do this.
Dialogue: 0,1:07:33.19,1:07:34.07,chinese,,0,0,0,,让我来吧。
Dialogue: 0,1:07:34.07,1:07:37.81,english,,0,0,0,,Let me create a new program, a third one called agree.c.
Dialogue: 0,1:07:34.07,1:07:37.81,chinese,,0,0,0,,创建一个新程序，叫做 agree.c。
Dialogue: 0,1:07:37.81,1:07:41.23,english,,0,0,0,,So I'm going to write code agree.c just to give myself a new tab.
Dialogue: 0,1:07:37.81,1:07:41.23,chinese,,0,0,0,,因此，我要在 agree.c 里写代码，在 VS Code 里添了一个新标签。
Dialogue: 0,1:07:41.23,1:07:44.23,english,,0,0,0,,I'm going to start, as always now, include cs50.h.
Dialogue: 0,1:07:41.23,1:07:44.23,chinese,,0,0,0,,一如既往，从 include cs50.h 开始。
Dialogue: 0,1:07:44.23,1:07:46.48,english,,0,0,0,,Let's include stdio.h.
Dialogue: 0,1:07:46.48,1:07:53.20,english,,0,0,0,,And then let me do my int main(void)-- which, again, for today's purposes, we'll take at face value is just copy/paste.
Dialogue: 0,1:07:46.48,1:07:53.20,chinese,,0,0,0,,然后走流程 int main(void)，回头再解释。
Dialogue: 0,1:07:53.20,1:08:00.52,english,,0,0,0,,And if I just want to get Y or N, for instance, instead of Yes or No, we can just use a simpler variable here.
Dialogue: 0,1:07:53.20,1:08:00.52,chinese,,0,0,0,,如果我只想得到 'Y' 或 'N'，而不是 "Yes" 或 "No"，我们可以在这里使用一个更简单的变量。
Dialogue: 0,1:08:00.52,1:08:03.80,english,,0,0,0,,How about just a char, a character, a single character?
Dialogue: 0,1:08:00.52,1:08:03.80,chinese,,0,0,0,,用一个 char（单字符）怎么样？
Dialogue: 0,1:08:03.80,1:08:09.76,english,,0,0,0,,So I can use get_char to ask the user, for instance, do you agree, question mark.
Dialogue: 0,1:08:03.80,1:08:09.76,chinese,,0,0,0,,那么，我们能用 get_char 来询问用户，比如说，"Do you agree?"。
Dialogue: 0,1:08:09.76,1:08:12.88,english,,0,0,0,,But as before, I need to store this somewhere.
Dialogue: 0,1:08:09.76,1:08:12.88,chinese,,0,0,0,,跟前面一样，我需要把它存放在一个地方。
Dialogue: 0,1:08:12.88,1:08:15.13,english,,0,0,0,,So I don't want a string because that's a single char.
Dialogue: 0,1:08:12.88,1:08:15.13,chinese,,0,0,0,,所以我不想用 string（字符串），因为现在只是个 char（单字符）。
Dialogue: 0,1:08:15.13,1:08:16.18,english,,0,0,0,,I don't want an int.
Dialogue: 0,1:08:15.13,1:08:16.18,chinese,,0,0,0,,我不想用 int。
Dialogue: 0,1:08:16.18,1:08:17.38,english,,0,0,0,,I just want a char.
Dialogue: 0,1:08:16.18,1:08:17.38,chinese,,0,0,0,,我只想要一个 char。
Dialogue: 0,1:08:17.38,1:08:21.50,english,,0,0,0,,And it's literally C-H-A-R. And then I can call this thing anything I want.
Dialogue: 0,1:08:17.38,1:08:21.50,chinese,,0,0,0,,字面上是 C-H-A-R，然后想叫它什么都行。
Dialogue: 0,1:08:21.50,1:08:27.04,english,,0,0,0,,It's conventional if you have a simple program with just a single variable and it's of type char, call it c.
Dialogue: 0,1:08:21.50,1:08:27.04,chinese,,0,0,0,,在简单的程序里面，对于一个 char 变量，变量名取作 c，这是约定俗成的做法。
Dialogue: 0,1:08:27.04,1:08:28.56,english,,0,0,0,,If it's an int, call it i.
Dialogue: 0,1:08:27.04,1:08:28.56,chinese,,0,0,0,,如果是 int，则叫做 i。
Dialogue: 0,1:08:28.56,1:08:29.83,english,,0,0,0,,If it's a string, call it s.
Dialogue: 0,1:08:28.56,1:08:29.83,chinese,,0,0,0,,如果是字符串，则称为 s。
Dialogue: 0,1:08:29.83,1:08:32.59,english,,0,0,0,,For now I'm just going to keep it simple and call it c.
Dialogue: 0,1:08:29.83,1:08:32.59,chinese,,0,0,0,,现在，我只想简单地称之为 c。
Dialogue: 0,1:08:32.59,1:08:34.37,english,,0,0,0,,And now I'm going to ask a question.
Dialogue: 0,1:08:32.59,1:08:34.37,chinese,,0,0,0,,现在我要问一个问题。
Dialogue: 0,1:08:34.37,1:08:50.38,english,,0,0,0,,So if c equals equals, how about, quote/unquote, y, then let me go ahead and print out Agreed backslash n, as though they agreed to my terms and conditions.
Dialogue: 0,1:08:34.37,1:08:50.38,chinese,,0,0,0,,因此，如果 c 跟单引号包裹的 y 相等，那么，\N就输出一个 "Agreed\{}n"，就代表他们同意了我的条款和条件。
Dialogue: 0,1:08:50.38,1:08:51.88,english,,0,0,0,,Otherwise, let's see.
Dialogue: 0,1:08:50.38,1:08:51.88,chinese,,0,0,0,,否则... 我看眼教案。
Dialogue: 0,1:08:51.88,1:09:03.60,english,,0,0,0,,Else if the character equals equals, quote/unquote, n, then let me go ahead and print out, say, Not agreed, as though they didn't, quote/unquote.
Dialogue: 0,1:08:51.88,1:09:03.60,chinese,,0,0,0,,【口述代码】
Dialogue: 0,1:09:03.60,1:09:07.06,english,,0,0,0,,And let's leave it at that, I think, here initially.
Dialogue: 0,1:09:03.60,1:09:07.06,chinese,,0,0,0,,差不多就这样吧。
Dialogue: 0,1:09:07.06,1:09:11.83,english,,0,0,0,,Now, you'll notice one curiosity, one inconsistency perhaps.
Dialogue: 0,1:09:07.06,1:09:11.83,chinese,,0,0,0,,现在，你会发现一个奇怪的地方，跟以前有点不一样。
Dialogue: 0,1:09:11.83,1:09:15.76,english,,0,0,0,,Does anyone want to call it out, though it's somewhat subtle?
Dialogue: 0,1:09:11.83,1:09:15.76,chinese,,0,0,0,,只是微小的区别，有谁发现了吗？
Dialogue: 0,1:09:15.76,1:09:19.72,english,,0,0,0,,I've done something ever so slightly differently without explaining it yet.
Dialogue: 0,1:09:15.76,1:09:19.72,chinese,,0,0,0,,我做的事情跟以前稍微不太一样，但还没解释清楚。
Dialogue: 0,1:09:19.72,1:09:20.38,english,,0,0,0,,Do you see it?
Dialogue: 0,1:09:19.72,1:09:20.38,chinese,,0,0,0,,你知道吗？
Dialogue: 0,1:09:20.38,1:09:22.62,english,,0,0,0,,AUDIENCE: The single quotation mark.
Dialogue: 0,1:09:20.38,1:09:22.62,chinese,,0,0,0,,观众：单引号。
Dialogue: 0,1:09:22.62,1:09:23.50,english,,0,0,0,,DAVID J. MALAN: Yeah.
Dialogue: 0,1:09:22.62,1:09:23.50,chinese,,0,0,0,,是的。
Dialogue: 0,1:09:23.50,1:09:30.59,english,,0,0,0,,So I've suddenly used single quotation marks for my single characters and double quotes for my actual strings of text.
Dialogue: 0,1:09:23.50,1:09:30.59,chinese,,0,0,0,,我突然换成单引号来表示单个字符，而用双引号来表示文本字符串。
Dialogue: 0,1:09:30.59,1:09:41.38,english,,0,0,0,,This is a necessity in C. When you're dealing with strings, like strings of text, like someone's name, a sentence, a paragraph, anything really more than one character, you typically use double quotes.
Dialogue: 0,1:09:30.59,1:09:41.38,chinese,,0,0,0,,C 语言里面必须这样。处理字符串比如姓名、句子、段落什么的，\N只要是超过一个字符的内容，都需要使用双引号。
Dialogue: 0,1:09:41.38,1:09:42.39,english,,0,0,0,,And indeed, you must.
Dialogue: 0,1:09:41.38,1:09:42.39,chinese,,0,0,0,,事实上，你必须这样做。
Dialogue: 0,1:09:42.39,1:09:49.81,english,,0,0,0,,When dealing with deliberately single characters, like I am here for y or n, you must use single quotes instead.
Dialogue: 0,1:09:42.39,1:09:49.81,chinese,,0,0,0,,而处理特意设置的单字符，比如我在这里输入的 x 或者 y，就必须使用单引号。
Dialogue: 0,1:09:49.81,1:09:50.31,english,,0,0,0,,Why?
Dialogue: 0,1:09:50.31,1:09:54.55,english,,0,0,0,,Because that makes sure that the computer knows that it's indeed a char and not a string.
Dialogue: 0,1:09:50.31,1:09:54.55,chinese,,0,0,0,,因为这样可以确保计算机知道，这确实是单个字符，而不是字符串。
Dialogue: 0,1:09:54.55,1:09:55.93,english,,0,0,0,,So double quotes are for strings.
Dialogue: 0,1:09:54.55,1:09:55.93,chinese,,0,0,0,,因此，双引号适用于字符串。
Dialogue: 0,1:09:55.93,1:09:57.52,english,,0,0,0,,Single quotes are for chars.
Dialogue: 0,1:09:55.93,1:09:57.52,chinese,,0,0,0,,单引号适用于字符。
Dialogue: 0,1:09:57.52,1:10:00.55,english,,0,0,0,,So with that said, let me go ahead and zoom out.
Dialogue: 0,1:09:57.52,1:10:00.55,chinese,,0,0,0,,说到这里，让我缩小一点界面。
Dialogue: 0,1:10:00.55,1:10:04.78,english,,0,0,0,,Let me go ahead in my terminal window run make agree, Enter.
Dialogue: 0,1:10:00.55,1:10:04.78,chinese,,0,0,0,,在终端窗口运行 make agree，回车。
Dialogue: 0,1:10:04.78,1:10:08.77,english,,0,0,0,,Seems to work OK so let me go ahead and do ./agree.
Dialogue: 0,1:10:04.78,1:10:08.77,chinese,,0,0,0,,看起来运行正常，所以继续 ./agree。
Dialogue: 0,1:10:08.77,1:10:12.25,english,,0,0,0,,Let me go ahead now and type in Y.
Dialogue: 0,1:10:08.77,1:10:12.25,chinese,,0,0,0,,单走一个 Y。
Dialogue: 0,1:10:12.25,1:10:13.09,english,,0,0,0,,Here we go.
Dialogue: 0,1:10:12.25,1:10:13.09,chinese,,0,0,0,,试一下。
Dialogue: 0,1:10:13.09,1:10:14.98,english,,0,0,0,,Enter.
Dialogue: 0,1:10:14.98,1:10:16.54,english,,0,0,0,,Huh.
Dialogue: 0,1:10:16.54,1:10:17.47,english,,0,0,0,,Let me try that again.
Dialogue: 0,1:10:16.54,1:10:17.47,chinese,,0,0,0,,再试一次。
Dialogue: 0,1:10:17.47,1:10:18.58,english,,0,0,0,,Rerun ./agree.
Dialogue: 0,1:10:17.47,1:10:18.58,chinese,,0,0,0,,再次运行 ./agree。
Dialogue: 0,1:10:18.58,1:10:20.17,english,,0,0,0,,How about no?
Dialogue: 0,1:10:18.58,1:10:20.17,chinese,,0,0,0,,啥也没有怎么回事？
Dialogue: 0,1:10:20.17,1:10:22.48,english,,0,0,0,,Enter.
Dialogue: 0,1:10:22.48,1:10:25.72,english,,0,0,0,,Why is it not behaving as I would have expected?
Dialogue: 0,1:10:22.48,1:10:25.72,chinese,,0,0,0,,为什么它的表现不符合我们预期？
Dialogue: 0,1:10:25.72,1:10:28.48,english,,0,0,0,,AUDIENCE: Because you entered the capital Y and capital N.
Dialogue: 0,1:10:25.72,1:10:28.48,chinese,,0,0,0,,观众：因为你输入了大写的 Y 和大写的 N。
Dialogue: 0,1:10:28.48,1:10:32.23,english,,0,0,0,,DAVID J. MALAN: Yeah, I kind of cheated there, and I hit the Caps Lock key just as I started typing in input.
Dialogue: 0,1:10:28.48,1:10:32.23,chinese,,0,0,0,,是的，我刚才骗你们了，输入的时候按了大写锁定键。
Dialogue: 0,1:10:32.23,1:10:32.73,english,,0,0,0,,Why?
Dialogue: 0,1:10:32.73,1:10:37.54,english,,0,0,0,,Because I deliberately wanted to type in uppercase instead of lowercase, which is kind of reasonable.
Dialogue: 0,1:10:32.73,1:10:37.54,chinese,,0,0,0,,因为我就是想用大写字母而不是小写字母打字，我不要你觉得。
Dialogue: 0,1:10:37.54,1:10:42.77,english,,0,0,0,,It's a little obnoxious if you force the user to toggle their caps lock key on or off when you just need a simple answer.
Dialogue: 0,1:10:37.54,1:10:42.77,chinese,,0,0,0,,如果你只是需要一个简单的答案，却强迫用户打开或关闭大写锁定键，那就有点讨嫌了。
Dialogue: 0,1:10:42.77,1:10:45.31,english,,0,0,0,,That's not the best User Experience, or UX.
Dialogue: 0,1:10:42.77,1:10:45.31,chinese,,0,0,0,,这不是最好的用户体验（UX）。
Dialogue: 0,1:10:45.31,1:10:47.20,english,,0,0,0,,But it would work if I cooperated.
Dialogue: 0,1:10:45.31,1:10:47.20,chinese,,0,0,0,,但如果我让一步的话，它就没问题。
Dialogue: 0,1:10:47.20,1:10:52.03,english,,0,0,0,,Let me run this again without caps lock-- y lowercase for yes.
Dialogue: 0,1:10:47.20,1:10:52.03,chinese,,0,0,0,,不按大写锁定键跑一次，小写的 y。
Dialogue: 0,1:10:52.03,1:10:55.21,english,,0,0,0,,Ah, that worked. n lowercase for no.
Dialogue: 0,1:10:52.03,1:10:55.21,chinese,,0,0,0,,啊，成功了，用小写的 n。
Dialogue: 0,1:10:55.21,1:10:55.99,english,,0,0,0,,That worked.
Dialogue: 0,1:10:55.21,1:10:55.99,chinese,,0,0,0,,这招还真管用。
Dialogue: 0,1:10:55.99,1:10:57.91,english,,0,0,0,,But how could I get it to work for both?
Dialogue: 0,1:10:55.99,1:10:57.91,chinese,,0,0,0,,但我怎样才能让大小写都能用呢？
Dialogue: 0,1:10:57.91,1:10:59.18,english,,0,0,0,,Well, how about this?
Dialogue: 0,1:10:57.91,1:10:59.18,chinese,,0,0,0,,这样可以吗？
Dialogue: 0,1:10:59.18,1:11:01.40,english,,0,0,0,,Let me go ahead and just add two possibilities.
Dialogue: 0,1:10:59.18,1:11:01.40,chinese,,0,0,0,,让我来补充两种可能性。
Dialogue: 0,1:11:01.40,1:11:10.72,english,,0,0,0,,So else if c equals equals quote/unquote capital Y, then also do printf agreed backslash n.
Dialogue: 0,1:11:01.40,1:11:10.72,chinese,,0,0,0,,【口述代码】
Dialogue: 0,1:11:10.72,1:11:20.98,english,,0,0,0,,And down here, else if c equals equals single quote capital N, then go ahead and print out, again, Not agreed.
Dialogue: 0,1:11:10.72,1:11:20.98,chinese,,0,0,0,,【口述代码】
Dialogue: 0,1:11:20.98,1:11:23.77,english,,0,0,0,,This, I will claim now, is correct.
Dialogue: 0,1:11:20.98,1:11:23.77,chinese,,0,0,0,,我得说这样很对。
Dialogue: 0,1:11:23.77,1:11:26.98,english,,0,0,0,,And I'll do make agree real fast, ./agree.
Dialogue: 0,1:11:23.77,1:11:26.98,chinese,,0,0,0,,快点走个流程 make agree，./agree。
Dialogue: 0,1:11:26.98,1:11:28.21,english,,0,0,0,,And I'll use capital.
Dialogue: 0,1:11:26.98,1:11:28.21,chinese,,0,0,0,,现在用大写字母。
Dialogue: 0,1:11:28.21,1:11:29.17,english,,0,0,0,,It now works.
Dialogue: 0,1:11:28.21,1:11:29.17,chinese,,0,0,0,,现在这样好使。
Dialogue: 0,1:11:29.17,1:11:30.61,english,,0,0,0,,I'll use capital.
Dialogue: 0,1:11:29.17,1:11:30.61,chinese,,0,0,0,,用大写字母。
Dialogue: 0,1:11:30.61,1:11:32.20,english,,0,0,0,,It again works.
Dialogue: 0,1:11:30.61,1:11:32.20,chinese,,0,0,0,,还是没问题。
Dialogue: 0,1:11:32.20,1:11:34.51,english,,0,0,0,,But this is perhaps not the best design.
Dialogue: 0,1:11:32.20,1:11:34.51,chinese,,0,0,0,,但这也许不是最好的设计。
Dialogue: 0,1:11:34.51,1:11:39.22,english,,0,0,0,,Let me hide the terminal window and pull this up on the screen all at once.
Dialogue: 0,1:11:34.51,1:11:39.22,chinese,,0,0,0,,把终端窗口隐藏掉，在屏幕上把代码亮出来。
Dialogue: 0,1:11:39.22,1:11:43.19,english,,0,0,0,,Why might this arguably not be the best design, even though it's correct?
Dialogue: 0,1:11:39.22,1:11:43.19,chinese,,0,0,0,,为什么说这不是最好的设计，尽管它是正确的？
Dialogue: 0,1:11:46.25,1:11:51.17,english,,0,0,0,,There's another term of art we can toss here, like [SNIFFS] something smells kind of funky about this code.
Dialogue: 0,1:11:46.25,1:11:51.17,chinese,,0,0,0,,我们可以用一个艺术家的表达，这个代码闻起来有点怪怪的。
Dialogue: 0,1:11:51.17,1:11:52.45,english,,0,0,0,,This is an actual term of art.
Dialogue: 0,1:11:51.17,1:11:52.45,chinese,,0,0,0,,这实际上是个艺术术语。
Dialogue: 0,1:11:52.45,1:11:54.10,english,,0,0,0,,There's code smell here.
Dialogue: 0,1:11:52.45,1:11:54.10,chinese,,0,0,0,,这里有 "代码异味"。
Dialogue: 0,1:11:54.10,1:11:55.93,english,,0,0,0,,Something smells a little off.
Dialogue: 0,1:11:54.10,1:11:55.93,chinese,,0,0,0,,有点不对味儿。
Dialogue: 0,1:11:55.93,1:11:56.62,english,,0,0,0,,Why?
Dialogue: 0,1:11:56.62,1:11:57.89,english,,0,0,0,,What do you think?
Dialogue: 0,1:11:56.62,1:11:57.89,chinese,,0,0,0,,你怎么看？
Dialogue: 0,1:11:57.89,1:12:01.84,english,,0,0,0,,AUDIENCE: [INAUDIBLE]
Dialogue: 0,1:12:06.89,1:12:07.77,english,,0,0,0,,DAVID J. MALAN: Yeah.
Dialogue: 0,1:12:06.89,1:12:07.77,chinese,,0,0,0,,是的。
Dialogue: 0,1:12:07.77,1:12:09.37,english,,0,0,0,,There's the same output again and again.
Dialogue: 0,1:12:07.77,1:12:09.37,chinese,,0,0,0,,同样的输出一再出现。
Dialogue: 0,1:12:09.37,1:12:10.53,english,,0,0,0,,I mean, I manually typed it.
Dialogue: 0,1:12:09.37,1:12:10.53,chinese,,0,0,0,,我说，我虽然是手敲的几遍。
Dialogue: 0,1:12:10.53,1:12:17.08,english,,0,0,0,,But honestly, I might as well have just copied and pasted most of my original code to do it again and again for the two capital letters.
Dialogue: 0,1:12:10.53,1:12:17.08,chinese,,0,0,0,,还不如直接复制粘贴呢，我原来的大部分代码，又为了这两个大写字母写了一遍。
Dialogue: 0,1:12:17.08,1:12:26.87,english,,0,0,0,,So if line 10 and 14 are the same AND line 18 and 22 are the same, AND then the rest of these if and else ifs are almost the same,
Dialogue: 0,1:12:17.08,1:12:26.87,chinese,,0,0,0,,因此，只有 10 行和 14 行，18 行和 22 行不太一样，剩下差不多一样的，
Dialogue: 0,1:12:26.87,1:12:28.50,english,,0,0,0,,[SNIFFS] there's some code smell there.
Dialogue: 0,1:12:26.87,1:12:28.50,chinese,,0,0,0,,这代码不太对味。
Dialogue: 0,1:12:28.50,1:12:29.37,english,,0,0,0,,It's not well designed.
Dialogue: 0,1:12:28.50,1:12:29.37,chinese,,0,0,0,,设计很不合理。
Dialogue: 0,1:12:29.37,1:12:29.82,english,,0,0,0,,Why?
Dialogue: 0,1:12:29.82,1:12:32.77,english,,0,0,0,,Because if I want to change things now, just like last week in Scratch,
Dialogue: 0,1:12:29.82,1:12:32.77,chinese,,0,0,0,,因为如果我现在想改点代码，就像上周用 Scratch，
Dialogue: 0,1:12:32.77,1:12:37.12,english,,0,0,0,,I might have to change my code in multiple places or copy/paste is never a good thing.
Dialogue: 0,1:12:32.77,1:12:37.12,chinese,,0,0,0,,我可能需要修改多个地方的代码，复制/粘贴永远不是一件好事。
Dialogue: 0,1:12:37.12,1:12:42.76,english,,0,0,0,,And god forbid I want to add support for Yes and No as full words, it's really going to get long.
Dialogue: 0,1:12:37.12,1:12:42.76,chinese,,0,0,0,,而且，如果我还想添加对完整单词 "Yes" 和 "No" 的支持，代码就真的会变很长。
Dialogue: 0,1:12:42.76,1:12:44.17,english,,0,0,0,,So how can we solve this?
Dialogue: 0,1:12:42.76,1:12:44.17,chinese,,0,0,0,,这个问题怎么解决？
Dialogue: 0,1:12:44.17,1:12:47.16,english,,0,0,0,,Well, it turns out, we can combine some of these thoughts.
Dialogue: 0,1:12:44.17,1:12:47.16,chinese,,0,0,0,,事实证明，我们可以把这些想法结合起来。
Dialogue: 0,1:12:47.16,1:12:49.47,english,,0,0,0,,So let me try to improve the Yeses first.
Dialogue: 0,1:12:47.16,1:12:49.47,chinese,,0,0,0,,我先来改进确认的部分。
Dialogue: 0,1:12:49.47,1:12:54.32,english,,0,0,0,,It turns out, if I delete that clause, I can actually or things together.
Dialogue: 0,1:12:49.47,1:12:54.32,chinese,,0,0,0,,其实，我们可以删除这些条件块，把这些判断语句放一起。
Dialogue: 0,1:12:54.32,1:13:02.35,english,,0,0,0,,In Scratch, there's a couple of puzzle pieces, if you didn't discover them, that literally have the word or and the word and on them, which allow you to combine Boolean expressions.
Dialogue: 0,1:12:54.32,1:13:02.35,chinese,,0,0,0,,在 Scratch 中，有几块拼图可能你没怎么注意，\N上面有 or 和 and 两个单词，可以让你组合布尔表达式。
Dialogue: 0,1:13:02.35,1:13:06.60,english,,0,0,0,,So that either this or this is true, or this and this is true.
Dialogue: 0,1:13:02.35,1:13:06.60,chinese,,0,0,0,,就是说，要么这个是真的，要么这个是真的，要么这两个都是真的，才满足条件。
Dialogue: 0,1:13:06.60,1:13:09.27,english,,0,0,0,,In C, you can't just say the word or.
Dialogue: 0,1:13:06.60,1:13:09.27,chinese,,0,0,0,,你输入 or 的话 C 语言不认。
Dialogue: 0,1:13:09.27,1:13:12.85,english,,0,0,0,,You instead use two vertical bars.
Dialogue: 0,1:13:09.27,1:13:12.85,chinese,,0,0,0,,作为代替你需要用两个 || 。
Dialogue: 0,1:13:12.85,1:13:16.26,english,,0,0,0,,And vertical bars together mean or, logically.
Dialogue: 0,1:13:12.85,1:13:16.26,chinese,,0,0,0,,在逻辑上，|| 表示或。
Dialogue: 0,1:13:16.26,1:13:21.78,english,,0,0,0,,And so I can say, c equals equals quote/unquote capital Y, Agreed.
Dialogue: 0,1:13:16.26,1:13:21.78,chinese,,0,0,0,,因此，我可以说，【口述代码】，就打印同意。
Dialogue: 0,1:13:21.78,1:13:24.27,english,,0,0,0,,And now I can get rid of this code down here.
Dialogue: 0,1:13:21.78,1:13:24.27,chinese,,0,0,0,,现在我可以删除下面的代码了。
Dialogue: 0,1:13:24.27,1:13:32.34,english,,0,0,0,,And let me go ahead and say, vertical bar twice c equals quote/unquote N in all caps.
Dialogue: 0,1:13:24.27,1:13:32.34,chinese,,0,0,0,,让我继续写，【口述代码】。
Dialogue: 0,1:13:32.34,1:13:36.87,english,,0,0,0,,And now my program's roughly a third smaller, which is good.
Dialogue: 0,1:13:32.34,1:13:36.87,chinese,,0,0,0,,现在，我的代码大概少了三分之一，真不错。
Dialogue: 0,1:13:36.87,1:13:38.14,english,,0,0,0,,There's less redundancy.
Dialogue: 0,1:13:36.87,1:13:38.14,chinese,,0,0,0,,减少冗余。
Dialogue: 0,1:13:38.14,1:13:49.86,english,,0,0,0,,And if I reopen my terminal window, rerun make of agree, ./agree, now I can type little y or big Y and same thing for lowercase and uppercase
Dialogue: 0,1:13:38.14,1:13:49.86,chinese,,0,0,0,,重新打开终端窗口，运行 make agree、./agree，\N现在输入大写小写的 y 或 n 都行了。
Dialogue: 0,1:13:49.86,1:13:56.40,english,,0,0,0,,N. Any questions then on this syntax, whereby now you can combine thoughts and just tighten things up?
Dialogue: 0,1:13:49.86,1:13:56.40,chinese,,0,0,0,,关于这个语法，现在你们可以把布尔表达式结合起来，\N把事情做得更严密一些，还有什么问题吗？
Dialogue: 0,1:13:56.40,1:13:57.99,english,,0,0,0,,And there'll be other such tricks too.
Dialogue: 0,1:13:56.40,1:13:57.99,chinese,,0,0,0,,还会有其他技巧。
Dialogue: 0,1:13:57.99,1:13:58.94,english,,0,0,0,,Yeah?
Dialogue: 0,1:13:58.94,1:14:01.61,english,,0,0,0,,AUDIENCE: Is there not a function to just ignore the case?
Dialogue: 0,1:13:58.94,1:14:01.61,chinese,,0,0,0,,观众：难道就没有忽略大小写的函数吗？
Dialogue: 0,1:14:01.61,1:14:03.24,english,,0,0,0,,DAVID J. MALAN: A really good question.
Dialogue: 0,1:14:01.61,1:14:03.24,chinese,,0,0,0,,这真是一个好问题。
Dialogue: 0,1:14:03.24,1:14:06.03,english,,0,0,0,,Is there not a function to just ignore the case?
Dialogue: 0,1:14:03.24,1:14:06.03,chinese,,0,0,0,,难道就没有忽略大小写的函数吗？
Dialogue: 0,1:14:06.03,1:14:07.89,english,,0,0,0,,Short answer, there is.
Dialogue: 0,1:14:06.03,1:14:07.89,chinese,,0,0,0,,简而言之，有的。
Dialogue: 0,1:14:07.89,1:14:10.95,english,,0,0,0,,And we'll see how to do that in, actually, just about a week's time.
Dialogue: 0,1:14:07.89,1:14:10.95,chinese,,0,0,0,,差不多下一周，我们就知道怎么用了。
Dialogue: 0,1:14:10.95,1:14:19.89,english,,0,0,0,,And in other languages, there's even more ways to just canonicalize the user's input, throwing away any space characters they might have accidentally hit, forcing everything to lowercase.
Dialogue: 0,1:14:10.95,1:14:19.89,chinese,,0,0,0,,而在其他语言中，有更多的办法规范化用户输入，\N比如说丢弃他们可能不小心输入的空格字符，强制所有内容小写。
Dialogue: 0,1:14:19.89,1:14:23.37,english,,0,0,0,,In C, It's going to be a little more work on our part to do that.
Dialogue: 0,1:14:19.89,1:14:23.37,chinese,,0,0,0,,在 C 语言中，要做到这些，我们得多费些工夫。
Dialogue: 0,1:14:23.37,1:14:26.08,english,,0,0,0,,But in fact, as early as next week, we'll see how we can do that.
Dialogue: 0,1:14:23.37,1:14:26.08,chinese,,0,0,0,,其实最早下一周，我们就会知道怎么实现这个功能。
Dialogue: 0,1:14:26.08,1:14:29.49,english,,0,0,0,,But for now we're comparing indeed just these literal values.
Dialogue: 0,1:14:26.08,1:14:29.49,chinese,,0,0,0,,但现在，我们确实只需要比较这些字面数值。
Dialogue: 0,1:14:29.49,1:14:30.57,english,,0,0,0,,Other questions?
Dialogue: 0,1:14:29.49,1:14:30.57,chinese,,0,0,0,,还有其他问题吗？
Dialogue: 0,1:14:30.57,1:14:33.87,english,,0,0,0,,AUDIENCE: So we're assuming the user's putting in what they're suggesting.
Dialogue: 0,1:14:30.57,1:14:33.87,chinese,,0,0,0,,所以我们假设用户输入的是我们建议的内容。
Dialogue: 0,1:14:33.87,1:14:37.61,english,,0,0,0,,How do you handle if they were to put in a number?
Dialogue: 0,1:14:33.87,1:14:37.61,chinese,,0,0,0,,如果他们输入数字什么的，怎么处理？
Dialogue: 0,1:14:37.61,1:14:39.16,english,,0,0,0,,DAVID J. MALAN: Really good question.
Dialogue: 0,1:14:37.61,1:14:39.16,chinese,,0,0,0,,问得好。
Dialogue: 0,1:14:39.16,1:14:45.36,english,,0,0,0,,So we are assuming, with this program and all of my last ones, that the human's cooperating and when I ask for their name, they typed in David
Dialogue: 0,1:14:39.16,1:14:45.36,chinese,,0,0,0,,因此我们现在假设，之前所有程序的用户都很配合工作，当我询问名字时，他们都输入合法的名字。
Dialogue: 0,1:14:45.36,1:14:50.04,english,,0,0,0,,and not 123, or, in this case, they typed in a single character and not a full word.
Dialogue: 0,1:14:45.36,1:14:50.04,chinese,,0,0,0,,而不是 123，或者，不是一个完整单词只是一个单字符。
Dialogue: 0,1:14:50.04,1:14:53.52,english,,0,0,0,,So this is one of the features often of using a library.
Dialogue: 0,1:14:50.04,1:14:53.52,chinese,,0,0,0,,因此，这也是使用库的常见功能之一。
Dialogue: 0,1:14:53.52,1:15:01.33,english,,0,0,0,,So for instance, if I run agree again, and I say something like sure, Enter, it rejects it altogether.
Dialogue: 0,1:14:53.52,1:15:01.33,chinese,,0,0,0,,来举个例子，如果我再次运行 agree 程序，\N输入一些 sure 之类的话，它就会完全拒绝，并要求重新输入。
Dialogue: 0,1:15:01.33,1:15:01.83,english,,0,0,0,,Why?
Dialogue: 0,1:15:01.83,1:15:05.85,english,,0,0,0,,Because s, u, r, e is a string of characters.
Dialogue: 0,1:15:01.83,1:15:05.85,chinese,,0,0,0,,因为 s u r e 是一个字符串。
Dialogue: 0,1:15:05.85,1:15:07.32,english,,0,0,0,,It's not a single character.
Dialogue: 0,1:15:05.85,1:15:07.32,chinese,,0,0,0,,而不是一个单独的字符。
Dialogue: 0,1:15:07.32,1:15:11.38,english,,0,0,0,,Now, I could just say something like x, which is neither y nor n, of course.
Dialogue: 0,1:15:07.32,1:15:11.38,chinese,,0,0,0,,现在，我可以直接输入 x，当然，它既不是 y 也不是 n。
Dialogue: 0,1:15:11.38,1:15:14.19,english,,0,0,0,,But it tolerates that because it's a single character.
Dialogue: 0,1:15:11.38,1:15:14.19,chinese,,0,0,0,,但程序能容忍这种情况，因为它是一个单独的字符。
Dialogue: 0,1:15:14.19,1:15:19.21,english,,0,0,0,,But built in to CS50's library is some built-in rejections of inputs that's not expected.
Dialogue: 0,1:15:14.19,1:15:19.21,chinese,,0,0,0,,其实吧，CS50 库里面内置了功能，可以拒绝非预期的输入。
Dialogue: 0,1:15:19.21,1:15:26.94,english,,0,0,0,,So if you use get_int and the user types in not the number 1 or 2 but cat, C-A-T, it will just prompt them again, prompt them again.
Dialogue: 0,1:15:19.21,1:15:26.94,chinese,,0,0,0,,因此，如果使用 get_int，而用户输入的不是数字 1 或 2，\N而是 cat、C-A-T之类的，它就会一次又一次提示用户重新输入。
Dialogue: 0,1:15:26.94,1:15:34.06,english,,0,0,0,,And this is where, too, if you were to do this manually in C, you end up writing this much code just to check for all of these errors.
Dialogue: 0,1:15:26.94,1:15:34.06,chinese,,0,0,0,,如果用 C 语言手写这个检查，最终也要编写不少代码才能覆盖各种错误输入。
Dialogue: 0,1:15:34.06,1:15:38.19,english,,0,0,0,,That's why we use these training wheels for a few weeks just to make the code more robust.
Dialogue: 0,1:15:34.06,1:15:38.19,chinese,,0,0,0,,这就是为什么我们要在几周内先用这些辅助函数，以使代码更加健壮。
Dialogue: 0,1:15:38.19,1:15:40.50,english,,0,0,0,,But in a few weeks' time, we'll take the liberty away.
Dialogue: 0,1:15:38.19,1:15:40.50,chinese,,0,0,0,,但几周后，我们会停止使用 CS50 库。
Dialogue: 0,1:15:40.50,1:15:44.97,english,,0,0,0,,And you'll see and understand how it's indeed doing all that.
Dialogue: 0,1:15:40.50,1:15:44.97,chinese,,0,0,0,,你会看到并理解它背后的逻辑。
Dialogue: 0,1:15:44.97,1:15:46.75,english,,0,0,0,,All right, so how about this.
Dialogue: 0,1:15:44.97,1:15:46.75,chinese,,0,0,0,,好吧，就这样。
Dialogue: 0,1:15:46.75,1:15:54.56,english,,0,0,0,,Let's now transition to something a little more Scratch-like, literally, by creating how about another program here called meow-- so meow.c.
Dialogue: 0,1:15:46.75,1:15:54.56,chinese,,0,0,0,,现在，让我们切换到更像 Scratch 的程序，创建一个名为 meow 的程序，即 meow.c。
Dialogue: 0,1:15:54.56,1:15:56.65,english,,0,0,0,,We won't have any audio capabilities for this one.
Dialogue: 0,1:15:54.56,1:15:56.65,chinese,,0,0,0,,我们不打算增加任何音频功能。
Dialogue: 0,1:15:56.65,1:15:57.75,english,,0,0,0,,We'll just rely on print.
Dialogue: 0,1:15:56.65,1:15:57.75,chinese,,0,0,0,,只使用 print 打印在终端。
Dialogue: 0,1:15:57.75,1:16:03.00,english,,0,0,0,,And suppose that I wanted to write a program and see that just simulates a cat meowing.
Dialogue: 0,1:15:57.75,1:16:03.00,chinese,,0,0,0,,假设我想写一个程序，来模拟喵喵叫。
Dialogue: 0,1:16:03.00,1:16:04.96,english,,0,0,0,,So I don't need any user input just yet.
Dialogue: 0,1:16:03.00,1:16:04.96,chinese,,0,0,0,,还不会涉及到用户的输入。
Dialogue: 0,1:16:04.96,1:16:06.96,english,,0,0,0,,So I'm just going to use stdio.h.
Dialogue: 0,1:16:04.96,1:16:06.96,chinese,,0,0,0,,所以我打算使用 stdio.h。
Dialogue: 0,1:16:06.96,1:16:09.94,english,,0,0,0,,I'm going to do my usual int main(void) up here.
Dialogue: 0,1:16:06.96,1:16:09.94,chinese,,0,0,0,,在这里，先走流程 int main(void)。
Dialogue: 0,1:16:09.94,1:16:13.71,english,,0,0,0,,And then I'm just going to go ahead and do printf meow backslash n.
Dialogue: 0,1:16:09.94,1:16:13.71,chinese,,0,0,0,,然后，我写下 printf("meow\{}n"); 。
Dialogue: 0,1:16:13.71,1:16:16.65,english,,0,0,0,,And let's have this cat meow three times, like last week.
Dialogue: 0,1:16:13.71,1:16:16.65,chinese,,0,0,0,,让这只猫喵喵叫三声，跟上周一样。
Dialogue: 0,1:16:16.65,1:16:18.87,english,,0,0,0,,So I'm going to do meow, meow, meow.
Dialogue: 0,1:16:16.65,1:16:18.87,chinese,,0,0,0,,复制三次打印喵这行。
Dialogue: 0,1:16:18.87,1:16:22.35,english,,0,0,0,,Notice as an aside whenever you highlight the lines, you'll see little dots appear.
Dialogue: 0,1:16:18.87,1:16:22.35,chinese,,0,0,0,,顺便提一下，每当你把光标聚焦到一行上，就会看到一些小圆点出现。
Dialogue: 0,1:16:22.35,1:16:26.46,english,,0,0,0,,This is just a visual cue to you to let you figure out how many spaces you've indented.
Dialogue: 0,1:16:22.35,1:16:26.46,chinese,,0,0,0,,这只是一个视觉上的提示，让你知道自己缩进了多少空格。
Dialogue: 0,1:16:26.46,1:16:30.13,english,,0,0,0,,VS Code, like a lot of editors, will automatically indent your code for you.
Dialogue: 0,1:16:26.46,1:16:30.13,chinese,,0,0,0,,VS Code 和许多编辑器一样，会自动为你缩进代码。
Dialogue: 0,1:16:30.13,1:16:32.55,english,,0,0,0,,I've not been hitting the space bar four times every time.
Dialogue: 0,1:16:30.13,1:16:32.55,chinese,,0,0,0,,我没有每次都按四下空格键。
Dialogue: 0,1:16:32.55,1:16:34.02,english,,0,0,0,,I've not even been hitting Tab.
Dialogue: 0,1:16:32.55,1:16:34.02,chinese,,0,0,0,,我也没有按 Tab（默认按 Tab 添加一层缩进，这里是 4 个空格）。
Dialogue: 0,1:16:34.02,1:16:41.93,english,,0,0,0,,However, in C, the convention is indeed to indent lines where appropriate by four spaces-- so not three, not five.
Dialogue: 0,1:16:34.02,1:16:41.93,chinese,,0,0,0,,不过，C 语言的惯用法确实是在需要的地方缩进四个空格，所以不是三个，也不是五个。
Dialogue: 0,1:16:41.93,1:16:45.85,english,,0,0,0,,And these dots help you see things so that they just line up as a matter of good style.
Dialogue: 0,1:16:41.93,1:16:45.85,chinese,,0,0,0,,这些圆点可以帮助你看清缩进，对齐成一排，这是一种良好的代码风格。
Dialogue: 0,1:16:45.85,1:16:49.60,english,,0,0,0,,All right, so this program, I'm just going to stipulate right now, is indeed going to work.
Dialogue: 0,1:16:45.85,1:16:49.60,chinese,,0,0,0,,好吧，我得说，这个办法确实可行。
Dialogue: 0,1:16:49.60,1:16:52.56,english,,0,0,0,,Make meow-- which is kind of cute-- and now meow.
Dialogue: 0,1:16:49.60,1:16:52.56,chinese,,0,0,0,,make meow，./meow，有点可爱。
Dialogue: 0,1:16:52.56,1:16:54.00,english,,0,0,0,,There, three times.
Dialogue: 0,1:16:52.56,1:16:54.00,chinese,,0,0,0,,这儿输出了三次。
Dialogue: 0,1:16:54.00,1:16:54.54,english,,0,0,0,,Correct.
Dialogue: 0,1:16:54.54,1:16:55.50,english,,0,0,0,,It's meowing three times.
Dialogue: 0,1:16:54.54,1:16:55.50,chinese,,0,0,0,,它喵喵叫了三声。
Dialogue: 0,1:16:55.50,1:16:57.06,english,,0,0,0,,But of course, this is not well designed.
Dialogue: 0,1:16:55.50,1:16:57.06,chinese,,0,0,0,,当然，这没设计得多好。
Dialogue: 0,1:16:57.06,1:16:58.93,english,,0,0,0,,It wasn't well designed in Scratch last week.
Dialogue: 0,1:16:57.06,1:16:58.93,chinese,,0,0,0,,上周的 Scratch 设计得也不好。
Dialogue: 0,1:16:58.93,1:17:00.48,english,,0,0,0,,Why?
Dialogue: 0,1:17:00.48,1:17:03.13,english,,0,0,0,,What should I be doing differently?
Dialogue: 0,1:17:00.48,1:17:03.13,chinese,,0,0,0,,我应该怎么做？
Dialogue: 0,1:17:03.13,1:17:03.63,english,,0,0,0,,Yeah?
Dialogue: 0,1:17:03.63,1:17:04.12,english,,0,0,0,,AUDIENCE: A loop?
Dialogue: 0,1:17:03.63,1:17:04.12,chinese,,0,0,0,,观众：循环？
Dialogue: 0,1:17:04.12,1:17:05.41,english,,0,0,0,,AUDIENCE: This could be a loop.
Dialogue: 0,1:17:04.12,1:17:05.41,chinese,,0,0,0,,观众：这可以用个循环。
Dialogue: 0,1:17:05.41,1:17:07.14,english,,0,0,0,,DAVID J. MALAN: Yeah.
Dialogue: 0,1:17:05.41,1:17:07.14,chinese,,0,0,0,,是的。
Dialogue: 0,1:17:07.14,1:17:09.31,english,,0,0,0,,It's a perfect opportunity for a loop.
Dialogue: 0,1:17:07.14,1:17:09.31,chinese,,0,0,0,,这是一个完美的循环机会。
Dialogue: 0,1:17:09.31,1:17:09.81,english,,0,0,0,,Why?
Dialogue: 0,1:17:09.81,1:17:18.39,english,,0,0,0,,Because if you wanted to change maybe the capitalization of these words, or you wanted to change the sound to like woof for a dog or something, you'd have to change it one, two, three places.
Dialogue: 0,1:17:09.81,1:17:18.39,chinese,,0,0,0,,因为如果你想改变这些单词的大小写，\N或者你想改成狗叫汪汪什么的，你就得改一个、两个、三个地方。
Dialogue: 0,1:17:18.39,1:17:20.16,english,,0,0,0,,And that's just kind of stupid, right?
Dialogue: 0,1:17:18.39,1:17:20.16,chinese,,0,0,0,,这也太傻了吧？
Dialogue: 0,1:17:20.16,1:17:23.02,english,,0,0,0,,In code, you should ideally change things in one place.
Dialogue: 0,1:17:20.16,1:17:23.02,chinese,,0,0,0,,在代码中，我们最好只改一次。
Dialogue: 0,1:17:23.02,1:17:24.88,english,,0,0,0,,So how might I do that?
Dialogue: 0,1:17:23.02,1:17:24.88,chinese,,0,0,0,,那我该怎么做呢？
Dialogue: 0,1:17:24.88,1:17:27.12,english,,0,0,0,,Well, we could introduce a loop, yes.
Dialogue: 0,1:17:24.88,1:17:27.12,chinese,,0,0,0,,是的，我们可以引入一个循环。
Dialogue: 0,1:17:27.12,1:17:32.71,english,,0,0,0,,But we're going to need another building block as well that we had in Scratch, namely those things called variables.
Dialogue: 0,1:17:27.12,1:17:32.71,chinese,,0,0,0,,但我们还需要另一个在 Scratch 中使用过的概念，那就是变量。
Dialogue: 0,1:17:32.71,1:17:38.52,english,,0,0,0,,So recall that a variable, like an algebra-- x, y, z, whatever-- can store a value for you.
Dialogue: 0,1:17:32.71,1:17:38.52,chinese,,0,0,0,,请记住，一个变量，就像一个代数，x、y、z 什么的，可以为你存储一个值。
Dialogue: 0,1:17:38.52,1:17:42.63,english,,0,0,0,,And a variable in Scratch might have looked like this.
Dialogue: 0,1:17:38.52,1:17:42.63,chinese,,0,0,0,,Scratch 中的变量长这个样子。
Dialogue: 0,1:17:42.63,1:17:46.89,english,,0,0,0,,You use this orange puzzle piece to set a variable of any name, not just x, y, or z.
Dialogue: 0,1:17:42.63,1:17:46.89,chinese,,0,0,0,,使用这块橙色拼图可以设置任何名字的变量的值，不仅仅 x y z 什么的。
Dialogue: 0,1:17:46.89,1:17:51.84,english,,0,0,0,,But you could call it something more descriptive, like counter, and you can set it equal to some value.
Dialogue: 0,1:17:46.89,1:17:51.84,chinese,,0,0,0,,但你也可以给它起个直观点的名字，比如 counter，就可以把它设置成某个值了。
Dialogue: 0,1:17:51.84,1:17:57.57,english,,0,0,0,,In C, the way to do this is similar to spirit to some of the syntax we've seen thus far.
Dialogue: 0,1:17:51.84,1:17:57.57,chinese,,0,0,0,,在 C 语言中复现这条语句，语法其实和前面讲过的有些类似。
Dialogue: 0,1:17:57.57,1:18:01.74,english,,0,0,0,,You start by saying the name of the variable you want, a single equal sign, and then the value.
Dialogue: 0,1:17:57.57,1:18:01.74,chinese,,0,0,0,,首先要输入变量的名称，一个等号，然后输入值。
Dialogue: 0,1:18:01.74,1:18:05.47,english,,0,0,0,,You want to initialize it too, copying therefore from right to left.
Dialogue: 0,1:18:01.74,1:18:05.47,chinese,,0,0,0,,因为这是对变量进行初始化，因此是从右向左复制值。
Dialogue: 0,1:18:05.47,1:18:05.97,english,,0,0,0,,Why?
Dialogue: 0,1:18:05.97,1:18:09.57,english,,0,0,0,,Because the equal sign denotes, again, assignment from right to left.
Dialogue: 0,1:18:05.97,1:18:09.57,chinese,,0,0,0,,因为等号就是表示从右到左的赋值。
Dialogue: 0,1:18:09.57,1:18:10.74,english,,0,0,0,,This isn't enough though.
Dialogue: 0,1:18:09.57,1:18:10.74,chinese,,0,0,0,,这还不够。
Dialogue: 0,1:18:10.74,1:18:12.28,english,,0,0,0,,You might have the intuition already.
Dialogue: 0,1:18:10.74,1:18:12.28,chinese,,0,0,0,,你可能有点直觉了。
Dialogue: 0,1:18:12.28,1:18:16.17,english,,0,0,0,,What's missing probably from this line of code just to create a variable?
Dialogue: 0,1:18:12.28,1:18:16.17,chinese,,0,0,0,,为了创建变量，这行代码大概还缺什么？
Dialogue: 0,1:18:16.17,1:18:16.76,english,,0,0,0,,AUDIENCE: Int.
Dialogue: 0,1:18:16.76,1:18:20.61,english,,0,0,0,,DAVID J. MALAN: So we need int to make sure the computer knows that this is indeed an int.
Dialogue: 0,1:18:16.76,1:18:20.61,chinese,,0,0,0,,所以我们需要 int 来确保计算机知道这确实是一个整数。
Dialogue: 0,1:18:20.61,1:18:23.80,english,,0,0,0,,And then lastly, semicolon as well.
Dialogue: 0,1:18:20.61,1:18:23.80,chinese,,0,0,0,,最后还有分号。
Dialogue: 0,1:18:23.80,1:18:25.26,english,,0,0,0,,And that now completes the thought.
Dialogue: 0,1:18:23.80,1:18:25.26,chinese,,0,0,0,,这个想法就完成了。
Dialogue: 0,1:18:25.26,1:18:28.66,english,,0,0,0,,So a little more annoying than Scratch, but we're starting to see patterns here.
Dialogue: 0,1:18:25.26,1:18:28.66,chinese,,0,0,0,,所以比 Scratch 还麻烦，但我们开始发掘内在规律了。
Dialogue: 0,1:18:28.66,1:18:30.81,english,,0,0,0,,So not every piece of syntax will be new.
Dialogue: 0,1:18:28.66,1:18:30.81,chinese,,0,0,0,,所以说不是每一种语法都是新的。
Dialogue: 0,1:18:30.81,1:18:33.48,english,,0,0,0,,All right, if you want to increment the counter by one,
Dialogue: 0,1:18:30.81,1:18:33.48,chinese,,0,0,0,,好吧，如果你想一个一个地增加 counter。
Dialogue: 0,1:18:33.48,1:18:37.48,english,,0,0,0,,Scratch uses the verb change, and they mean add the value to counter.
Dialogue: 0,1:18:33.48,1:18:37.48,chinese,,0,0,0,,Scratch 使用动词 change，意思是将数值添加到 counter 里。
Dialogue: 0,1:18:37.48,1:18:43.93,english,,0,0,0,,So if I want to increment an existing variable called counter, this syntax is a little more interesting.
Dialogue: 0,1:18:37.48,1:18:43.93,chinese,,0,0,0,,如果我想递增一个名为 counter 的现有变量，这种语法有点意思。
Dialogue: 0,1:18:43.93,1:18:48.69,english,,0,0,0,,It turns out the code looks like this, which almost seems like a paradox.
Dialogue: 0,1:18:43.93,1:18:48.69,chinese,,0,0,0,,用 C 语言的话，代码是这样的，这看起来太悖论了吧。
Dialogue: 0,1:18:48.69,1:18:51.99,english,,0,0,0,,How can counter equal counter plus 1?
Dialogue: 0,1:18:48.69,1:18:51.99,chinese,,0,0,0,,counter 怎么能等于 counter + 1 ？
Dialogue: 0,1:18:51.99,1:18:53.16,english,,0,0,0,,That's not how math works.
Dialogue: 0,1:18:51.99,1:18:53.16,chinese,,0,0,0,,这里和数学的概念不同。
Dialogue: 0,1:18:53.16,1:18:56.86,english,,0,0,0,,But again, a single equal sign is assignment from right to left.
Dialogue: 0,1:18:53.16,1:18:56.86,chinese,,0,0,0,,一个等号是从右往左赋值的。
Dialogue: 0,1:18:56.86,1:19:03.93,english,,0,0,0,,So this is saying, take whatever the value of counter is, add 1 to it, and copy that value from right to left into counter itself.
Dialogue: 0,1:18:56.86,1:19:03.93,chinese,,0,0,0,,这就是说，不管 counter 值是多少，都给它加上 1，\N然后把这个值从右向左复制回 counter 自己。
Dialogue: 0,1:19:03.93,1:19:13.33,english,,0,0,0,,You still need the semicolon, but I claim you do not need to mention the keyword int when updating an existing variable.
Dialogue: 0,1:19:03.93,1:19:13.33,chinese,,0,0,0,,还是要一个分号的，我要说的是，\N在更新现有变量时，就不需要关键字 int 重复声明了。
Dialogue: 0,1:19:13.33,1:19:23.37,english,,0,0,0,,So only when you create a variable in C do you use the word string, or the word int, or any of the others we'll eventually see-- only when creating it or initializing it for the first time.
Dialogue: 0,1:19:13.33,1:19:23.37,chinese,,0,0,0,,因此，只有在 C 语言中创建变量时，才会声明是 string、int 和别的什么类型，\N只有在首次创建或初始化变量时才会使用。
Dialogue: 0,1:19:23.37,1:19:25.78,english,,0,0,0,,Thereafter if you want to change it, it just exists.
Dialogue: 0,1:19:23.37,1:19:25.78,chinese,,0,0,0,,此后，如果你想改变它，它其实已经存在了。
Dialogue: 0,1:19:25.78,1:19:27.06,english,,0,0,0,,It's the word you gave it.
Dialogue: 0,1:19:25.78,1:19:27.06,chinese,,0,0,0,,这是你给取的名字。
Dialogue: 0,1:19:27.06,1:19:29.95,english,,0,0,0,,The computer is smart enough to at least remember what type it is.
Dialogue: 0,1:19:27.06,1:19:29.95,chinese,,0,0,0,,计算机很聪明的，至少能记住它的类型。
Dialogue: 0,1:19:29.95,1:19:32.10,english,,0,0,0,,So this line is now complete
Dialogue: 0,1:19:29.95,1:19:32.10,chinese,,0,0,0,,至此，这行代码完成。
Dialogue: 0,1:19:32.10,1:19:37.74,english,,0,0,0,,Turns out, in code, as we'll see, it's pretty common to want to add things together, increment things by one.
Dialogue: 0,1:19:32.10,1:19:37.74,chinese,,0,0,0,,事实证明，在代码里面，想要把一些东西加起来、把一些东西递增，这是很常见的。
Dialogue: 0,1:19:37.74,1:19:40.71,english,,0,0,0,,So there's actually different syntax for the same idea.
Dialogue: 0,1:19:37.74,1:19:40.71,chinese,,0,0,0,,因此，其实可以用不同的语法实现这个念头。
Dialogue: 0,1:19:40.71,1:19:43.29,english,,0,0,0,,The term of art here is syntactic sugar.
Dialogue: 0,1:19:40.71,1:19:43.29,chinese,,0,0,0,,这里的专业术语是 "语法糖"。
Dialogue: 0,1:19:43.29,1:19:49.90,english,,0,0,0,,There's often in code many ways to do the same thing, even though, at the end of the day, they do exactly the same functionality.
Dialogue: 0,1:19:43.29,1:19:49.90,chinese,,0,0,0,,在代码中，做同一件事往往有很多种方法，尽管它们最终实现的功能完全相同。
Dialogue: 0,1:19:49.90,1:19:57.76,english,,0,0,0,,So for instance, if, after a few days of CS50, you find this a little tedious to keep typing in some program, you can simplify it to just this.
Dialogue: 0,1:19:49.90,1:19:57.76,chinese,,0,0,0,,还是举个例子，如果在学习 CS50 几天后，\N你觉得每次这么写递增有点麻烦，可以简化成这个样子。
Dialogue: 0,1:19:57.76,1:19:59.34,english,,0,0,0,,This is the syntactic sugar.
Dialogue: 0,1:19:57.76,1:19:59.34,chinese,,0,0,0,,这就是语法糖。
Dialogue: 0,1:19:59.34,1:20:06.48,english,,0,0,0,,You can use plus equals and only mention the variable name once on the left, and it just knows that means the previous thing.
Dialogue: 0,1:19:59.34,1:20:06.48,chinese,,0,0,0,,你可以使用 +=，左边提到一次变量名就行了，它就知道右边该是这个变量 + 1 的值。
Dialogue: 0,1:20:06.48,1:20:10.42,english,,0,0,0,,It's just slightly more succinct.
Dialogue: 0,1:20:06.48,1:20:10.42,chinese,,0,0,0,,稍微简洁了一些。
Dialogue: 0,1:20:10.42,1:20:12.90,english,,0,0,0,,This, too, is such a common thing to add 1 to a value.
Dialogue: 0,1:20:10.42,1:20:12.90,chinese,,0,0,0,,在数值上加 1 也是很常见的事情。
Dialogue: 0,1:20:12.90,1:20:13.80,english,,0,0,0,,And it doesn't have to be 1.
Dialogue: 0,1:20:12.90,1:20:13.80,chinese,,0,0,0,,而且不一定是加 1。
Dialogue: 0,1:20:13.80,1:20:14.80,english,,0,0,0,,But in this case, it is.
Dialogue: 0,1:20:13.80,1:20:14.80,chinese,,0,0,0,,这里确实是这样。
Dialogue: 0,1:20:14.80,1:20:20.55,english,,0,0,0,,But if it is indeed 1, you can further tighten the code up to just do this, counter++.
Dialogue: 0,1:20:14.80,1:20:20.55,chinese,,0,0,0,,但如果确实是加 1，则可以进一步简化，直接写成这样，counter++。
Dialogue: 0,1:20:20.55,1:20:26.47,english,,0,0,0,,So any time in C you see ++, it means literally adding 1 to that particular variable.
Dialogue: 0,1:20:20.55,1:20:26.47,chinese,,0,0,0,,因此，在 C 语言中任何时候看到 ++，都意味让该变量自增 1。
Dialogue: 0,1:20:26.47,1:20:28.68,english,,0,0,0,,There's other ways to do this in the other direction.
Dialogue: 0,1:20:26.47,1:20:28.68,chinese,,0,0,0,,还有一个语法糖用来让变量自减 1。
Dialogue: 0,1:20:28.68,1:20:38.49,english,,0,0,0,,If you want to subtract 1 from a variable, you can use any of the previous syntax using a minus sign instead of plus, or you can more succinctly do counter--.
Dialogue: 0,1:20:28.68,1:20:38.49,chinese,,0,0,0,,如果要从变量中减去 1，可以使用前面的任何一种语法，减号代替加号就行，或者更简洁地用 --。
Dialogue: 0,1:20:38.49,1:20:42.52,english,,0,0,0,,This is the way a typical C programmer would do this.
Dialogue: 0,1:20:38.49,1:20:42.52,chinese,,0,0,0,,C 语言程序员都这么用。
Dialogue: 0,1:20:42.52,1:20:47.50,english,,0,0,0,,All right, so if we have now variables, let's go and solve the meowing with loop.
Dialogue: 0,1:20:42.52,1:20:47.50,chinese,,0,0,0,,好吧，现在有变量了，我们就用循环来实现喵喵叫。
Dialogue: 0,1:20:47.50,1:20:49.32,english,,0,0,0,,So in Scratch, we saw loops like this.
Dialogue: 0,1:20:47.50,1:20:49.32,chinese,,0,0,0,,在 Scratch 中，我们看到了像这样的循环。
Dialogue: 0,1:20:49.32,1:20:52.68,english,,0,0,0,,This, of course, had the cat meow three times.
Dialogue: 0,1:20:49.32,1:20:52.68,chinese,,0,0,0,,这当然是喵喵叫三次。
Dialogue: 0,1:20:52.68,1:20:54.48,english,,0,0,0,,How do we do this in C?
Dialogue: 0,1:20:52.68,1:20:54.48,chinese,,0,0,0,,那么在 C 中我们该怎么做呢？
Dialogue: 0,1:20:54.48,1:21:03.52,english,,0,0,0,,Now, this is where things get a little more involved code-wise. but if you understand each and every line, we'll follow logically what's going on.
Dialogue: 0,1:20:54.48,1:21:03.52,chinese,,0,0,0,,现在，从代码上来看，事情会变得稍微复杂一些，\N但如果你能理解每一行的内容，我们就能顺理成章地知道发生了什么。
Dialogue: 0,1:21:03.52,1:21:12.33,english,,0,0,0,,So here, I claim, is one way to implement a loop that iterates three times in C. And this is kind of ridiculous, right?
Dialogue: 0,1:21:03.52,1:21:12.33,chinese,,0,0,0,,我宣布这就是一种在 C 中实现循环执行三次的方法。而这看起来有些可笑，对吧？
Dialogue: 0,1:21:12.33,1:21:18.99,english,,0,0,0,,We went from two super simple puzzle pieces like this to, my god, it's 1, 2, 3, 4, 5, 6 lines of code, all of which are pretty involved.
Dialogue: 0,1:21:12.33,1:21:18.99,chinese,,0,0,0,,我们从这样两块超级简单的拼图，变成了 6 行代码，其中每一行都相当复杂。
Dialogue: 0,1:21:18.99,1:21:20.74,english,,0,0,0,,So that escalated quickly.
Dialogue: 0,1:21:18.99,1:21:20.74,chinese,,0,0,0,,升级速度飞快。
Dialogue: 0,1:21:20.74,1:21:21.96,english,,0,0,0,,But what's each line doing?
Dialogue: 0,1:21:20.74,1:21:21.96,chinese,,0,0,0,,但是每行代码在做什么呢？
Dialogue: 0,1:21:21.96,1:21:24.12,english,,0,0,0,,And we'll see other ways to do this more simply.
Dialogue: 0,1:21:21.96,1:21:24.12,chinese,,0,0,0,,我们还会看到其他更简单的方法来实现这个。
Dialogue: 0,1:21:24.12,1:21:28.71,english,,0,0,0,,So we're initializing a variable called counter to 3, just like before.
Dialogue: 0,1:21:24.12,1:21:28.71,chinese,,0,0,0,,我们初始化一个名为 counter 的变量为 3，就像之前一样。
Dialogue: 0,1:21:28.71,1:21:29.37,english,,0,0,0,,Why?
Dialogue: 0,1:21:29.37,1:21:32.80,english,,0,0,0,,Well, what does it mean to loop or to repeat something three times?
Dialogue: 0,1:21:29.37,1:21:32.80,chinese,,0,0,0,,那么重复某事三次是什么意思呢？
Dialogue: 0,1:21:32.80,1:21:41.08,english,,0,0,0,,Well, it's like doing something three times, and then do it, and then count down, and then do it, and then count down, and then do it, until you're all out of counts.
Dialogue: 0,1:21:32.80,1:21:41.08,chinese,,0,0,0,,就像重复三次做某事，然后再做，然后倒计时，再做，然后倒计时，再做，直到你的计数用完。
Dialogue: 0,1:21:41.08,1:21:44.91,english,,0,0,0,,So this is declaring a variable called counter, setting it equal to 3.
Dialogue: 0,1:21:41.08,1:21:44.91,chinese,,0,0,0,,所以这是在声明一个名为 counter 的变量，并将它设置为 3。
Dialogue: 0,1:21:44.91,1:21:52.44,english,,0,0,0,,Then I'm inducing a loop in C, which is similar in spirit to repeat 3, but you have to do more of the math yourself.
Dialogue: 0,1:21:44.91,1:21:52.44,chinese,,0,0,0,,然后我在 C 中创建了一个循环，与在 Scratch 中的 "重复 3 次" 类似，但你需要自己多做一些数学运算。
Dialogue: 0,1:21:52.44,1:21:59.20,english,,0,0,0,,So I'm asking the question in parentheses, while count is greater than 0, what do I want to do?
Dialogue: 0,1:21:52.44,1:21:59.20,chinese,,0,0,0,,所以我在括号中提出了一个问题：当 counter 大于 0 时，我想做什么呢？
Dialogue: 0,1:21:59.20,1:22:04.08,english,,0,0,0,,Well, per the indentation inside the curly braces, I want to meow one time.
Dialogue: 0,1:21:59.20,1:22:04.08,chinese,,0,0,0,,根据花括号内的缩进，喵喵叫一次。
Dialogue: 0,1:22:04.08,1:22:06.99,english,,0,0,0,,And then, to be clear, what's this last line of code doing?
Dialogue: 0,1:22:04.08,1:22:06.99,chinese,,0,0,0,,那么，要明确最后一行代码在做什么呢？
Dialogue: 0,1:22:06.99,1:22:12.12,english,,0,0,0,,If counter starts off at three, this makes it 2 by subtracting 1 from it.
Dialogue: 0,1:22:06.99,1:22:12.12,chinese,,0,0,0,,如果 counter 一开始是 3，从中减去 1，使它变成 2。
Dialogue: 0,1:22:12.12,1:22:13.32,english,,0,0,0,,Then what happens?
Dialogue: 0,1:22:12.12,1:22:13.32,chinese,,0,0,0,,然后会发生什么？
Dialogue: 0,1:22:13.32,1:22:21.01,english,,0,0,0,,By nature of the loop, just like in Scratch, it knows to go back and forth. even though there's a nice, pretty arrow in Scratch, and there isn't here,
Dialogue: 0,1:22:13.32,1:22:21.01,chinese,,0,0,0,,尽管 Scratch 中有一个漂亮的箭头，但这里没有，
Dialogue: 0,1:22:21.01,1:22:28.87,english,,0,0,0,,C knows to do this again, and again, and again, constantly asking this question and then updating this value at the end.
Dialogue: 0,1:22:21.01,1:22:28.87,chinese,,0,0,0,,C 知道要这样一遍又一遍地执行，\N不断地问这个问题（为 false 时结束循环），还有在结尾更新 counter 值。
Dialogue: 0,1:22:28.87,1:22:33.69,english,,0,0,0,,So if I highlight just a few of these steps, the variable starts off at 3.
Dialogue: 0,1:22:28.87,1:22:33.69,chinese,,0,0,0,,我只突出显示其中的一些步骤，变量一开始是 3。
Dialogue: 0,1:22:33.69,1:22:35.10,english,,0,0,0,,And actually, let me simplify too.
Dialogue: 0,1:22:33.69,1:22:35.10,chinese,,0,0,0,,实际上，我也可以进行简化。
Dialogue: 0,1:22:35.10,1:22:43.48,english,,0,0,0,,I claimed earlier that when using single variables, people very often just call it i for int, or c for char, or s for string unless you have multiple variables.
Dialogue: 0,1:22:35.10,1:22:43.48,chinese,,0,0,0,,我之前说过，使用单变量的时候，除非有多个变量，\N否则人们通常用 i 表示 int，用 c 表示 char，用 s 表示 string。
Dialogue: 0,1:22:35.10,1:22:43.48,annotation,,0,0,0,,注：这里是说变量的命名规范，局部变量命名可以随意一些，程序员的惯用法。
Dialogue: 0,1:22:43.48,1:22:44.73,english,,0,0,0,,So let me tighten the code up.
Dialogue: 0,1:22:43.48,1:22:44.73,chinese,,0,0,0,,所以，让我把代码写得更紧凑些。
Dialogue: 0,1:22:44.73,1:22:47.22,english,,0,0,0,,And this already makes it look a little more tolerable.
Dialogue: 0,1:22:44.73,1:22:47.22,chinese,,0,0,0,,这么看着更加好接受了。
Dialogue: 0,1:22:47.22,1:22:50.32,english,,0,0,0,,Let me actually tighten it up further, add one more step.
Dialogue: 0,1:22:47.22,1:22:50.32,chinese,,0,0,0,,还可以再简化一步。
Dialogue: 0,1:22:50.32,1:22:54.65,english,,0,0,0,,So now this is about as tight, as succinct as you can make this code at the moment.
Dialogue: 0,1:22:50.32,1:22:54.65,chinese,,0,0,0,,现在，这段代码已经尽可能紧凑简洁了。
Dialogue: 0,1:22:54.65,1:22:56.32,english,,0,0,0,,So what's actually going to happen here?
Dialogue: 0,1:22:54.65,1:22:56.32,chinese,,0,0,0,,这里整个流程是怎样的？
Dialogue: 0,1:22:56.32,1:22:59.55,english,,0,0,0,,Well, the first line of code executes, and that initializes i to 3.
Dialogue: 0,1:22:56.32,1:22:59.55,chinese,,0,0,0,,第一行代码执行后，i 初始化为 3。
Dialogue: 0,1:22:59.55,1:23:00.90,english,,0,0,0,,Then we check the condition.
Dialogue: 0,1:22:59.55,1:23:00.90,chinese,,0,0,0,,然后我们检查条件。
Dialogue: 0,1:23:00.90,1:23:03.84,english,,0,0,0,,While i is greater than 0, is i greater than 0?
Dialogue: 0,1:23:00.90,1:23:03.84,chinese,,0,0,0,,while (i > 0)，i 是否大于 0？
Dialogue: 0,1:23:03.84,1:23:05.58,english,,0,0,0,,Well, per my three fingers, obviously.
Dialogue: 0,1:23:03.84,1:23:05.58,chinese,,0,0,0,,显然现在是 3。
Dialogue: 0,1:23:05.58,1:23:07.59,english,,0,0,0,,So we print out meow on the screen.
Dialogue: 0,1:23:05.58,1:23:07.59,chinese,,0,0,0,,所以我们打印出 meow。
Dialogue: 0,1:23:07.59,1:23:13.11,english,,0,0,0,,Then we subtract 1 from i, at which point now we have 2 as the value of i.
Dialogue: 0,1:23:07.59,1:23:13.11,chinese,,0,0,0,,然后 i 减一，此时 i 为 2。
Dialogue: 0,1:23:13.11,1:23:15.33,english,,0,0,0,,Then the code goes back to the condition.
Dialogue: 0,1:23:13.11,1:23:15.33,chinese,,0,0,0,,然后代码返回到条件判断。
Dialogue: 0,1:23:15.33,1:23:17.58,english,,0,0,0,,And notice, the condition there is in parentheses.
Dialogue: 0,1:23:15.33,1:23:17.58,chinese,,0,0,0,,注意，括号里面的就是条件。
Dialogue: 0,1:23:17.58,1:23:19.42,english,,0,0,0,,That's another Boolean expression.
Dialogue: 0,1:23:17.58,1:23:19.42,chinese,,0,0,0,,这是个布尔表达式。
Dialogue: 0,1:23:19.42,1:23:23.34,english,,0,0,0,,So loops can use Boolean expressions, just like conditionals use
Dialogue: 0,1:23:19.42,1:23:23.34,chinese,,0,0,0,,因此，循环一样可以用布尔表达式，就像
Dialogue: 0,1:23:23.34,1:23:24.99,english,,0,0,0,,Boolean expressions to make decisions.
Dialogue: 0,1:23:23.34,1:23:24.99,chinese,,0,0,0,,条件判断语句使用布尔表达式进行决策。
Dialogue: 0,1:23:24.99,1:23:31.33,english,,0,0,0,,The loop, though, is deciding not whether to do this thing or that but whether to do the same thing again, and again, and again.
Dialogue: 0,1:23:24.99,1:23:31.33,chinese,,0,0,0,,不过，这个循环条件不是用来在两条路径里做选择，\N而是决定是否要重复再重复做同一件事。
Dialogue: 0,1:23:31.33,1:23:40.45,english,,0,0,0,,And as it ticks through the code one line after the other, it's ultimately going to get down to 1, and then 0, and then stop.
Dialogue: 0,1:23:31.33,1:23:40.45,chinese,,0,0,0,,它这样一行一行运行下去，最终 i 会到 1，然后到 0，不满足条件就退出循环了。
Dialogue: 0,1:23:40.45,1:23:51.57,english,,0,0,0,,So put another way-- came with some props here-- so suppose this ball here is your variable, and you initialize it to 3 with three stress balls, you can do something three times, right?
Dialogue: 0,1:23:40.45,1:23:51.57,chinese,,0,0,0,,换个角度看，我拿点道具球，假设这个球是你的变量，\N三个压力球代表初始化为 3，你就可以做三次，没问题吧？
Dialogue: 0,1:23:51.57,1:23:56.65,english,,0,0,0,,If I want to give out three stress balls-- here's your chance for free stress balls without having to answer any questions.
Dialogue: 0,1:23:51.57,1:23:56.65,chinese,,0,0,0,,现在我要送出三个球—— 这是你免费获得压力球的机会，用不着回答问题。
Dialogue: 0,1:23:56.65,1:23:57.40,english,,0,0,0,,OK, there we go.
Dialogue: 0,1:23:56.65,1:23:57.40,chinese,,0,0,0,,好了，我们开整。
Dialogue: 0,1:23:57.40,1:24:00.18,english,,0,0,0,,So here we go, subtracting 1 from my variable.
Dialogue: 0,1:23:57.40,1:24:00.18,chinese,,0,0,0,,第一次，从变量中减去 1。
Dialogue: 0,1:24:00.18,1:24:01.83,english,,0,0,0,,I'm left with two.
Dialogue: 0,1:24:00.18,1:24:01.83,chinese,,0,0,0,,还剩下 2。
Dialogue: 0,1:24:01.83,1:24:02.46,english,,0,0,0,,Oh my god.
Dialogue: 0,1:24:02.46,1:24:04.84,english,,0,0,0,,All right, don't tell Sanders.
Dialogue: 0,1:24:02.46,1:24:04.84,chinese,,0,0,0,,好吧，别告诉 Sanders 的工作人员。
Dialogue: 0,1:24:02.46,1:24:04.84,annotation,,0,0,0,,*注：Sanders 是这门课上课的地点，哈佛大学 Sanders 剧场。
Dialogue: 0,1:24:04.84,1:24:07.47,english,,0,0,0,,[GRUNTS] Oh, I'm sorry.
Dialogue: 0,1:24:07.47,1:24:08.08,english,,0,0,0,,Oh.
Dialogue: 0,1:24:08.08,1:24:08.58,english,,0,0,0,,[LAUGHTER]
Dialogue: 0,1:24:08.58,1:24:10.35,english,,0,0,0,,OK, that ended poorly.
Dialogue: 0,1:24:08.58,1:24:10.35,chinese,,0,0,0,,好吧，结局很糟糕。
Dialogue: 0,1:24:10.35,1:24:11.07,english,,0,0,0,,Apologies.
Dialogue: 0,1:24:11.07,1:24:11.57,english,,0,0,0,,All right.
Dialogue: 0,1:24:11.57,1:24:17.03,english,,0,0,0,,But now the educational point, though, is that my variable has been decrement did further to just have--
Dialogue: 0,1:24:11.57,1:24:17.03,chinese,,0,0,0,,这是想告诉大家，我的变量进一步递减了。
Dialogue: 0,1:24:17.03,1:24:18.37,english,,0,0,0,,I'm not throwing that far again.
Dialogue: 0,1:24:17.03,1:24:18.37,chinese,,0,0,0,,我不会再扔那么远了。
Dialogue: 0,1:24:18.37,1:24:19.62,english,,0,0,0,,I can't do this.
Dialogue: 0,1:24:18.37,1:24:19.62,chinese,,0,0,0,,不大行。
Dialogue: 0,1:24:19.62,1:24:20.14,english,,0,0,0,,Here we go.
Dialogue: 0,1:24:19.62,1:24:20.14,chinese,,0,0,0,,再来。
Dialogue: 0,1:24:20.14,1:24:21.06,english,,0,0,0,,All right, here we go.
Dialogue: 0,1:24:20.14,1:24:21.06,chinese,,0,0,0,,好了，准备开始。
Dialogue: 0,1:24:21.06,1:24:22.74,english,,0,0,0,,And one final subtraction.
Dialogue: 0,1:24:21.06,1:24:22.74,chinese,,0,0,0,,最后一次减法。
Dialogue: 0,1:24:22.74,1:24:24.88,english,,0,0,0,,And now our variable is left empty.
Dialogue: 0,1:24:22.74,1:24:24.88,chinese,,0,0,0,,现在变量空空。
Dialogue: 0,1:24:24.88,1:24:28.38,english,,0,0,0,,So we had three stress balls there, and that's all a variable is.
Dialogue: 0,1:24:24.88,1:24:28.38,chinese,,0,0,0,,所以我们有三个压力球，这就是变量的全部。
Dialogue: 0,1:24:28.38,1:24:29.47,english,,0,0,0,,It's some kind of storage.
Dialogue: 0,1:24:28.38,1:24:29.47,chinese,,0,0,0,,这是某种存储设备。
Dialogue: 0,1:24:29.47,1:24:32.10,english,,0,0,0,,It's actually, of course, implemented in the computer's memory.
Dialogue: 0,1:24:29.47,1:24:32.10,chinese,,0,0,0,,当然，实际上是在计算机内存里实现的。
Dialogue: 0,1:24:32.10,1:24:35.86,english,,0,0,0,,But metaphorically, it's really just a bowl with some values.
Dialogue: 0,1:24:32.10,1:24:35.86,chinese,,0,0,0,,打个比方，它其实只是一个碗，里面放了一个值。
Dialogue: 0,1:24:35.86,1:24:39.84,english,,0,0,0,,And every time you or, in this case, subtract, you're just changing the value of that variable.
Dialogue: 0,1:24:35.86,1:24:39.84,chinese,,0,0,0,,例子里每次做减法，都是在改变变量的值。
Dialogue: 0,1:24:39.84,1:24:44.61,english,,0,0,0,,And then the code, meanwhile, of course, in parentheses, is just checking, is the bowl empty?
Dialogue: 0,1:24:39.84,1:24:44.61,chinese,,0,0,0,,括号中的代码就是在检查—— 碗是空的吗？
Dialogue: 0,1:24:44.61,1:24:46.57,english,,0,0,0,,Is the bowl empty?
Dialogue: 0,1:24:44.61,1:24:46.57,chinese,,0,0,0,,这碗空没空？
Dialogue: 0,1:24:46.57,1:24:50.35,english,,0,0,0,,AKA, is i greater than 0 or not?
Dialogue: 0,1:24:46.57,1:24:50.35,chinese,,0,0,0,,也就是，i 是否大于 0？
Dialogue: 0,1:24:50.35,1:24:55.21,english,,0,0,0,,Any questions on how we've implemented loops in this way?
Dialogue: 0,1:24:50.35,1:24:55.21,chinese,,0,0,0,,关于这段实现循环的代码，大家还有任何疑问吗？
Dialogue: 0,1:24:55.21,1:24:58.08,english,,0,0,0,,And I owe you a stress ball after class.
Dialogue: 0,1:24:55.21,1:24:58.08,chinese,,0,0,0,,下课后我还你欠的压力球。
Dialogue: 0,1:24:58.08,1:24:59.82,english,,0,0,0,,Questions on loops?
Dialogue: 0,1:24:58.08,1:24:59.82,chinese,,0,0,0,,对循环还有问题没？
Dialogue: 0,1:24:59.82,1:25:03.24,english,,0,0,0,,All right, so it turns out, this is kind of ugly.
Dialogue: 0,1:24:59.82,1:25:03.24,chinese,,0,0,0,,好吧，说实话这有点不好看。
Dialogue: 0,1:25:03.24,1:25:09.42,english,,0,0,0,,And this really starts to take the fun out of programming when you have to write out this sequence of steps.
Dialogue: 0,1:25:03.24,1:25:09.42,chinese,,0,0,0,,当你不得不写出这一连串步骤，编程的乐趣就开始消失了。
Dialogue: 0,1:25:09.42,1:25:11.38,english,,0,0,0,,So it turns out, there's other ways to do this.
Dialogue: 0,1:25:09.42,1:25:11.38,chinese,,0,0,0,,其实还有其它方法可以实现循环。
Dialogue: 0,1:25:11.38,1:25:16.41,english,,0,0,0,,But first, let's see, logically, how else you might express this because it's a little weird that we keep using zero.
Dialogue: 0,1:25:11.38,1:25:16.41,chinese,,0,0,0,,但首先，让我们从逻辑上看看，你还可以用什么方式来表达，\N因为我们一直使用 0 作为终止条件，这有点奇怪。
Dialogue: 0,1:25:16.41,1:25:19.89,english,,0,0,0,,So the one other way to do this would be to invert the logic.
Dialogue: 0,1:25:16.41,1:25:19.89,chinese,,0,0,0,,还有一种办法是反过来想。
Dialogue: 0,1:25:19.89,1:25:23.82,english,,0,0,0,,You could absolutely start with your variable, call it i equal to 1.
Dialogue: 0,1:25:19.89,1:25:23.82,chinese,,0,0,0,,你完全可以让变量 i 从 1 开始。
Dialogue: 0,1:25:23.82,1:25:28.29,english,,0,0,0,,And then you could ask the question, is i less than or equal to 3?
Dialogue: 0,1:25:23.82,1:25:28.29,chinese,,0,0,0,,然后你可以问，i 是否小于或等于 3？
Dialogue: 0,1:25:28.29,1:25:30.21,english,,0,0,0,,And notice a bit of new syntax here.
Dialogue: 0,1:25:28.29,1:25:30.21,chinese,,0,0,0,,注意这里的新语法。
Dialogue: 0,1:25:30.21,1:25:37.87,english,,0,0,0,,On your typical keyboard, there is number less than or equal sign or greater than or equal sign like you would write in math class with 1 over the other.
Dialogue: 0,1:25:30.21,1:25:37.87,chinese,,0,0,0,,正常键盘上，都会有大于号、小于号、等于号，\N如果想表达大于等于或者小于等于，数学课上做的是把两个符号上下叠一起。
Dialogue: 0,1:25:37.87,1:25:45.36,english,,0,0,0,,And so in C, you use two characters, less than followed by an equal sign or, if appropriate, greater than followed by in equal sign.
Dialogue: 0,1:25:37.87,1:25:45.36,chinese,,0,0,0,,在 C 语言中，使用两个字符：< 后面跟一个 =，或者 > 后面跟一个 =。
Dialogue: 0,1:25:45.36,1:25:47.37,english,,0,0,0,,And that logically captures that idea.
Dialogue: 0,1:25:45.36,1:25:47.37,chinese,,0,0,0,,这很顺理成章。
Dialogue: 0,1:25:47.37,1:25:50.58,english,,0,0,0,,So notice that I'm changing my questions.
Dialogue: 0,1:25:47.37,1:25:50.58,chinese,,0,0,0,,请注意，我改变了括号里的询问句。
Dialogue: 0,1:25:50.58,1:25:55.83,english,,0,0,0,,I'm initializing i to 1, and then I'm going to increment it ultimately to 2 and then 3.
Dialogue: 0,1:25:50.58,1:25:55.83,chinese,,0,0,0,,我让 i 初始化为 1，然后递增到 2，最终递增到 3。
Dialogue: 0,1:25:55.83,1:26:00.34,english,,0,0,0,,But because I'm doing less than or equal to, it's still going to go from 1, 2, 3.
Dialogue: 0,1:25:55.83,1:26:00.34,chinese,,0,0,0,,但因为我敲的是 <=，所以 1、2、3，执行了 3 次。
Dialogue: 0,1:26:00.34,1:26:01.53,english,,0,0,0,,So that works too.
Dialogue: 0,1:26:00.34,1:26:01.53,chinese,,0,0,0,,这样也行得通。
Dialogue: 0,1:26:01.53,1:26:03.81,english,,0,0,0,,We could similarly do this yet another way.
Dialogue: 0,1:26:01.53,1:26:03.81,chinese,,0,0,0,,我们还可以换个办法解决。
Dialogue: 0,1:26:03.81,1:26:11.64,english,,0,0,0,,We could initialize i to 0, and then we could say, well, i is less than 3 and keep incrementing it.
Dialogue: 0,1:26:03.81,1:26:11.64,chinese,,0,0,0,,我们可以将 i 初始化为 0，然后写条件，i 小于 3，让它自己递增。
Dialogue: 0,1:26:11.64,1:26:14.94,english,,0,0,0,,And I showed this last form is actually the most canonical.
Dialogue: 0,1:26:11.64,1:26:14.94,chinese,,0,0,0,,展示的这种形式实际上是最经典的。
Dialogue: 0,1:26:14.94,1:26:18.42,english,,0,0,0,,It might be the most human-like to think in terms of 1 to 3.
Dialogue: 0,1:26:14.94,1:26:18.42,chinese,,0,0,0,,从 1 到 3 的思考方式可能很适合人类。
Dialogue: 0,1:26:18.42,1:26:23.74,english,,0,0,0,,It might be the most stressball-like to think in terms of 3 to 0, counting down.
Dialogue: 0,1:26:18.42,1:26:23.74,chinese,,0,0,0,,从 3 到 0，倒计时一样，想起来带点压迫感。
Dialogue: 0,1:26:23.74,1:26:35.61,english,,0,0,0,,But typically, the go-to syntax for most programmers once you get comfortable counting from 0 is to always start counting from 0 and count up to less than the value you're counting up to.
Dialogue: 0,1:26:23.74,1:26:35.61,chinese,,0,0,0,,不过通常情况是，大多数程序员熟悉了从 0 开始计数，\N于是每次都写从初始化 0 开始，向上循环到小于那个数。
Dialogue: 0,1:26:35.61,1:26:40.04,english,,0,0,0,,So it would be incorrect, why, to change this to less than or equal to 3 here?
Dialogue: 0,1:26:35.61,1:26:40.04,chinese,,0,0,0,,在这里把它改成 <=3 是不正确的，为什么？
Dialogue: 0,1:26:40.04,1:26:42.96,english,,0,0,0,,What would happen if I changed the less than to less than or equal to?
Dialogue: 0,1:26:40.04,1:26:42.96,chinese,,0,0,0,,如果我把小于改为小于或等于，结果会怎样？
Dialogue: 0,1:26:42.96,1:26:44.34,english,,0,0,0,,AUDIENCE: It'll only meow twice.
Dialogue: 0,1:26:42.96,1:26:44.34,annotation,,0,0,0,,*注：这里其实回答错了，后面讲解正确。
Dialogue: 0,1:26:44.34,1:26:47.78,english,,0,0,0,,DAVID J. MALAN: Yeah, it'll meow an extra-- a fourth time, in fact, total, right?
Dialogue: 0,1:26:44.34,1:26:47.78,chinese,,0,0,0,,是的，它会多输出一次也就是四次 meow ，对吧?
Dialogue: 0,1:26:47.78,1:26:51.15,english,,0,0,0,,Because you'll start at 0, then 1, then 2, then 3.
Dialogue: 0,1:26:47.78,1:26:51.15,chinese,,0,0,0,,因为你会从 0 开始，然后是 1、2、3。
Dialogue: 0,1:26:51.15,1:26:53.22,english,,0,0,0,,And less than or equal to 3-- sorry--
Dialogue: 0,1:26:51.15,1:26:53.22,chinese,,0,0,0,,条件是小于或等于 3，
Dialogue: 0,1:26:53.22,1:26:55.42,english,,0,0,0,,3 will give you the fourth time.
Dialogue: 0,1:26:53.22,1:26:55.42,chinese,,0,0,0,,数到 3 的时候会进行第四次循环。
Dialogue: 0,1:26:55.42,1:26:58.65,english,,0,0,0,,So we do want indeed to be just a single less than.
Dialogue: 0,1:26:55.42,1:26:58.65,chinese,,0,0,0,,因此，这个地方确实应该是一个单小于号。
Dialogue: 0,1:26:58.65,1:27:02.49,english,,0,0,0,,All right, so now that we have those options, let me just give you one other.
Dialogue: 0,1:26:58.65,1:27:02.49,chinese,,0,0,0,,好吧，我们已经有了这么多选择，再给你们看一个。
Dialogue: 0,1:27:02.49,1:27:07.21,english,,0,0,0,,And this one takes a little more, getting used to as well, but it's probably the more common way to write this.
Dialogue: 0,1:27:02.49,1:27:07.21,chinese,,0,0,0,,这种写法也得花点时间适应，但可以说是最常见的写法。
Dialogue: 0,1:27:07.21,1:27:11.59,english,,0,0,0,,Let me go ahead and propose that we implement this as follows.
Dialogue: 0,1:27:07.21,1:27:11.59,chinese,,0,0,0,,我来揭晓，应该这么来实现。
Dialogue: 0,1:27:11.59,1:27:13.39,english,,0,0,0,,Let me go back to my code here.
Dialogue: 0,1:27:11.59,1:27:13.39,chinese,,0,0,0,,先回到 VS Code。
Dialogue: 0,1:27:13.39,1:27:21.00,english,,0,0,0,,Let me go into my several printfs, getting rid of all but one of them ultimately.
Dialogue: 0,1:27:13.39,1:27:21.00,chinese,,0,0,0,,看到这里有几个 printf，都删了只留一个。
Dialogue: 0,1:27:21.00,1:27:22.75,english,,0,0,0,,And let's implement this in code.
Dialogue: 0,1:27:21.00,1:27:22.75,chinese,,0,0,0,,来上手用代码实现。
Dialogue: 0,1:27:22.75,1:27:36.93,english,,0,0,0,,So let's do int i get 0, how about then while i is less than 3, then let's go ahead and say printf quote/unquote meow-- melow-- meow backslash n.
Dialogue: 0,1:27:22.75,1:27:36.93,chinese,,0,0,0,,【口述代码】
Dialogue: 0,1:27:36.93,1:27:41.31,english,,0,0,0,,And then we have to do i minus minus or plus plus?
Dialogue: 0,1:27:36.93,1:27:41.31,chinese,,0,0,0,,然后要写 i-- 还是 i++？
Dialogue: 0,1:27:41.31,1:27:42.23,english,,0,0,0,,AUDIENCE: Plus plus.
Dialogue: 0,1:27:41.31,1:27:42.23,chinese,,0,0,0,,观众：i++。
Dialogue: 0,1:27:42.23,1:27:47.12,english,,0,0,0,,DAVID J. MALAN: So plus plus because we're starting at 0 and going up to but not through 3.
Dialogue: 0,1:27:42.23,1:27:47.12,chinese,,0,0,0,,所以 i++，因为我们从 0 开始，一直到 3。
Dialogue: 0,1:27:47.12,1:27:52.97,english,,0,0,0,,So let me go ahead now and make meow after clearing my terminal, ./meow, and it's still just as correct.
Dialogue: 0,1:27:47.12,1:27:52.97,chinese,,0,0,0,,走流程，结果倒还是没问题。
Dialogue: 0,1:27:52.97,1:27:56.73,english,,0,0,0,,But it's a little more-- it's a little better designed.
Dialogue: 0,1:27:52.97,1:27:56.73,chinese,,0,0,0,,但它的设计要更好一些。
Dialogue: 0,1:27:56.73,1:27:57.23,english,,0,0,0,,Why?
Dialogue: 0,1:27:57.23,1:28:00.77,english,,0,0,0,,Because now if I want to change it from 3 to 30 times, for instance,
Dialogue: 0,1:27:57.23,1:28:00.77,chinese,,0,0,0,,比如说我想把它从 3 次改成 30 次，
Dialogue: 0,1:28:00.77,1:28:01.85,english,,0,0,0,,I can change it there.
Dialogue: 0,1:28:00.77,1:28:01.85,chinese,,0,0,0,,我可以在这里更改。
Dialogue: 0,1:28:01.85,1:28:03.77,english,,0,0,0,,I can recompile my code.
Dialogue: 0,1:28:01.85,1:28:03.77,chinese,,0,0,0,,重新编译代码。
Dialogue: 0,1:28:03.77,1:28:06.02,english,,0,0,0,,I can do ./meow, and done.
Dialogue: 0,1:28:03.77,1:28:06.02,chinese,,0,0,0,,./meow 来执行，就可以了。
Dialogue: 0,1:28:06.02,1:28:09.45,english,,0,0,0,,I don't have to copy and paste it 27 more times to get that effect.
Dialogue: 0,1:28:06.02,1:28:09.45,chinese,,0,0,0,,用不着再复制粘贴 27 次才能达到效果。
Dialogue: 0,1:28:09.45,1:28:13.40,english,,0,0,0,,And I can even change what the word is by changing it in just one location.
Dialogue: 0,1:28:09.45,1:28:13.40,chinese,,0,0,0,,修改这里的话，所有输出的内容也都改了。
Dialogue: 0,1:28:13.40,1:28:15.92,english,,0,0,0,,But it turns out, there's other ways to do this too.
Dialogue: 0,1:28:13.40,1:28:15.92,chinese,,0,0,0,,其实吧，除了 while 关键字，还有别的路子可以实现循环。
Dialogue: 0,1:28:15.92,1:28:20.50,english,,0,0,0,,And let me propose that we introduce you to what's called a for loop as well.
Dialogue: 0,1:28:15.92,1:28:20.50,chinese,,0,0,0,,隆重推出，for 循环。
Dialogue: 0,1:28:20.50,1:28:27.50,english,,0,0,0,,So if you want to repeat something three times, you can absolutely take the while loop approach that we just saw, or you can do this.
Dialogue: 0,1:28:20.50,1:28:27.50,chinese,,0,0,0,,因此，如果你想把某件事重复三次，\N完全可以用刚才看到的 while 循环，其实这么写也可以。
Dialogue: 0,1:28:27.50,1:28:34.20,english,,0,0,0,,And this one takes a little more, getting used to, but it kind of consolidates into one line all of the same logic.
Dialogue: 0,1:28:27.50,1:28:34.20,chinese,,0,0,0,,这个需要花点时间适应，但它把所有循环的逻辑都整合到了一行上。
Dialogue: 0,1:28:34.20,1:28:36.83,english,,0,0,0,,So notice, we have the keyword for here.
Dialogue: 0,1:28:34.20,1:28:36.83,chinese,,0,0,0,,请注意，这里有一个关键词 for。
Dialogue: 0,1:28:36.83,1:28:42.11,english,,0,0,0,,And for is just a preposition in this case that generally implies, here comes a loop.
Dialogue: 0,1:28:36.83,1:28:42.11,chinese,,0,0,0,,在这里，for 只是一个介词，就是说 "这里有一个循环"。
Dialogue: 0,1:28:42.11,1:28:46.09,english,,0,0,0,,Inside of parentheses here is not just a Boolean expression.
Dialogue: 0,1:28:42.11,1:28:46.09,chinese,,0,0,0,,括号里面的不只是布尔表达式。
Dialogue: 0,1:28:46.09,1:28:47.93,english,,0,0,0,,And this is where things get a little weird.
Dialogue: 0,1:28:46.09,1:28:47.93,chinese,,0,0,0,,所以这里有点奇怪。
Dialogue: 0,1:28:47.93,1:28:54.23,english,,0,0,0,,There's three things-- to the left of the semicolon, in the middle of the two semicolons, and to the right of the semicolon.
Dialogue: 0,1:28:47.93,1:28:54.23,chinese,,0,0,0,,有三样东西—— 分号左边，两个分号中间和分号右边。
Dialogue: 0,1:28:54.23,1:28:58.19,english,,0,0,0,,This is really the only other context we'll see semicolons, and it's weird.
Dialogue: 0,1:28:54.23,1:28:58.19,chinese,,0,0,0,,除了在行末，这确实是我们第一次看到分号在这个位置，太怪了。
Dialogue: 0,1:28:58.19,1:28:59.99,english,,0,0,0,,Normally, it's been at the end of the line.
Dialogue: 0,1:28:58.19,1:28:59.99,chinese,,0,0,0,,通常情况下，它都在一行的最后。
Dialogue: 0,1:28:59.99,1:29:04.92,english,,0,0,0,,Now it's two of them in the middle of the line, but this is the way humans decided years ago to do it.
Dialogue: 0,1:28:59.99,1:29:04.92,chinese,,0,0,0,,现在这两个分号都在语句的中间，其实是早前的人们决定这么写的。
Dialogue: 0,1:29:04.92,1:29:06.08,english,,0,0,0,,So what is this doing?
Dialogue: 0,1:29:04.92,1:29:06.08,chinese,,0,0,0,,这是在干啥？
Dialogue: 0,1:29:06.08,1:29:07.85,english,,0,0,0,,Almost the same thing.
Dialogue: 0,1:29:06.08,1:29:07.85,chinese,,0,0,0,,干的事几乎一样。
Dialogue: 0,1:29:07.85,1:29:12.32,english,,0,0,0,,It is going to initialize a variable called i to 0.
Dialogue: 0,1:29:07.85,1:29:12.32,chinese,,0,0,0,,它会把一个名为 i 的变量初始化为 0。
Dialogue: 0,1:29:12.32,1:29:14.24,english,,0,0,0,,It's going to then check.
Dialogue: 0,1:29:12.32,1:29:14.24,chinese,,0,0,0,,然后进行检查。
Dialogue: 0,1:29:14.24,1:29:22.98,english,,0,0,0,,If it's less than 3, it's then going to do whatever's in the curly braces, and it's lastly going to increment i and repeat.
Dialogue: 0,1:29:14.24,1:29:22.98,chinese,,0,0,0,,如果小于 3，它就执行大括号中的操作，最后让 i 递增，重复判断的过程。
Dialogue: 0,1:29:22.98,1:29:28.34,english,,0,0,0,,So just highlighting those in turn, at first, i is initialized to 0, just like before.
Dialogue: 0,1:29:22.98,1:29:28.34,chinese,,0,0,0,,首先，i 初始化为 0，跟之前一样。
Dialogue: 0,1:29:28.34,1:29:30.17,english,,0,0,0,,Then this condition is checked.
Dialogue: 0,1:29:28.34,1:29:30.17,chinese,,0,0,0,,然后检查中间的条件。
Dialogue: 0,1:29:30.17,1:29:32.15,english,,0,0,0,,This is a Boolean expression.
Dialogue: 0,1:29:30.17,1:29:32.15,chinese,,0,0,0,,这是一个布尔表达式。
Dialogue: 0,1:29:32.15,1:29:34.61,english,,0,0,0,,Yes or no, true or false will be its answer.
Dialogue: 0,1:29:32.15,1:29:34.61,chinese,,0,0,0,,是或否，真或假，就是它的答案。
Dialogue: 0,1:29:34.61,1:29:40.55,english,,0,0,0,,And if i is less than 3, which it should be once it starts at 0, well, then we're going to go ahead and print out meow.
Dialogue: 0,1:29:34.61,1:29:40.55,chinese,,0,0,0,,如果 i 小于 3，从 0 开始当然小于 3，那么我们将输出 meow。
Dialogue: 0,1:29:40.55,1:29:42.35,english,,0,0,0,,Then i is going to get incremented.
Dialogue: 0,1:29:40.55,1:29:42.35,chinese,,0,0,0,,然后，i 就递增了。
Dialogue: 0,1:29:42.35,1:29:43.58,english,,0,0,0,,So it starts at 0.
Dialogue: 0,1:29:42.35,1:29:43.58,chinese,,0,0,0,,因此，它从 0 开始。
Dialogue: 0,1:29:43.58,1:29:45.17,english,,0,0,0,,It goes now to 1.
Dialogue: 0,1:29:43.58,1:29:45.17,chinese,,0,0,0,,现在是 1。
Dialogue: 0,1:29:45.17,1:29:48.15,english,,0,0,0,,At that point, the Boolean expression is checked again.
Dialogue: 0,1:29:45.17,1:29:48.15,chinese,,0,0,0,,此时，会再次检查布尔表达式。
Dialogue: 0,1:29:48.15,1:29:50.84,english,,0,0,0,,So you don't keep changing i back to 0.
Dialogue: 0,1:29:48.15,1:29:50.84,chinese,,0,0,0,,你不会一直把 i 改回 0。
Dialogue: 0,1:29:48.15,1:29:50.84,annotation,,0,0,0,,*注：这是说第一个分号前的语句（这里的 i 的声明以及赋值）只会在进入 for 循环时触发一次。
Dialogue: 0,1:29:50.84,1:29:53.21,english,,0,0,0,,That first step happens only once.
Dialogue: 0,1:29:50.84,1:29:53.21,chinese,,0,0,0,,第一步只执行一次。
Dialogue: 0,1:29:53.21,1:29:56.27,english,,0,0,0,,But now you repeat through those three other highlights.
Dialogue: 0,1:29:53.21,1:29:56.27,chinese,,0,0,0,,不过，中间的布尔表达式每次都得判断一遍。
Dialogue: 0,1:29:56.27,1:29:57.77,english,,0,0,0,,I check if i is less than 3.
Dialogue: 0,1:29:56.27,1:29:57.77,chinese,,0,0,0,,我检查 i 是不是小于 3。
Dialogue: 0,1:29:57.77,1:29:58.32,english,,0,0,0,,It is.
Dialogue: 0,1:29:57.77,1:29:58.32,chinese,,0,0,0,,确实。
Dialogue: 0,1:29:58.32,1:29:59.60,english,,0,0,0,,So I print out meow.
Dialogue: 0,1:29:58.32,1:29:59.60,chinese,,0,0,0,,所以我打印了 meow。
Dialogue: 0,1:29:59.60,1:30:00.87,english,,0,0,0,,It then increments i.
Dialogue: 0,1:29:59.60,1:30:00.87,chinese,,0,0,0,,然后 i 自增 1。
Dialogue: 0,1:30:00.87,1:30:03.41,english,,0,0,0,,I check if i, now 2, is less than 3.
Dialogue: 0,1:30:00.87,1:30:03.41,chinese,,0,0,0,,检查下 i，现在为 2，是不是小于 3。
Dialogue: 0,1:30:03.41,1:30:03.98,english,,0,0,0,,It is.
Dialogue: 0,1:30:03.41,1:30:03.98,chinese,,0,0,0,,确实。
Dialogue: 0,1:30:03.98,1:30:06.38,english,,0,0,0,,I print out meow. i gets incremented.
Dialogue: 0,1:30:03.98,1:30:06.38,chinese,,0,0,0,,打印出 meow，i 自增。
Dialogue: 0,1:30:06.38,1:30:07.10,english,,0,0,0,,I now check.
Dialogue: 0,1:30:06.38,1:30:07.10,chinese,,0,0,0,,现在又检查。
Dialogue: 0,1:30:07.10,1:30:08.12,english,,0,0,0,,Is i less than 3?
Dialogue: 0,1:30:07.10,1:30:08.12,chinese,,0,0,0,,i 小于 3 吗？
Dialogue: 0,1:30:08.12,1:30:11.36,english,,0,0,0,,No, it's not, because 3 is not less than 3.
Dialogue: 0,1:30:08.12,1:30:11.36,chinese,,0,0,0,,不是的，3 并不小于 3。
Dialogue: 0,1:30:11.36,1:30:12.80,english,,0,0,0,,And so the whole thing stops.
Dialogue: 0,1:30:11.36,1:30:12.80,chinese,,0,0,0,,整个循环到这里就结束了。
Dialogue: 0,1:30:12.80,1:30:17.42,english,,0,0,0,,And whatever code is below this curly brace, if any, starts executing instead.
Dialogue: 0,1:30:12.80,1:30:17.42,chinese,,0,0,0,,接着执行大括号后面的代码，如果有的话。
Dialogue: 0,1:30:17.42,1:30:22.61,english,,0,0,0,,Just like in Scratch, you break out of the loop and the puzzle pieces being hugged.
Dialogue: 0,1:30:17.42,1:30:22.61,chinese,,0,0,0,,就像 Scratch 里，你可以跳出循环拼图的束缚。
Dialogue: 0,1:30:22.61,1:30:31.52,english,,0,0,0,,Questions, then, about this alternative syntax for loops, AKA, a for loop?
Dialogue: 0,1:30:22.61,1:30:31.52,chinese,,0,0,0,,那么，关于循环的另一种语法，for 循环，理解到了吗？
Dialogue: 0,1:30:31.52,1:30:34.19,english,,0,0,0,,AUDIENCE: Can you explain again why it doesn't go back to 0?
Dialogue: 0,1:30:31.52,1:30:34.19,chinese,,0,0,0,,观众：你能再解释一下为什么不回到 0 吗？
Dialogue: 0,1:30:34.19,1:30:35.57,english,,0,0,0,,DAVID J. MALAN: Sorry, say again?
Dialogue: 0,1:30:34.19,1:30:35.57,chinese,,0,0,0,,对不起，再说一遍？
Dialogue: 0,1:30:35.57,1:30:37.40,english,,0,0,0,,AUDIENCE: Can you explain again why it doesn't reset to 0?
Dialogue: 0,1:30:35.57,1:30:37.40,chinese,,0,0,0,,观众：你能再解释一下为什么不重置为 0 吗？
Dialogue: 0,1:30:37.40,1:30:38.27,english,,0,0,0,,DAVID J. MALAN: Yeah.
Dialogue: 0,1:30:37.40,1:30:38.27,chinese,,0,0,0,,彳亍。
Dialogue: 0,1:30:38.27,1:30:40.40,english,,0,0,0,,Can I explain again why it doesn't reset to 0?
Dialogue: 0,1:30:38.27,1:30:40.40,chinese,,0,0,0,,我能再解释一下为什么没有重置 i 为 0 吗？
Dialogue: 0,1:30:40.40,1:30:41.69,english,,0,0,0,,Honestly, just because.
Dialogue: 0,1:30:40.40,1:30:41.69,chinese,,0,0,0,,老实说，只是因为。
Dialogue: 0,1:30:41.69,1:30:43.49,english,,0,0,0,,This was the syntax they chose.
Dialogue: 0,1:30:41.69,1:30:43.49,chinese,,0,0,0,,这就是他们定的语法。
Dialogue: 0,1:30:43.49,1:30:47.66,english,,0,0,0,,This first part before the first semicolon is only executed once just because.
Dialogue: 0,1:30:43.49,1:30:47.66,chinese,,0,0,0,,第一个分号前的第一部分，只执行一次，原因就在于此。
Dialogue: 0,1:30:47.66,1:30:48.74,english,,0,0,0,,That's how it's designed.
Dialogue: 0,1:30:47.66,1:30:48.74,chinese,,0,0,0,,设计就是这样的。
Dialogue: 0,1:30:48.74,1:30:51.66,english,,0,0,0,,Everything else cycles again and again.
Dialogue: 0,1:30:48.74,1:30:51.66,chinese,,0,0,0,,其它部分，都循环往复地执行。
Dialogue: 0,1:30:51.66,1:30:55.61,english,,0,0,0,,And this is just an alternative syntax to using the slightly more lines of code.
Dialogue: 0,1:30:51.66,1:30:55.61,chinese,,0,0,0,,这只是另一种循环语法，代码行数少了点。
Dialogue: 0,1:30:55.61,1:30:57.81,english,,0,0,0,,It was, like, six lines of code using the while loop.
Dialogue: 0,1:30:55.61,1:30:57.81,chinese,,0,0,0,,要是用 while 循环得六行代码。
Dialogue: 0,1:30:57.81,1:30:59.38,english,,0,0,0,,Logically, it's the same thing.
Dialogue: 0,1:30:57.81,1:30:59.38,chinese,,0,0,0,,逻辑上其实是一码事。
Dialogue: 0,1:30:59.38,1:31:05.24,english,,0,0,0,,Programmers, once they get more comfortable, tend to prefer this because it just expresses all your same thoughts more succinctly.
Dialogue: 0,1:30:59.38,1:31:05.24,chinese,,0,0,0,,一旦程序员熟悉了，他们通常更喜欢这种写法，因为更简洁地表达了相同的想法。
Dialogue: 0,1:31:05.24,1:31:06.38,english,,0,0,0,,That's all.
Dialogue: 0,1:31:05.24,1:31:06.38,chinese,,0,0,0,,就是这样。
Dialogue: 0,1:31:06.38,1:31:06.89,english,,0,0,0,,Yeah?
Dialogue: 0,1:31:06.89,1:31:07.62,english,,0,0,0,,AUDIENCE: That was my question.
Dialogue: 0,1:31:06.89,1:31:07.62,chinese,,0,0,0,,观众：刚才我也想问这个。
Dialogue: 0,1:31:07.62,1:31:08.41,english,,0,0,0,,DAVID J. MALAN: OK.
Dialogue: 0,1:31:07.62,1:31:08.41,chinese,,0,0,0,,好的。
Dialogue: 0,1:31:08.41,1:31:11.21,english,,0,0,0,,So let's just work this into my meow example.
Dialogue: 0,1:31:08.41,1:31:11.21,chinese,,0,0,0,,所以，让我们把这个点用到 meow 例子里面来吧。
Dialogue: 0,1:31:11.21,1:31:12.59,english,,0,0,0,,Let me go back to the code here.
Dialogue: 0,1:31:11.21,1:31:12.59,chinese,,0,0,0,,让我回到代码这里。
Dialogue: 0,1:31:12.59,1:31:14.89,english,,0,0,0,,And notice, indeed, if I highlight all these lines,
Dialogue: 0,1:31:12.59,1:31:14.89,chinese,,0,0,0,,注意了，如果我把这几行代码选中，
Dialogue: 0,1:31:14.89,1:31:16.19,english,,0,0,0,,I think we can tighten this up.
Dialogue: 0,1:31:14.89,1:31:16.19,chinese,,0,0,0,,我想还可以把它精简一下。
Dialogue: 0,1:31:16.19,1:31:21.35,english,,0,0,0,,Let me get rid of all of those and instead do for int i equals 0.
Dialogue: 0,1:31:16.19,1:31:21.35,chinese,,0,0,0,,把这些都去掉，改成 int i = 0。
Dialogue: 0,1:31:21.35,1:31:22.79,english,,0,0,0,,And I'm saying equals.
Dialogue: 0,1:31:21.35,1:31:22.79,chinese,,0,0,0,,我说的是 equal。
Dialogue: 0,1:31:22.79,1:31:24.26,english,,0,0,0,,Most programmers would say gets.
Dialogue: 0,1:31:22.79,1:31:24.26,chinese,,0,0,0,,大多数程序员都会说 get。
Dialogue: 0,1:31:24.26,1:31:28.13,english,,0,0,0,,So int i gets 0 means assignment-- the word get.
Dialogue: 0,1:31:24.26,1:31:28.13,chinese,,0,0,0,,int i gets 0，就是说，给变量 i 赋值 0。
Dialogue: 0,1:31:28.13,1:31:32.36,english,,0,0,0,,Now I'm going to do i is less than 3 i++.
Dialogue: 0,1:31:28.13,1:31:32.36,chinese,,0,0,0,,【口述代码】
Dialogue: 0,1:31:32.36,1:31:37.67,english,,0,0,0,,Now in here I'm going to do my printf quote/unquote meow backslash n.
Dialogue: 0,1:31:32.36,1:31:37.67,chinese,,0,0,0,,【口述代码】
Dialogue: 0,1:31:37.67,1:31:39.45,english,,0,0,0,,And so it's indeed a little tighter.
Dialogue: 0,1:31:37.67,1:31:39.45,chinese,,0,0,0,,所以确实更紧凑了。
Dialogue: 0,1:31:39.45,1:31:41.40,english,,0,0,0,,I mean, two of the lines are just curly braces.
Dialogue: 0,1:31:39.45,1:31:41.40,chinese,,0,0,0,,我意思是，有两行只是有大括号。
Dialogue: 0,1:31:41.40,1:31:43.58,english,,0,0,0,,There's really only two juicy lines of code now.
Dialogue: 0,1:31:41.40,1:31:43.58,chinese,,0,0,0,,真正有意义的代码只有两行。
Dialogue: 0,1:31:43.58,1:31:47.46,english,,0,0,0,,Let me go ahead and do make meow, ./meow.
Dialogue: 0,1:31:43.58,1:31:47.46,chinese,,0,0,0,,接着走流程。
Dialogue: 0,1:31:47.46,1:31:51.68,english,,0,0,0,,And again, we're back in business with three of them printing only.
Dialogue: 0,1:31:47.46,1:31:51.68,chinese,,0,0,0,,一样的，我们重新实现了打印 meow 三次。
Dialogue: 0,1:31:51.68,1:31:56.33,english,,0,0,0,,All right, there's one last structure we should explore just because it's sometimes useful.
Dialogue: 0,1:31:51.68,1:31:56.33,chinese,,0,0,0,,好吧，我们还得探讨最后一种循环结构，有时候还挺好用的。
Dialogue: 0,1:31:56.33,1:31:58.01,english,,0,0,0,,This was a forever block.
Dialogue: 0,1:31:56.33,1:31:58.01,chinese,,0,0,0,,这是一个 forever 块。
Dialogue: 0,1:31:58.01,1:32:02.75,english,,0,0,0,,And this would be a little weird in Scratch to just say meow forever, or at least without waiting.
Dialogue: 0,1:31:58.01,1:32:02.75,chinese,,0,0,0,,如果在 Scratch 里一直重复 meow，还不添加点停顿，是很奇怪的。
Dialogue: 0,1:32:02.75,1:32:07.49,english,,0,0,0,,But there is indeed a forever block in Scratch, which means do the following, forever.
Dialogue: 0,1:32:02.75,1:32:07.49,chinese,,0,0,0,,不过 Scratch 里确实有一个 forever 块，它的意思是一直执行一些操作。
Dialogue: 0,1:32:07.49,1:32:11.36,english,,0,0,0,,And I proposed, I think, verbally last week at least one example where this is useful.
Dialogue: 0,1:32:07.49,1:32:11.36,chinese,,0,0,0,,我想，上周的讲座里提了至少一个例子，说明永远循环是有用武之地的。
Dialogue: 0,1:32:11.36,1:32:13.04,english,,0,0,0,,Meowing forever, a little annoying.
Dialogue: 0,1:32:11.36,1:32:13.04,chinese,,0,0,0,,一直喵喵叫，有点扰人。
Dialogue: 0,1:32:13.04,1:32:19.10,english,,0,0,0,,But can you think of common cases where you might want to write code or use a program that loops forever?
Dialogue: 0,1:32:13.04,1:32:19.10,chinese,,0,0,0,,但是，你能想到在哪些常见情况下，你可能需要编写代码并使用永远循环呢？
Dialogue: 0,1:32:19.10,1:32:19.65,english,,0,0,0,,Yeah?
Dialogue: 0,1:32:19.65,1:32:21.74,english,,0,0,0,,AUDIENCE: Playing music throughout an entire game.
Dialogue: 0,1:32:19.65,1:32:21.74,chinese,,0,0,0,,观众：在整场游戏里面播放音乐。
Dialogue: 0,1:32:21.74,1:32:22.97,english,,0,0,0,,DAVID J. MALAN: Yeah, playing music.
Dialogue: 0,1:32:21.74,1:32:22.97,chinese,,0,0,0,,是的，播放音乐。
Dialogue: 0,1:32:22.97,1:32:26.49,english,,0,0,0,,Like Spotify playlists, just repeating again and again would be some kind of loop.
Dialogue: 0,1:32:22.97,1:32:26.49,chinese,,0,0,0,,就像 Spotify 的播放列表一样，不断重复，形成循环。
Dialogue: 0,1:32:26.49,1:32:28.31,english,,0,0,0,,AUDIENCE: Checking for collisions.
Dialogue: 0,1:32:26.49,1:32:28.31,chinese,,0,0,0,,观众：检查碰撞。
Dialogue: 0,1:32:28.31,1:32:32.54,english,,0,0,0,,DAVID J. MALAN: Checking for collisions in Scratch, so seeing if something's bouncing off the wall or another sprite.
Dialogue: 0,1:32:28.31,1:32:32.54,chinese,,0,0,0,,在 Scratch 里检查碰撞，看是不是有东西撞到墙或者碰到别的精灵。
Dialogue: 0,1:32:32.54,1:32:33.59,english,,0,0,0,,Yeah?
Dialogue: 0,1:32:33.59,1:32:36.51,english,,0,0,0,,AUDIENCE: Oh, checking for input.
Dialogue: 0,1:32:33.59,1:32:36.51,chinese,,0,0,0,,观众：检查输入。
Dialogue: 0,1:32:36.51,1:32:37.97,english,,0,0,0,,DAVID J. MALAN: Checking for input.
Dialogue: 0,1:32:36.51,1:32:37.97,chinese,,0,0,0,,检查输入也是。
Dialogue: 0,1:32:37.97,1:32:43.30,english,,0,0,0,,So yeah, get_string is essentially just waiting there forever for me to type in some input until I do.
Dialogue: 0,1:32:37.97,1:32:43.30,chinese,,0,0,0,,是的，get_string 本质上就是永远等着我输入一些内容，直到我输入为止。
Dialogue: 0,1:32:43.30,1:32:44.47,english,,0,0,0,,AUDIENCE: Checking the time.
Dialogue: 0,1:32:43.30,1:32:44.47,chinese,,0,0,0,,检查时间。
Dialogue: 0,1:32:44.47,1:32:47.86,english,,0,0,0,,DAVID J. MALAN: Checking the time and actually maintaining human time, like a wall clock.
Dialogue: 0,1:32:44.47,1:32:47.86,chinese,,0,0,0,,检查时间，实际上是维持人类定下的时间，就像挂钟一样。
Dialogue: 0,1:32:47.86,1:32:48.55,english,,0,0,0,,Behind you?
Dialogue: 0,1:32:47.86,1:32:48.55,chinese,,0,0,0,,你后面那位？
Dialogue: 0,1:32:48.55,1:32:49.42,english,,0,0,0,,Is that the same?
Dialogue: 0,1:32:48.55,1:32:49.42,chinese,,0,0,0,,是一个问题吗？
Dialogue: 0,1:32:49.42,1:32:50.59,english,,0,0,0,,AUDIENCE: I was going to say checking the time.
Dialogue: 0,1:32:49.42,1:32:50.59,chinese,,0,0,0,,观众：我也想说检查时间。
Dialogue: 0,1:32:50.59,1:32:52.17,english,,0,0,0,,DAVID J. MALAN: OK, checking the time.
Dialogue: 0,1:32:50.59,1:32:52.17,chinese,,0,0,0,,好的，检查时间是对的。
Dialogue: 0,1:32:52.17,1:32:52.90,english,,0,0,0,,And one more?
Dialogue: 0,1:32:52.17,1:32:52.90,chinese,,0,0,0,,还有一个？
Dialogue: 0,1:32:52.90,1:32:53.99,english,,0,0,0,,Detecting a key press too.
Dialogue: 0,1:32:52.90,1:32:53.99,chinese,,0,0,0,,还有检测按键。
Dialogue: 0,1:32:53.99,1:32:58.18,english,,0,0,0,,Like in Scratch, just waiting for some kind of event to happen, just like on a phone or a browser.
Dialogue: 0,1:32:53.99,1:32:58.18,chinese,,0,0,0,,就像在 Scratch 中一样，只是在等待什么事件的发生，就像在手机或浏览器上一样。
Dialogue: 0,1:32:58.18,1:33:04.52,english,,0,0,0,,And so there's so many examples where you might want to do something forever-- just so you've seen the corresponding C building block.
Dialogue: 0,1:32:58.18,1:33:04.52,chinese,,0,0,0,,因此，有很多情况下，你可能想要永远执行某些操作。\N你已经了解到了对应的 C 语言写法。
Dialogue: 0,1:33:04.52,1:33:14.95,english,,0,0,0,,It's a little weird, but this is probably the most canonical way to do it in C. If you want to print meow forever-- which would be a little crazy because it would literally print and take over
Dialogue: 0,1:33:04.52,1:33:14.95,chinese,,0,0,0,,虽然有点奇怪，但这可能是 C 语言中最标准的方式。如果你想要永远打印 meow，\N虽然这会有点疯狂，因为它会不停地打印并占用你的计算机。
Dialogue: 0,1:33:14.95,1:33:18.85,english,,0,0,0,,your computer printing forever meow-- you would generally do it like this.
Dialogue: 0,1:33:14.95,1:33:18.85,chinese,,0,0,0,,通常会这么写。
Dialogue: 0,1:33:18.85,1:33:19.49,english,,0,0,0,,Why?
Dialogue: 0,1:33:19.49,1:33:26.02,english,,0,0,0,,Well, a while loop expects in parentheses a Boolean expression, and a Boolean expression is, again, a yes/no, a true/false question.
Dialogue: 0,1:33:19.49,1:33:26.02,chinese,,0,0,0,,while 循环在括号中需要一个布尔表达式，而布尔表达式是一个是/否、真/假的问题。
Dialogue: 0,1:33:26.02,1:33:35.95,english,,0,0,0,,But if you want the answer to that question always to be yes-- or really, always to be true, turns out in C and a lot of languages will then just say true because true--
Dialogue: 0,1:33:26.02,1:33:35.95,chinese,,0,0,0,,但如果你想要这个问题的答案永远 "真"，\N那么在C语言和许多其他编程语言中，你可以直接使用 true，
Dialogue: 0,1:33:35.95,1:33:38.80,english,,0,0,0,,T-R-U-E-- is never going to change magically to false.
Dialogue: 0,1:33:35.95,1:33:38.80,chinese,,0,0,0,,因为 true 是不会神奇地变为 false 的。
Dialogue: 0,1:33:38.80,1:33:41.57,english,,0,0,0,,I mean, it's just a special word in the programming language.
Dialogue: 0,1:33:38.80,1:33:41.57,chinese,,0,0,0,,就是说，它只是编程语言中的一个特殊词。
Dialogue: 0,1:33:41.57,1:33:45.68,english,,0,0,0,,So by saying while true, it just means do the following forever.
Dialogue: 0,1:33:41.57,1:33:45.68,chinese,,0,0,0,,因此，写 while true，意思就是永远执行以下操作。
Dialogue: 0,1:33:45.68,1:33:54.22,english,,0,0,0,,Another common paradigm before true and false became commonplace would be to do this instead-- change while 1.
Dialogue: 0,1:33:45.68,1:33:54.22,chinese,,0,0,0,,在 true 和 false 变得普遍使用之前，另一种常见的模式是使用 while 1。
Dialogue: 0,1:33:54.22,1:33:59.77,english,,0,0,0,,You might see in online examples and texts and the like, while 1 is really the same thing.
Dialogue: 0,1:33:54.22,1:33:59.77,chinese,,0,0,0,,在在线示例、文本里面，你可能会看到 while 1 其实效果一样的。
Dialogue: 0,1:33:59.77,1:34:04.84,english,,0,0,0,,Any value that is 0 is generally interpreted as false by a computer.
Dialogue: 0,1:33:59.77,1:34:04.84,chinese,,0,0,0,,计算机通常会将任何 0 值解释为假。
Dialogue: 0,1:34:04.84,1:34:11.21,english,,0,0,0,,Any value that is 1 or any other non-zero value is generally interpreted as true.
Dialogue: 0,1:34:04.84,1:34:11.21,chinese,,0,0,0,,任何值为 1 或任何其他非零值通常都被解释为 "真"。
Dialogue: 0,1:34:11.21,1:34:15.40,english,,0,0,0,,And so this, too, would have the same effect, saying while true or while 1.
Dialogue: 0,1:34:11.21,1:34:15.40,chinese,,0,0,0,,因此，while true 和 while 1 会产生相同的效果。
Dialogue: 0,1:34:15.40,1:34:18.70,english,,0,0,0,,Generally speaking, while true is perhaps a little clearer these days.
Dialogue: 0,1:34:15.40,1:34:18.70,chinese,,0,0,0,,一般来说，while true 看着清楚点。
Dialogue: 0,1:34:18.70,1:34:20.65,english,,0,0,0,,Now, meowing forever is not a good thing.
Dialogue: 0,1:34:18.70,1:34:20.65,chinese,,0,0,0,,现在，永远 mewow 可不是什么好事。
Dialogue: 0,1:34:20.65,1:34:23.77,english,,0,0,0,,But suppose I did that by intent or by accident.
Dialogue: 0,1:34:20.65,1:34:23.77,chinese,,0,0,0,,但要是我有意为之呢。
Dialogue: 0,1:34:23.77,1:34:24.95,english,,0,0,0,,Well, let's try this.
Dialogue: 0,1:34:23.77,1:34:24.95,chinese,,0,0,0,,好来试一下。
Dialogue: 0,1:34:24.95,1:34:26.57,english,,0,0,0,,So here I'll go into my code.
Dialogue: 0,1:34:24.95,1:34:26.57,chinese,,0,0,0,,现在要来看代码。
Dialogue: 0,1:34:26.57,1:34:32.18,english,,0,0,0,,I'm going to get rid of for loop and change my while loop to, how about, true.
Dialogue: 0,1:34:26.57,1:34:32.18,chinese,,0,0,0,,去掉 for 循环，改成 while true。
Dialogue: 0,1:34:32.18,1:34:36.10,english,,0,0,0,,And in this case here, well, we'll keep it-- let's do this.
Dialogue: 0,1:34:32.18,1:34:36.10,chinese,,0,0,0,,把里面这句留着。
Dialogue: 0,1:34:36.10,1:34:38.23,english,,0,0,0,,Make meow, Enter.
Dialogue: 0,1:34:36.10,1:34:38.23,chinese,,0,0,0,,走流程。
Dialogue: 0,1:34:38.23,1:34:41.84,english,,0,0,0,,And you'll see this, use of undeclared identifier true.
Dialogue: 0,1:34:38.23,1:34:41.84,chinese,,0,0,0,,你会看到这个报错，使用了未声明的标识符 true。
Dialogue: 0,1:34:41.84,1:34:46.36,english,,0,0,0,,This is actually hinting at my mention that the old way was 0 and 1.
Dialogue: 0,1:34:41.84,1:34:46.36,chinese,,0,0,0,,我刚才提到一种旧方法是用 0 1 代表 false true，其实就在暗示了。
Dialogue: 0,1:34:46.36,1:34:48.22,english,,0,0,0,,Nowadays, you could say true or false.
Dialogue: 0,1:34:46.36,1:34:48.22,chinese,,0,0,0,,现在我们想说 true 或者 false。
Dialogue: 0,1:34:48.22,1:34:53.56,english,,0,0,0,,But true and false are themselves special words that you have to include.
Dialogue: 0,1:34:48.22,1:34:53.56,chinese,,0,0,0,,但是，true 和 false 本身就是必须 include 引入的特殊词。
Dialogue: 0,1:34:53.56,1:35:03.64,english,,0,0,0,,And it turns out, if you want to use special Boolean values like this, there's another header file we haven't seen called stdbool that essentially creates true and false as keywords.
Dialogue: 0,1:34:53.56,1:35:03.64,chinese,,0,0,0,,这个例子证明了，如果你想这么用，得 include 一个我们没有见过的头文件，\N叫 stdbool，在里面把 true 和 false 创建成了关键字。
Dialogue: 0,1:35:03.64,1:35:06.55,english,,0,0,0,,Alternatively, CS50 includes that same file.
Dialogue: 0,1:35:03.64,1:35:06.55,chinese,,0,0,0,,另外，CS50 已经 include 这个库了。
Dialogue: 0,1:35:06.55,1:35:08.98,english,,0,0,0,,So it's more common in CS50 is to see it like this.
Dialogue: 0,1:35:06.55,1:35:08.98,chinese,,0,0,0,,因此，在 CS50 课程中更常见的情况是这样的。
Dialogue: 0,1:35:08.98,1:35:13.36,english,,0,0,0,,Now if I clear my terminal window and do make meow and then ./meow and hit
Dialogue: 0,1:35:08.98,1:35:13.36,chinese,,0,0,0,,现在，我走个流程。
Dialogue: 0,1:35:13.36,1:35:21.35,english,,0,0,0,,Enter, well, unfortunately, this isn't the best thing to do infinitely when you're in the cloud using a browser.
Dialogue: 0,1:35:13.36,1:35:21.35,chinese,,0,0,0,,好吧，不幸的是，当你在浏览器使用云端环境时，这不是什么好事。
Dialogue: 0,1:35:21.35,1:35:24.97,english,,0,0,0,,This is indeed a browser, just full-screened here.
Dialogue: 0,1:35:21.35,1:35:24.97,chinese,,0,0,0,,这确实是一个浏览器，只是在这里全屏显示了。
Dialogue: 0,1:35:24.97,1:35:29.46,english,,0,0,0,,This means I'm sending millions of meows over the internet to my computer here.
Dialogue: 0,1:35:24.97,1:35:29.46,chinese,,0,0,0,,这意味着通过互联网，我向自己电脑发送了数百万声 meow。
Dialogue: 0,1:35:29.46,1:35:32.17,english,,0,0,0,,So this will happen to you at some point, probably not with meow.
Dialogue: 0,1:35:29.46,1:35:32.17,chinese,,0,0,0,,所以，这种情况你也可能遇到，虽然不一定是 meow。
Dialogue: 0,1:35:32.17,1:35:34.15,english,,0,0,0,,But you'll lose control over your terminal window.
Dialogue: 0,1:35:32.17,1:35:34.15,chinese,,0,0,0,,但一旦这样，你就失去了对终端窗口的控制。
Dialogue: 0,1:35:34.15,1:35:34.42,english,,0,0,0,,Why?
Dialogue: 0,1:35:34.42,1:35:35.17,english,,0,0,0,,Because you screwed up.
Dialogue: 0,1:35:34.42,1:35:35.17,chinese,,0,0,0,,因为被你玩坏了。
Dialogue: 0,1:35:35.17,1:35:36.25,english,,0,0,0,,And you have an infinite loop.
Dialogue: 0,1:35:35.17,1:35:36.25,chinese,,0,0,0,,这就是一个无限循环。
Dialogue: 0,1:35:36.25,1:35:37.09,english,,0,0,0,,You didn't really intend it.
Dialogue: 0,1:35:36.25,1:35:37.09,chinese,,0,0,0,,不管你是故意的，
Dialogue: 0,1:35:37.09,1:35:37.69,english,,0,0,0,,Or maybe you did.
Dialogue: 0,1:35:37.09,1:35:37.69,chinese,,0,0,0,,或者无意之中的。
Dialogue: 0,1:35:37.69,1:35:39.23,english,,0,0,0,,You were curious to see what happens.
Dialogue: 0,1:35:37.69,1:35:39.23,chinese,,0,0,0,,你很好奇会发生什么。
Dialogue: 0,1:35:39.23,1:35:41.59,english,,0,0,0,,What do you do?
Dialogue: 0,1:35:39.23,1:35:41.59,chinese,,0,0,0,,你现在要怎么办？
Dialogue: 0,1:35:41.59,1:35:43.93,english,,0,0,0,,When does the meowing stop?
Dialogue: 0,1:35:41.59,1:35:43.93,chinese,,0,0,0,,怎么停止它在这里 meow？
Dialogue: 0,1:35:43.93,1:35:45.91,english,,0,0,0,,What recourse do we have here?
Dialogue: 0,1:35:43.93,1:35:45.91,chinese,,0,0,0,,我们有什么办法？
Dialogue: 0,1:35:45.91,1:35:48.55,english,,0,0,0,,Well, Control-C will be your friend.
Dialogue: 0,1:35:45.91,1:35:48.55,chinese,,0,0,0,,那么，ctrl+c 会帮你。
Dialogue: 0,1:35:48.55,1:35:51.07,english,,0,0,0,,Sometimes you have to hit it a bunch in a cloud environment.
Dialogue: 0,1:35:48.55,1:35:51.07,chinese,,0,0,0,,有时，用云环境的话，你得多按几次。
Dialogue: 0,1:35:51.07,1:35:55.54,english,,0,0,0,,But Control-C for cancel will interrupt a program that's running.
Dialogue: 0,1:35:51.07,1:35:55.54,chinese,,0,0,0,,ctrl+c 的 c 指 cancel，这个快捷键会中断正在运行的程序。
Dialogue: 0,1:35:51.07,1:35:55.54,annotation,,0,0,0,,*注：可能你更熟悉 ctrl+c 是复制的快捷键，但在终端中一般就是用来中断的，复制可能是 ctrl+shift+c。
Dialogue: 0,1:35:55.54,1:36:02.56,english,,0,0,0,,And I promise that almost all of you will at some point accidentally introduce an infinite loop because your math is slightly off.
Dialogue: 0,1:35:55.54,1:36:02.56,chinese,,0,0,0,,我敢说，几乎所有人都会有不小心引入一个无限循环的经历，总有时候你的想法偏差了。
Dialogue: 0,1:36:02.56,1:36:09.54,english,,0,0,0,,When in doubt, click in the terminal window and hit Control-C-- sometimes multiple times-- and that will indeed cancel whatever is happening there.
Dialogue: 0,1:36:02.56,1:36:09.54,chinese,,0,0,0,,有问题的时候，点击终端窗口并按下 ctrl+c 键，\N有时得多按几次，这样就能取消正在跑的程序。
Dialogue: 0,1:36:09.54,1:36:11.17,english,,0,0,0,,In this case, I might have intended it.
Dialogue: 0,1:36:09.54,1:36:11.17,chinese,,0,0,0,,刚才的例子里，我可能是故意的。
Dialogue: 0,1:36:11.17,1:36:14.33,english,,0,0,0,,But sometimes it's not, in fact, intended.
Dialogue: 0,1:36:11.17,1:36:14.33,chinese,,0,0,0,,不过有时候是不小心的。
Dialogue: 0,1:36:14.33,1:36:23.89,english,,0,0,0,,All right, so we've been taking for granted this whole graphical user interface for some time and, indeed, the commands that I'm typing and the buttons on I'm clicking.
Dialogue: 0,1:36:14.33,1:36:23.89,chinese,,0,0,0,,好的，我们一直以来都在用这个 GUI，我有键入命令，也有点击按钮。
Dialogue: 0,1:36:23.89,1:36:31.63,english,,0,0,0,,And let me just give you a better sense of what it is we are using underneath the hood this whole time, namely an operating system called Linux.
Dialogue: 0,1:36:23.89,1:36:31.63,chinese,,0,0,0,,让我更好地介绍一下，在这整个过程中我们所使用的东西，名为 Linux 的操作系统。
Dialogue: 0,1:36:31.63,1:36:38.68,english,,0,0,0,,So I keep alluding verbally, of course, to Macs and PCs because almost all of us are running macOS or Windows on our desktops or laptops nowadays.
Dialogue: 0,1:36:31.63,1:36:38.68,chinese,,0,0,0,,其实我一直在口头上提到 Mac 和 PC，\N因为现在几乎所有人都在桌面或笔记本电脑上运行 macOS 或 Windows。
Dialogue: 0,1:36:38.68,1:36:43.33,english,,0,0,0,,But there's lots of other operating systems out there, and one of the most popular one is called Linux.
Dialogue: 0,1:36:38.68,1:36:43.33,chinese,,0,0,0,,但实际上有很多别的操作系统，其中最流行就是 Linux。
Dialogue: 0,1:36:43.33,1:36:51.61,english,,0,0,0,,And Linux is very often used on servers nowadays-- companies that host email, companies that host websites or apps, more generally.
Dialogue: 0,1:36:43.33,1:36:51.61,chinese,,0,0,0,,Linux 现在通常用于服务器上，例如托管电子邮件的公司，托管网站或应用程序的公司。
Dialogue: 0,1:36:51.61,1:36:56.95,english,,0,0,0,,Certain computer scientists or computer science students often like to brag that they run Linux just because that's a thing.
Dialogue: 0,1:36:51.61,1:36:56.95,chinese,,0,0,0,,一些计算机科学家还有计算机科学的学生，\N常常喜欢吹嘘他们使用 Linux，因为这是一种风潮。
Dialogue: 0,1:36:56.95,1:37:07.48,english,,0,0,0,,But it is really just an alternative to macOS or Windows that provides you with both a GUI, if you want it, but also an especially a command line environment.
Dialogue: 0,1:36:56.95,1:37:07.48,chinese,,0,0,0,,但实际上它只是 macOS 或 Windows 的一个替代选择，\N不仅提供了 GUI，更重要的是它有完善的命令行环境。
Dialogue: 0,1:37:07.48,1:37:12.55,english,,0,0,0,,Now, fun fact-- Windows and macOS do have terminal windows or the equivalent thereof.
Dialogue: 0,1:37:07.48,1:37:12.55,chinese,,0,0,0,,有趣的是，Windows 和 macOS 也有终端窗口或等效的功能。
Dialogue: 0,1:37:12.55,1:37:16.15,english,,0,0,0,,And eventually, you might use it on your own Mac or PC to solve some problem.
Dialogue: 0,1:37:12.55,1:37:16.15,chinese,,0,0,0,,最终，你们可能会在自己的 Mac 或 PC 上使用终端来解决一些问题。
Dialogue: 0,1:37:16.15,1:37:26.50,english,,0,0,0,,But Linux is really known for, along with other operating systems, its command line environment, which, again, I distinguished earlier from GUI as a Command Line Interface, or CLI.
Dialogue: 0,1:37:16.15,1:37:26.50,chinese,,0,0,0,,不过，Linux 以其命令行环境而著称，区别于其他操作系统，\N我在前面倒是已经区分过 GUI（用户图形界面）和 CLI（命令行界面）了。
Dialogue: 0,1:37:26.50,1:37:29.45,english,,0,0,0,,And that refers, really, to the terminal window.
Dialogue: 0,1:37:26.50,1:37:29.45,chinese,,0,0,0,,这其实指的是终端窗口。
Dialogue: 0,1:37:29.45,1:37:39.64,english,,0,0,0,,So if I go back to VS Code here, and let me, in fact, go ahead and close my tab and focus entirely on the terminal window, this terminal window is really just your command line interface
Dialogue: 0,1:37:29.45,1:37:39.64,chinese,,0,0,0,,因此，如果我回到 VS Code，关掉所有标签页，\N将注意力完全集中在终端窗口上，这个终端窗口实际上就是
Dialogue: 0,1:37:39.64,1:37:42.39,english,,0,0,0,,to your very own server in the cloud.
Dialogue: 0,1:37:39.64,1:37:42.39,chinese,,0,0,0,,连接到云服务器上的命令行界面。
Dialogue: 0,1:37:42.39,1:37:51.43,english,,0,0,0,,The term of art here is you each will have your own container in the cloud, which is like your own computer running somewhere on the internet with your own username and password
Dialogue: 0,1:37:42.39,1:37:51.43,chinese,,0,0,0,,用专业术语来阐述，你们每个人都将在云中拥有自己的容器，\N就跟你们自己电脑一样，运行在互联网一角，有着自己的用户名和密码。
Dialogue: 0,1:37:51.43,1:37:57.43,english,,0,0,0,,to which you have access and your own hard drive, if you will, your own home folder that has all of your files for the class.
Dialogue: 0,1:37:51.43,1:37:57.43,chinese,,0,0,0,,登录后，就是属于你的硬盘，你自己的家庭文件夹，课堂上的所有文件什么的。
Dialogue: 0,1:37:57.43,1:38:01.39,english,,0,0,0,,And it's only accessible to you unless you enable live sharing thereof.
Dialogue: 0,1:37:57.43,1:38:01.39,chinese,,0,0,0,,除非启用了实时共享，否则只有你自己有权限访问。
Dialogue: 0,1:38:01.39,1:38:06.40,english,,0,0,0,,So when you're typing commands here, it looks like you're typing them, of course, on your own Mac or PC.
Dialogue: 0,1:38:01.39,1:38:06.40,chinese,,0,0,0,,因此，当你在这里输入命令的时候，看起来就跟在自己的 Mac 或 PC 上输入一样。
Dialogue: 0,1:38:06.40,1:38:15.83,english,,0,0,0,,But they're actually being sent over the browser to some server in the cloud where you are controlling, really, your own account therein.
Dialogue: 0,1:38:06.40,1:38:15.83,chinese,,0,0,0,,但实际上，这些命令通过浏览器发送到了云端的某个服务器，控制的是那儿的属于你的账户。
Dialogue: 0,1:38:15.83,1:38:19.39,english,,0,0,0,,So it turns out that there are other commands that are worth knowing.
Dialogue: 0,1:38:15.83,1:38:19.39,chinese,,0,0,0,,还有很多别的值得了解一下的命令。
Dialogue: 0,1:38:19.39,1:38:21.29,english,,0,0,0,,And we'll give you just a few of these today.
Dialogue: 0,1:38:19.39,1:38:21.29,chinese,,0,0,0,,今天我们就给大家再介绍一些。
Dialogue: 0,1:38:21.29,1:38:24.71,english,,0,0,0,,And over the coming weeks will you have opportunities to play with others as well.
Dialogue: 0,1:38:21.29,1:38:24.71,chinese,,0,0,0,,接下来的几周里，你们会有机会亲自试试的。
Dialogue: 0,1:38:24.71,1:38:26.26,english,,0,0,0,,But these are some of the basics.
Dialogue: 0,1:38:24.71,1:38:26.26,chinese,,0,0,0,,其实这些都是点基础知识。
Dialogue: 0,1:38:26.26,1:38:33.64,english,,0,0,0,,And they're all incredibly succinct because, indeed, for things you're typing at the command line, humans generally have not wanted to type out long commands.
Dialogue: 0,1:38:26.26,1:38:33.64,chinese,,0,0,0,,它们都非常简洁，因为对于命令行中键入的内容，我们都没心思输入很长。
Dialogue: 0,1:38:33.64,1:38:35.89,english,,0,0,0,,So a lot of these are abbreviations here.
Dialogue: 0,1:38:33.64,1:38:35.89,chinese,,0,0,0,,因此这里很多都是缩写。
Dialogue: 0,1:38:35.89,1:38:44.48,english,,0,0,0,,Now, perhaps the most common one I'll start with first is ls, a lowercase l and a lowercase s that stands for, succinctly, list.
Dialogue: 0,1:38:35.89,1:38:44.48,chinese,,0,0,0,,首先介绍的是最常见的 ls，一个小写的 l 和一个小写的 s，简明扼要地代表 list。
Dialogue: 0,1:38:44.48,1:38:47.38,english,,0,0,0,,So if I go to my terminal window now where up until now,
Dialogue: 0,1:38:44.48,1:38:47.38,chinese,,0,0,0,,所以如果我现在进入终端窗口，
Dialogue: 0,1:38:47.38,1:38:56.11,english,,0,0,0,,I've only typed code, which is a VS Code thing for creating an opening files, and make, which triggers the compilation of my code, what if I now type ls?
Dialogue: 0,1:38:47.38,1:38:56.11,chinese,,0,0,0,,在这之前，我只输入了 code 命令，这是用 VS Code 创建和打开文件，\N以及使用 make 进行代码编译，现在如果我输入 ls 呢？
Dialogue: 0,1:38:56.11,1:39:02.00,english,,0,0,0,,This will list all of the files in my current folder-- my hard drive in the cloud, if you will.
Dialogue: 0,1:38:56.11,1:39:02.00,chinese,,0,0,0,,这会列出我当前文件夹中的所有文件，相当于云中的硬盘文件。
Dialogue: 0,1:39:02.00,1:39:05.78,english,,0,0,0,,So if I hit Enter, you'll see a whole bunch of results.
Dialogue: 0,1:39:02.00,1:39:05.78,chinese,,0,0,0,,如果我按下回车键，你会看到一大堆结果。
Dialogue: 0,1:39:05.78,1:39:07.24,english,,0,0,0,,Now, they're color coded too.
Dialogue: 0,1:39:05.78,1:39:07.24,chinese,,0,0,0,,这些文件也有彩色标记。
Dialogue: 0,1:39:07.24,1:39:09.91,english,,0,0,0,,The white ones here end in .c.
Dialogue: 0,1:39:07.24,1:39:09.91,chinese,,0,0,0,,这里 .c 结尾的文件是白色。
Dialogue: 0,1:39:09.91,1:39:15.79,english,,0,0,0,,Those are the source code files I've written during class today-- agree.c, compare.c, hello.c, and meow.c.
Dialogue: 0,1:39:09.91,1:39:15.79,chinese,,0,0,0,,就是我今天课上写的源代码文件，比如 agree.c、compare.c、hello.c 和 meow.c。
Dialogue: 0,1:39:15.79,1:39:24.38,english,,0,0,0,,And you can perhaps guess, the green ones here that just by convention have an asterisk on the end to denote that they're special represent what?
Dialogue: 0,1:39:15.79,1:39:24.38,chinese,,0,0,0,,你们来猜一下这里的绿色文件，它们的末尾都有一个星号，表示它们是特殊文件，代表什么呢？
Dialogue: 0,1:39:24.38,1:39:25.34,english,,0,0,0,,One of the four others.
Dialogue: 0,1:39:24.38,1:39:25.34,chinese,,0,0,0,,那位同学请讲？
Dialogue: 0,1:39:25.34,1:39:26.31,english,,0,0,0,,Yeah?
Dialogue: 0,1:39:26.31,1:39:27.80,english,,0,0,0,,AUDIENCE: The machine code?
Dialogue: 0,1:39:26.31,1:39:27.80,chinese,,0,0,0,,观众：机器码？
Dialogue: 0,1:39:27.80,1:39:29.52,english,,0,0,0,,DAVID J. MALAN: Yeah, the machine code.
Dialogue: 0,1:39:27.80,1:39:29.52,chinese,,0,0,0,,没错，就是机器码。
Dialogue: 0,1:39:29.52,1:39:34.34,english,,0,0,0,,So those are my actual programs that are identically named minus the .c extension.
Dialogue: 0,1:39:29.52,1:39:34.34,chinese,,0,0,0,,因此，这些都是实际的程序，除去 .c 扩展名，它们的名称完全相同。
Dialogue: 0,1:39:34.34,1:39:36.83,english,,0,0,0,,And the asterisk means that they're executable.
Dialogue: 0,1:39:34.34,1:39:36.83,chinese,,0,0,0,,星号表示它们是可执行文件。
Dialogue: 0,1:39:36.83,1:39:39.58,english,,0,0,0,,That is in the world of macOS or Windows, you would double click.
Dialogue: 0,1:39:36.83,1:39:39.58,chinese,,0,0,0,,在 macOS 或 Windows 的世界里，你可以双击运行。
Dialogue: 0,1:39:39.58,1:39:47.40,english,,0,0,0,,But in the world of a command line environment, that means you do ./ and then the name without the asterisk to execute or run the code therein.
Dialogue: 0,1:39:39.58,1:39:47.40,chinese,,0,0,0,,但在命令行环境中，这意味着你要输入 ./ ，\N再输入不带星号的名称，以执行其中的代码。
Dialogue: 0,1:39:47.40,1:39:54.99,english,,0,0,0,,So if I open up my File Explorer-- and I'm hitting Command-B on my computer here just as a keyboard shortcut-- you'll see the exact same thing.
Dialogue: 0,1:39:47.40,1:39:54.99,chinese,,0,0,0,,所以，如果我打开我的文件浏览器，快捷键是 ctrl/command+b，就会看到完全相同的内容。
Dialogue: 0,1:39:54.99,1:39:59.21,english,,0,0,0,,So ls is the command line interface for listing the files in your account.
Dialogue: 0,1:39:54.99,1:39:59.21,chinese,,0,0,0,,因此，ls 是命令行界面里用来列出账户中文件的命令。
Dialogue: 0,1:39:59.21,1:40:03.06,english,,0,0,0,,But here, because I'm using VS Code or any program like it,
Dialogue: 0,1:39:59.21,1:40:03.06,chinese,,0,0,0,,在这里，因为我正在使用 VS Code 或类似的程序，
Dialogue: 0,1:40:03.06,1:40:06.21,english,,0,0,0,,I also get a graphical user interface as well.
Dialogue: 0,1:40:03.06,1:40:06.21,chinese,,0,0,0,,我也得到了一个图形用户界面。
Dialogue: 0,1:40:06.21,1:40:07.88,english,,0,0,0,,So it's just two different places to be.
Dialogue: 0,1:40:06.21,1:40:07.88,chinese,,0,0,0,,所以这两种方式在不同的地方操作。
Dialogue: 0,1:40:07.88,1:40:09.68,english,,0,0,0,,You're welcome to use whatever you're comfortable with.
Dialogue: 0,1:40:07.88,1:40:09.68,chinese,,0,0,0,,你可以用自己更舒服的一种。
Dialogue: 0,1:40:09.68,1:40:14.72,english,,0,0,0,,But over time will you naturally get more comfortable and capable with the terminal window alone.
Dialogue: 0,1:40:09.68,1:40:14.72,chinese,,0,0,0,,随着时间的推移，你会逐渐对终端窗口感到更加自在和熟悉。
Dialogue: 0,1:40:14.72,1:40:16.77,english,,0,0,0,,Well, what else is on this list here?
Dialogue: 0,1:40:14.72,1:40:16.77,chinese,,0,0,0,,那么，这个 list 上还有些什么东西呢？
Dialogue: 0,1:40:16.77,1:40:23.33,english,,0,0,0,,Well, during the break, I saw that in at least one of you, for instance, had created a file called hello instead of hello.c.
Dialogue: 0,1:40:16.77,1:40:23.33,chinese,,0,0,0,,在休息时间里，我看到你们中的至少一个人创建了一个名为 hello 而不是 hello.c 的文件。
Dialogue: 0,1:40:23.33,1:40:27.23,english,,0,0,0,,So you were in a situation where you did this accidentally and hit Enter.
Dialogue: 0,1:40:23.33,1:40:27.23,chinese,,0,0,0,,所以你不小心这样做了，并按下了回车键。
Dialogue: 0,1:40:27.23,1:40:30.42,english,,0,0,0,,And then you went ahead and typed in all of your code like this.
Dialogue: 0,1:40:27.23,1:40:30.42,chinese,,0,0,0,,然后，你像这样输入所有代码。
Dialogue: 0,1:40:30.42,1:40:34.76,english,,0,0,0,,And then down in your terminal window, you were trying to do make hello, Enter.
Dialogue: 0,1:40:30.42,1:40:34.76,chinese,,0,0,0,,然后在终端窗口里，你试图输入 make hello，回车。
Dialogue: 0,1:40:34.76,1:40:38.96,english,,0,0,0,,And this now didn't actually do anything.
Dialogue: 0,1:40:34.76,1:40:38.96,chinese,,0,0,0,,然而，这实际上啥也没做。
Dialogue: 0,1:40:38.96,1:40:40.82,english,,0,0,0,,I can't-- I'm hitting--
Dialogue: 0,1:40:38.96,1:40:40.82,chinese,,0,0,0,,这不行的，按下回车。
Dialogue: 0,1:40:40.82,1:40:42.38,english,,0,0,0,,I'm trying to run the command.
Dialogue: 0,1:40:40.82,1:40:42.38,chinese,,0,0,0,,尝试运行命令。
Dialogue: 0,1:40:42.38,1:40:44.69,english,,0,0,0,,I got permission denied, as at least one of you did.
Dialogue: 0,1:40:42.38,1:40:44.69,chinese,,0,0,0,,得到了一个 "权限被拒绝"，你们有人遇到过了。
Dialogue: 0,1:40:44.69,1:40:45.43,english,,0,0,0,,Now, why is that?
Dialogue: 0,1:40:44.69,1:40:45.43,chinese,,0,0,0,,这是为什么呢？
Dialogue: 0,1:40:45.43,1:40:46.85,english,,0,0,0,,Well, let's just do a quick check.
Dialogue: 0,1:40:45.43,1:40:46.85,chinese,,0,0,0,,好吧，快速检查一下。
Dialogue: 0,1:40:46.85,1:40:53.18,english,,0,0,0,,If I do ls, I see now hello, but hello has no asterisk next to it, which means it's not executable.
Dialogue: 0,1:40:46.85,1:40:53.18,chinese,,0,0,0,,如果我执行 ls 命令，就会看到 hello，但 hello 旁边没有星号，就是说它不可执行。
Dialogue: 0,1:40:53.18,1:40:53.93,english,,0,0,0,,That's my code.
Dialogue: 0,1:40:53.18,1:40:53.93,chinese,,0,0,0,,这就是我的源代码。
Dialogue: 0,1:40:53.93,1:40:54.47,english,,0,0,0,,Why?
Dialogue: 0,1:40:54.47,1:40:57.54,english,,0,0,0,,Well, notice the top of my tab confirms, oh, I screwed up.
Dialogue: 0,1:40:54.47,1:40:57.54,chinese,,0,0,0,,看这个标签的名字可以知道，哦，我弄错了。
Dialogue: 0,1:40:57.54,1:41:00.74,english,,0,0,0,,I didn't name my file hello.c, which it just has to be.
Dialogue: 0,1:40:57.54,1:41:00.74,chinese,,0,0,0,,我没有给我的文件取名为 hello.c，而且这是必须的。
Dialogue: 0,1:41:00.74,1:41:01.92,english,,0,0,0,,So what do you do?
Dialogue: 0,1:41:00.74,1:41:01.92,chinese,,0,0,0,,那你该怎么办？
Dialogue: 0,1:41:01.92,1:41:05.81,english,,0,0,0,,Well, you could very hackishly copy this, create a new file, paste it in.
Dialogue: 0,1:41:01.92,1:41:05.81,chinese,,0,0,0,,好吧，你可以非常黑客地复制这个，创建一个新文件粘贴进去。
Dialogue: 0,1:41:05.81,1:41:06.77,english,,0,0,0,,Or no, no, no.
Dialogue: 0,1:41:05.81,1:41:06.77,chinese,,0,0,0,,别别别。
Dialogue: 0,1:41:06.77,1:41:09.89,english,,0,0,0,,We know how to rename things now here because that's one of our options.
Dialogue: 0,1:41:06.77,1:41:09.89,chinese,,0,0,0,,我们现在知道怎么重命名了，多了一种方法。
Dialogue: 0,1:41:09.89,1:41:11.10,english,,0,0,0,,Let me do this.
Dialogue: 0,1:41:09.89,1:41:11.10,chinese,,0,0,0,,看我演示。
Dialogue: 0,1:41:11.10,1:41:17.60,english,,0,0,0,,Let me do mv for move, hello, and then hello.c, and hit Enter.
Dialogue: 0,1:41:11.10,1:41:17.60,chinese,,0,0,0,,用 move 命令，mv hello hello.c，敲回车。
Dialogue: 0,1:41:17.60,1:41:20.25,english,,0,0,0,,You'll see the tab closes because hello no longer exists.
Dialogue: 0,1:41:17.60,1:41:20.25,chinese,,0,0,0,,你会看到标签页没了，因为 hello 已不存在。
Dialogue: 0,1:41:20.25,1:41:25.13,english,,0,0,0,,But if I now type ls, you'll see, ah, there is hello.c.
Dialogue: 0,1:41:20.25,1:41:25.13,chinese,,0,0,0,,但如果我现在键入 ls，你会看到，啊，有 hello.c。
Dialogue: 0,1:41:25.13,1:41:28.91,english,,0,0,0,,And if I open that file now, whew, there's all of my same code.
Dialogue: 0,1:41:25.13,1:41:28.91,chinese,,0,0,0,,如果我现在打开这个文件，啊，里面就是刚才的代码。
Dialogue: 0,1:41:28.91,1:41:37.35,english,,0,0,0,,And now if I do make hello-- make hello-- now I do get an executable file where in the world is restored.
Dialogue: 0,1:41:28.91,1:41:37.35,chinese,,0,0,0,,现在，如果 make hello，我就能得到一个可执行文件，这个文件恢复了先前的模样。
Dialogue: 0,1:41:37.35,1:41:43.02,english,,0,0,0,,So mv, it's just a command not just for renaming, but it also turns out, eventually for moving files as well.
Dialogue: 0,1:41:37.35,1:41:43.02,chinese,,0,0,0,,还有，mv 不仅是一个重命名命令，其实还能用来移动文件。
Dialogue: 0,1:41:43.02,1:41:45.23,english,,0,0,0,,You can also create directories or folders.
Dialogue: 0,1:41:43.02,1:41:45.23,chinese,,0,0,0,,创建目录或文件夹也很常用。
Dialogue: 0,1:41:45.23,1:41:48.95,english,,0,0,0,,So for instance, if I go into VS Code again, and suppose
Dialogue: 0,1:41:45.23,1:41:48.95,chinese,,0,0,0,,VS Code，启动。
Dialogue: 0,1:41:48.95,1:41:52.76,english,,0,0,0,,I hover over here and click not on the plus file icon but plus folder,
Dialogue: 0,1:41:48.95,1:41:52.76,chinese,,0,0,0,,如果我把鼠标停在这里，点击的不是加号文件图标，而是加号文件夹，
Dialogue: 0,1:41:52.76,1:41:57.62,english,,0,0,0,,I can create a folder called, for instance, pset1 for problem set 1 in the class.
Dialogue: 0,1:41:52.76,1:41:57.62,chinese,,0,0,0,,举个例子，我可以创建一个叫做 pset1 的文件夹，用于课后的问题集 1。
Dialogue: 0,1:41:57.62,1:42:02.84,english,,0,0,0,,And you'll see now that it's empty because all of my other files are in the default folder of my account.
Dialogue: 0,1:41:57.62,1:42:02.84,chinese,,0,0,0,,现在你会发现它是空文件夹，因为别的文件都在账户的默认文件夹下面。
Dialogue: 0,1:42:02.84,1:42:05.46,english,,0,0,0,,But I could also go in there like this.
Dialogue: 0,1:42:02.84,1:42:05.46,chinese,,0,0,0,,我可以这么点进去。
Dialogue: 0,1:42:05.46,1:42:13.43,english,,0,0,0,,And I could click on File, and now I can create a new file called mario.c, which is one of the first problems, for instance.
Dialogue: 0,1:42:05.46,1:42:13.43,chinese,,0,0,0,,点这里新建文件，创建一个 mario.c 新文件，\N举个例子而已，其实是问题集 1 的题目。
Dialogue: 0,1:42:13.43,1:42:18.96,english,,0,0,0,,But you'll notice now that mario.c is inside of the pset1 folder.
Dialogue: 0,1:42:13.43,1:42:18.96,chinese,,0,0,0,,现在能看到，mario.c 在 pset1 文件夹里面。
Dialogue: 0,1:42:18.96,1:42:23.30,english,,0,0,0,,So if I zoom out and I type ls at my terminal window,
Dialogue: 0,1:42:18.96,1:42:23.30,chinese,,0,0,0,,那我要是放大，在终端窗口输入 ls，
Dialogue: 0,1:42:23.30,1:42:26.72,english,,0,0,0,,I won't see mario.c anywhere.
Dialogue: 0,1:42:23.30,1:42:26.72,chinese,,0,0,0,,我在任何地方都看不到 mario.c。
Dialogue: 0,1:42:26.72,1:42:28.68,english,,0,0,0,,But I do see a pset1 folder.
Dialogue: 0,1:42:26.72,1:42:28.68,chinese,,0,0,0,,但确实有 pset1 文件夹。
Dialogue: 0,1:42:28.68,1:42:31.73,english,,0,0,0,,And it's in light blue followed by a slash, which you don't have to type.
Dialogue: 0,1:42:28.68,1:42:31.73,chinese,,0,0,0,,它是浅蓝色，后面有一条斜线，用不着输入。
Dialogue: 0,1:42:31.73,1:42:33.30,english,,0,0,0,,It just indicates that's a folder.
Dialogue: 0,1:42:31.73,1:42:33.30,chinese,,0,0,0,,它只是表示这是一个文件夹。
Dialogue: 0,1:42:33.30,1:42:37.64,english,,0,0,0,,Now, I can visually at top left obviously see pset1 contains mario.c.
Dialogue: 0,1:42:33.30,1:42:37.64,chinese,,0,0,0,,在左上方可以清楚看到 pset1 下面有 mario.c。
Dialogue: 0,1:42:37.64,1:42:42.80,english,,0,0,0,,But if I try to do something like make mario here, no rule to make target mario.
Dialogue: 0,1:42:37.64,1:42:42.80,chinese,,0,0,0,,现在要是 make mario，会报错 "缺少制作目标 mario 的规则"。
Dialogue: 0,1:42:42.80,1:42:44.51,english,,0,0,0,,It just doesn't seem to exist.
Dialogue: 0,1:42:42.80,1:42:44.51,chinese,,0,0,0,,意思好像是说文件不存在。
Dialogue: 0,1:42:44.51,1:42:46.65,english,,0,0,0,,And that's because you're in the wrong directory.
Dialogue: 0,1:42:44.51,1:42:46.65,chinese,,0,0,0,,原因是进入了错误的目录。
Dialogue: 0,1:42:46.65,1:42:51.56,english,,0,0,0,,So in a command line interface, it's not quite as simple as just clicking on a folder, and voila, it opens.
Dialogue: 0,1:42:46.65,1:42:51.56,chinese,,0,0,0,,在命令行界面，并不是点点文件夹就能打开的。
Dialogue: 0,1:42:51.56,1:42:55.25,english,,0,0,0,,You have to change into the directory or folder.
Dialogue: 0,1:42:51.56,1:42:55.25,chinese,,0,0,0,,得更改目录或文件夹。
Dialogue: 0,1:42:55.25,1:42:57.66,english,,0,0,0,,And cd is going to be the command there.
Dialogue: 0,1:42:55.25,1:42:57.66,chinese,,0,0,0,,这里的命令是 cd。
Dialogue: 0,1:42:57.66,1:43:00.60,english,,0,0,0,,So if I want to actually change into that directory,
Dialogue: 0,1:42:57.66,1:43:00.60,chinese,,0,0,0,,因此，如果我想到那个目录里面，
Dialogue: 0,1:43:00.60,1:43:04.07,english,,0,0,0,,I can do cd, space, pset1, Enter.
Dialogue: 0,1:43:00.60,1:43:04.07,chinese,,0,0,0,,我就敲 cd pset1，按回车。
Dialogue: 0,1:43:04.07,1:43:05.96,english,,0,0,0,,And now you'll see my prompt changes.
Dialogue: 0,1:43:04.07,1:43:05.96,chinese,,0,0,0,,现在可以看到终端的提示变了。
Dialogue: 0,1:43:05.96,1:43:09.20,english,,0,0,0,,And this is just a common convention, but it's not the only one out there.
Dialogue: 0,1:43:05.96,1:43:09.20,chinese,,0,0,0,,这只是一个常见的惯例，但并不是唯一的惯例。
Dialogue: 0,1:43:09.20,1:43:12.47,english,,0,0,0,,Now I still have a dollar sign, which indicates where I can type commands.
Dialogue: 0,1:43:09.20,1:43:12.47,chinese,,0,0,0,,现在还能看到一个 $，表示我可以接着输入命令。
Dialogue: 0,1:43:12.47,1:43:16.52,english,,0,0,0,,But before it, I see a reminder constantly what folder I'm in.
Dialogue: 0,1:43:12.47,1:43:16.52,chinese,,0,0,0,,在符号前面，有个提示表明我在哪个文件夹里。
Dialogue: 0,1:43:16.52,1:43:26.12,english,,0,0,0,,And we put that there deliberately, like a lot of Linux users do just to remind themselves where they are because unlike macOS or Windows, where you have a nice, big window telling you where you are,
Dialogue: 0,1:43:16.52,1:43:26.12,chinese,,0,0,0,,我们特意放了那个目录做提示，就跟大多数 Linux 里一样，用来告诉自己所处的位置，\N因为跟 macOS 或 Windows 不一样，有个漂亮的 GUI 展示文件目录。
Dialogue: 0,1:43:26.12,1:43:29.00,english,,0,0,0,,at the command line, you need to be reminded textually.
Dialogue: 0,1:43:26.12,1:43:29.00,chinese,,0,0,0,,命令行里，需要通过文本提示来知道当前所处的目录。
Dialogue: 0,1:43:29.00,1:43:33.35,english,,0,0,0,,But now if I type ls and hit Enter, what should I see?
Dialogue: 0,1:43:29.00,1:43:33.35,chinese,,0,0,0,,现在要输入 ls 并按回车键，会看到什么？
Dialogue: 0,1:43:33.35,1:43:34.34,english,,0,0,0,,AUDIENCE: Mario.c
Dialogue: 0,1:43:33.35,1:43:34.34,chinese,,0,0,0,,观众：mario.c。
Dialogue: 0,1:43:34.34,1:43:36.17,english,,0,0,0,,DAVID J. MALAN: Yeah, mario.c.
Dialogue: 0,1:43:34.34,1:43:36.17,chinese,,0,0,0,,没错，mario.c。
Dialogue: 0,1:43:36.17,1:43:43.94,english,,0,0,0,,And now if I want to open it-- if I want to actually compile it, I can run make mario in this directory once I actually type out all of the code.
Dialogue: 0,1:43:36.17,1:43:43.94,chinese,,0,0,0,,现在，如果我想编译它，就把所有代码写好，在这个目录运行 make mario。
Dialogue: 0,1:43:43.94,1:43:50.81,english,,0,0,0,,Rest assured that in problem sets and labs, we'll almost always-- certainly, in the first weeks of the class-- give you exactly the commands to type.
Dialogue: 0,1:43:43.94,1:43:50.81,chinese,,0,0,0,,请放心，在问题集和实验中，我们几乎总会提供给你准确的命令。不过，仅限前几周课。
Dialogue: 0,1:43:50.81,1:43:55.10,english,,0,0,0,,Odds are because it's new to many of you, you will accidentally type the wrong commands.
Dialogue: 0,1:43:50.81,1:43:55.10,chinese,,0,0,0,,原因是你们还对各种命令比较陌生，很可能敲错命令。
Dialogue: 0,1:43:55.10,1:43:56.00,english,,0,0,0,,No big deal.
Dialogue: 0,1:43:55.10,1:43:56.00,chinese,,0,0,0,,没什么大不了的。
Dialogue: 0,1:43:56.00,1:43:58.85,english,,0,0,0,,Just remember that you have different ways to solve these problems.
Dialogue: 0,1:43:56.00,1:43:58.85,chinese,,0,0,0,,要记住，能解决问题的不止一种办法。
Dialogue: 0,1:43:58.85,1:44:02.19,english,,0,0,0,,You've got the graphical File Explorer, which should feel a little more familiar.
Dialogue: 0,1:43:58.85,1:44:02.19,chinese,,0,0,0,,还有图形化的文件资源管理器呢，它应该会让你感觉更熟悉一些。
Dialogue: 0,1:44:02.19,1:44:14.42,english,,0,0,0,,But in time you'll start to know and, honestly, probably prefer commands like these-- so cd for Change Directory, cp for copy a file, ls for list, mkdir to make a directory--
Dialogue: 0,1:44:02.19,1:44:14.42,chinese,,0,0,0,,不过随着时间的推移，你就慢慢熟知，并且更加习惯这些命令了。\N比如 cd 表示更改目录，cp 表示复制文件，ls 表示列表，mkdir 表示创建目录，
Dialogue: 0,1:44:14.42,1:44:21.92,english,,0,0,0,,create a new folder at the command line instead of with the button-- mv for move or rename, rm for--
Dialogue: 0,1:44:14.42,1:44:21.92,chinese,,0,0,0,,mv 来移动或重命名文件，那 rm 表示？
Dialogue: 0,1:44:21.92,1:44:22.77,english,,0,0,0,,AUDIENCE: Remove.
Dialogue: 0,1:44:22.77,1:44:23.72,english,,0,0,0,,DAVID J. MALAN: Remove.
Dialogue: 0,1:44:22.77,1:44:23.72,chinese,,0,0,0,,remove（删除）。
Dialogue: 0,1:44:23.72,1:44:24.96,english,,0,0,0,,So be careful with that one.
Dialogue: 0,1:44:23.72,1:44:24.96,chinese,,0,0,0,,所以用的时候一定小心点。
Dialogue: 0,1:44:24.96,1:44:26.52,english,,0,0,0,,Rmdir, remove directory.
Dialogue: 0,1:44:24.96,1:44:26.52,chinese,,0,0,0,,rmdir，remove directory，删除目录。
Dialogue: 0,1:44:26.52,1:44:28.86,english,,0,0,0,,And there's dozens, hundreds of other commands.
Dialogue: 0,1:44:26.52,1:44:28.86,chinese,,0,0,0,,还有几十上百条别的命令。
Dialogue: 0,1:44:28.86,1:44:33.31,english,,0,0,0,,You won't need many of them, but we'll start to scratch the surface all the more over time.
Dialogue: 0,1:44:28.86,1:44:33.31,chinese,,0,0,0,,不需要都记住，随着时间的推移，我们会接触越来越多的。
Dialogue: 0,1:44:33.31,1:44:40.38,english,,0,0,0,,But ultimately, this command line interface is going to be a more powerful mechanism, a more capable mechanism, and ultimately, a more efficient mechanism
Dialogue: 0,1:44:33.31,1:44:40.38,chinese,,0,0,0,,归根结底，命令行界面功能更加强大，在写代码什么的时候更加高效。
Dialogue: 0,1:44:40.38,1:44:51.88,english,,0,0,0,,for writing code, running commands, solving problems, analyzing data more generally, even though know there's going to be some growing pains early on just because it's probably so new for many of you.
Dialogue: 0,1:44:40.38,1:44:51.88,chinese,,0,0,0,,初期掌握起来可能有点困难，只是因为大家还太过陌生。
Dialogue: 0,1:44:51.88,1:44:56.47,english,,0,0,0,,So with that said, we have some problems still to solve, but we promised cookies today.
Dialogue: 0,1:44:51.88,1:44:56.47,chinese,,0,0,0,,所以说，还有一些问题有待解决，但是今天答应了大家要吃饼干。
Dialogue: 0,1:44:56.47,1:44:58.35,english,,0,0,0,,So let's go ahead and take a 10-minute break.
Dialogue: 0,1:44:56.47,1:44:58.35,chinese,,0,0,0,,我们先休息 10 分钟。
Dialogue: 0,1:44:58.35,1:45:00.15,english,,0,0,0,,Cookies are now served in the transept.
Dialogue: 0,1:44:58.35,1:45:00.15,chinese,,0,0,0,,前厅正在供应饼干。
Dialogue: 0,1:45:00.15,1:45:02.91,english,,0,0,0,,And we'll be back here in 10.
Dialogue: 0,1:45:00.15,1:45:02.91,chinese,,0,0,0,,10 分钟后回来。
Dialogue: 0,1:45:02.91,1:45:04.74,english,,0,0,0,,All right, we are back.
Dialogue: 0,1:45:02.91,1:45:04.74,chinese,,0,0,0,,好了，欢迎回来。
Dialogue: 0,1:45:04.74,1:45:10.74,english,,0,0,0,,And up until now, each of the code examples in C we've done have been designed to show one specific topic.
Dialogue: 0,1:45:04.74,1:45:10.74,chinese,,0,0,0,,到目前为止，我们写下的每一个 C 语言代码例子，都是为了展示一个特定的主题。
Dialogue: 0,1:45:10.74,1:45:17.88,english,,0,0,0,,But we thought we'd try to take a step back and solve a more general problem and give you a sense of when given a problem set, for instance, or just
Dialogue: 0,1:45:10.74,1:45:17.88,chinese,,0,0,0,,但是我们想尝试退后一步，解决一个更一般的问题，\N让你了解在面对问题集或者更一般的编程问题时，
Dialogue: 0,1:45:17.88,1:45:25.26,english,,0,0,0,,a programming problem more generally, where you even begin and how you go about approaching it when it's not obvious what the point of the exercise is.
Dialogue: 0,1:45:17.88,1:45:25.26,chinese,,0,0,0,,要从哪里开始，又要怎么逐步解决问题，特别是当问题目标不那么直白的时候。
Dialogue: 0,1:45:25.26,1:45:31.50,english,,0,0,0,,So one of my favorite games from yesteryear is this one here, "Super Mario Brothers" that has come in so many different forms since.
Dialogue: 0,1:45:25.26,1:45:31.50,chinese,,0,0,0,,我最喜欢的一款游戏是 "超级马里奥兄弟"，它已经有很多个版本了。
Dialogue: 0,1:45:31.50,1:45:37.45,english,,0,0,0,,But in this original two-dimensional side scroller game, there was a lot of artwork like this.
Dialogue: 0,1:45:31.50,1:45:37.45,chinese,,0,0,0,,但在这个最初的二维横版卷轴游戏里面，有很多类似这样的艺术作品。
Dialogue: 0,1:45:37.45,1:45:40.26,english,,0,0,0,,So for instance, up here in the sky were four question marks.
Dialogue: 0,1:45:37.45,1:45:40.26,chinese,,0,0,0,,比如说，天空上有四个问号。
Dialogue: 0,1:45:40.26,1:45:49.92,english,,0,0,0,,And we'll find that in C and a lot of programming languages initially, it's a lot easier, a lot more accessible to focus really on black and white type interactive programs textually as opposed
Dialogue: 0,1:45:40.26,1:45:49.92,chinese,,0,0,0,,我们会发现，在学习 C 和很多别的语言初期，编写文本形式展现的黑白交互式程序，\N相比起图形化程序，要简单很多，也更加好理解。
Dialogue: 0,1:45:49.92,1:45:55.83,english,,0,0,0,,to full-fledged graphics and the like, but more on the more graphical acoustic type of programs before long.
Dialogue: 0,1:45:49.92,1:45:55.83,chinese,,0,0,0,,不久的将来，我们会更多地涉及图形和声音类型的程序。
Dialogue: 0,1:45:55.83,1:46:00.72,english,,0,0,0,,But for now let me go over and propose that we try to just implement in ASCII art--
Dialogue: 0,1:45:55.83,1:46:00.72,chinese,,0,0,0,,但现在，先试试用 ASCII 艺术来实现这个东西吧。
Dialogue: 0,1:46:00.72,1:46:09.12,english,,0,0,0,,ASCII, again, being the code that maps numbers to letters, at least for English, into a textual version of these for question marks in the sky.
Dialogue: 0,1:46:00.72,1:46:09.12,chinese,,0,0,0,,ASCII 是把数字映射到字母的编码，能够表示所有的文本，至少在英语里可以。
Dialogue: 0,1:46:09.12,1:46:11.13,english,,0,0,0,,So for this, let me go over to VS Code.
Dialogue: 0,1:46:09.12,1:46:11.13,chinese,,0,0,0,,首先启动 VS Code。
Dialogue: 0,1:46:11.13,1:46:16.92,english,,0,0,0,,I'll create my own version of mario.c that will be different from the one you're challenged with in problem set 1.
Dialogue: 0,1:46:11.13,1:46:16.92,chinese,,0,0,0,,我自己来创建一个 mario.c，但是这个跟问题集 1 里面的不一样。
Dialogue: 0,1:46:16.92,1:46:24.81,english,,0,0,0,,Indeed, in problem set 1, you'll be challenged to build a little something like this, albeit with hashtags for ASCII art instead of graphics.
Dialogue: 0,1:46:16.92,1:46:24.81,chinese,,0,0,0,,其实在问题集 1 里面，给你的挑战是做一个这个，\N但是不用图形，只是用 ASCII 字母来点抽象艺术。
Dialogue: 0,1:46:24.81,1:46:28.12,english,,0,0,0,,And in mario.c, I want to just solve this simple problem first.
Dialogue: 0,1:46:24.81,1:46:28.12,chinese,,0,0,0,,mario.c 里面，我先解决点简单问题。
Dialogue: 0,1:46:28.12,1:46:29.71,english,,0,0,0,,So it's all involving output.
Dialogue: 0,1:46:28.12,1:46:29.71,chinese,,0,0,0,,因为会涉及到输出。
Dialogue: 0,1:46:29.71,1:46:33.09,english,,0,0,0,,So I'll do include stdio.h so I can use printf.
Dialogue: 0,1:46:29.71,1:46:33.09,chinese,,0,0,0,,所以得 include stdio.h，才能用 printf。
Dialogue: 0,1:46:33.09,1:46:37.04,english,,0,0,0,,I'll do my int main(void)-- more on why we keep doing that in future weeks.
Dialogue: 0,1:46:33.09,1:46:37.04,chinese,,0,0,0,,走流程 int main(void)，暂且按下不表。
Dialogue: 0,1:46:37.04,1:46:42.21,english,,0,0,0,,And I'm just going to do something simple initially, like 1, 2, 3, 4, backslash n.
Dialogue: 0,1:46:37.04,1:46:42.21,chinese,,0,0,0,,先来点简单的，四个问号一个 \{}n。
Dialogue: 0,1:46:42.21,1:46:50.41,english,,0,0,0,,This is about the simplest way I can implement four question marks in the sky like these here using pure text like this.
Dialogue: 0,1:46:42.21,1:46:50.41,chinese,,0,0,0,,这是我用纯文本实现天空中四个问号的最简单办法。
Dialogue: 0,1:46:50.41,1:46:54.18,english,,0,0,0,,So let me go ahead and do make mario, ./mario, and voila.
Dialogue: 0,1:46:50.41,1:46:54.18,chinese,,0,0,0,,然后走编译流程，就可以了。
Dialogue: 0,1:46:54.18,1:46:55.83,english,,0,0,0,,We have those four question marks.
Dialogue: 0,1:46:54.18,1:46:55.83,chinese,,0,0,0,,得到了四个问号。
Dialogue: 0,1:46:55.83,1:46:58.83,english,,0,0,0,,But we've seen, of course, that there are better ways to do this.
Dialogue: 0,1:46:55.83,1:46:58.83,chinese,,0,0,0,,当然了，你们也看到了有更好的写法。
Dialogue: 0,1:46:58.83,1:47:03.15,english,,0,0,0,,And if you wanted to generalize this to be five question marks, six,
Dialogue: 0,1:46:58.83,1:47:03.15,chinese,,0,0,0,,如果问号增加到了五个六个，
Dialogue: 0,1:47:03.15,1:47:08.10,english,,0,0,0,,60 different question marks, loop was always the answer for not repeating ourselves.
Dialogue: 0,1:47:03.15,1:47:08.10,chinese,,0,0,0,,六十个，避免重复的办法当然是使用循环。
Dialogue: 0,1:47:08.10,1:47:17.10,english,,0,0,0,,So maybe I should rewrite this a little bit more flexibly and say something like this, for in i get 0, i less than 4, i++.
Dialogue: 0,1:47:08.10,1:47:17.10,chinese,,0,0,0,,我可以灵活地改写一下，这样：【口述代码】。
Dialogue: 0,1:47:17.10,1:47:25.80,english,,0,0,0,,And then inside of a for loop, now I can just do a single question mark, but I don't think what I've just done is correct.
Dialogue: 0,1:47:17.10,1:47:25.80,chinese,,0,0,0,,在 for 循环内部，我就可以只用打印一个问号了，但好像这么有点问题。
Dialogue: 0,1:47:25.80,1:47:29.28,english,,0,0,0,,Any one spot the aesthetic bug already?
Dialogue: 0,1:47:25.80,1:47:29.28,chinese,,0,0,0,,谁有注意到外观上的问题吗？
Dialogue: 0,1:47:29.28,1:47:34.20,english,,0,0,0,,Yeah, why is this wrong if I want to print the same thing?
Dialogue: 0,1:47:29.28,1:47:34.20,chinese,,0,0,0,,是啊，要是我想打印跟刚才一样的东西，为什么不行？
Dialogue: 0,1:47:34.20,1:47:34.71,english,,0,0,0,,Yeah?
Dialogue: 0,1:47:34.71,1:47:38.27,english,,0,0,0,,AUDIENCE: The backslash n, you said to use it into [INAUDIBLE]..
Dialogue: 0,1:47:38.27,1:47:39.15,english,,0,0,0,,DAVID J. MALAN: Yeah.
Dialogue: 0,1:47:38.27,1:47:39.15,chinese,,0,0,0,,没错。
Dialogue: 0,1:47:39.15,1:47:44.76,english,,0,0,0,,So I don't think I want a backslash n after every question mark because the goal is, again, this row of question marks in the sky.
Dialogue: 0,1:47:39.15,1:47:44.76,chinese,,0,0,0,,用不着在每个问号后都加上 \{}n，因为要的是出现一整排括号。
Dialogue: 0,1:47:44.76,1:47:50.70,english,,0,0,0,,So if I now recompile this, make mario, ./mario, OK, it's almost there.
Dialogue: 0,1:47:44.76,1:47:50.70,chinese,,0,0,0,,走个流程，就行了。
Dialogue: 0,1:47:50.70,1:47:54.82,english,,0,0,0,,But now I have that regression to where the dollar sign is not on its own line.
Dialogue: 0,1:47:50.70,1:47:54.82,chinese,,0,0,0,,不过现在的情况又是，$ 没有新起一行。
Dialogue: 0,1:47:54.82,1:47:59.89,english,,0,0,0,,So I think I need a new line, but I don't think I want it here because that was not going to end well.
Dialogue: 0,1:47:54.82,1:47:59.89,chinese,,0,0,0,,所以我想得有个地方换行，但是在这个地方的话，效果不太好。
Dialogue: 0,1:47:59.89,1:48:01.01,english,,0,0,0,,Where do I want to instead?
Dialogue: 0,1:47:59.89,1:48:01.01,chinese,,0,0,0,,应该在哪里添？
Dialogue: 0,1:48:03.31,1:48:03.96,english,,0,0,0,,Any instinct?
Dialogue: 0,1:48:03.31,1:48:03.96,chinese,,0,0,0,,有什么想法吗？
Dialogue: 0,1:48:03.96,1:48:05.61,english,,0,0,0,,Yeah?
Dialogue: 0,1:48:05.61,1:48:07.38,english,,0,0,0,,Yeah, so outside for loop.
Dialogue: 0,1:48:05.61,1:48:07.38,chinese,,0,0,0,,没错，得在循环外面。
Dialogue: 0,1:48:07.38,1:48:11.64,english,,0,0,0,,So indeed, I can just go below line 8 and above line 9, creating a new one.
Dialogue: 0,1:48:07.38,1:48:11.64,chinese,,0,0,0,,所以说可以在第 8 行和第 9 行之间加入一行。
Dialogue: 0,1:48:11.64,1:48:15.27,english,,0,0,0,,And now it's totally fine to just print a new line like that.
Dialogue: 0,1:48:11.64,1:48:15.27,chinese,,0,0,0,,这么来打印一个换行符。
Dialogue: 0,1:48:15.27,1:48:17.19,english,,0,0,0,,You don't have to print anything else with it.
Dialogue: 0,1:48:15.27,1:48:17.19,chinese,,0,0,0,,用不着输出别的。
Dialogue: 0,1:48:17.19,1:48:18.97,english,,0,0,0,,It's indeed a character unto itself.
Dialogue: 0,1:48:17.19,1:48:18.97,chinese,,0,0,0,,换行符本身就是一个字符。
Dialogue: 0,1:48:18.97,1:48:21.90,english,,0,0,0,,So let's do make mario one last time, ./mario.
Dialogue: 0,1:48:18.97,1:48:21.90,chinese,,0,0,0,,最后再来走个流程。
Dialogue: 0,1:48:21.90,1:48:24.01,english,,0,0,0,,OK, so now we're back in business there.
Dialogue: 0,1:48:21.90,1:48:24.01,chinese,,0,0,0,,可以了。现在言归正传。
Dialogue: 0,1:48:24.01,1:48:31.38,english,,0,0,0,,Well, what if we wanted to do some other scene from "Mario," such as this one here where there's a lot of vertical obstacles like these bricks here?
Dialogue: 0,1:48:24.01,1:48:31.38,chinese,,0,0,0,,如果想实现点别的场景，比如类似这里砖块堆叠的垂直障碍物，要怎么做呢？
Dialogue: 0,1:48:31.38,1:48:38.16,english,,0,0,0,,If I wanted to print out now a column of three bricks-- and I'll use hashtags for these instead of anything graphical-- well,
Dialogue: 0,1:48:31.38,1:48:38.16,chinese,,0,0,0,,如果用 # 来代替任何图形，现在想打印出一列三块砖，嗯。
Dialogue: 0,1:48:38.16,1:48:40.65,english,,0,0,0,,I think we're almost there, right?
Dialogue: 0,1:48:38.16,1:48:40.65,chinese,,0,0,0,,差不多能做到是吧。
Dialogue: 0,1:48:40.65,1:48:44.08,english,,0,0,0,,I think I can now-- it's almost maybe a little easier.
Dialogue: 0,1:48:40.65,1:48:44.08,chinese,,0,0,0,,没啥问题，比现在的代码还要简单点。
Dialogue: 0,1:48:44.08,1:48:49.05,english,,0,0,0,,I can go back here, change the question mark to something that looks more like a brick, like this hash symbol.
Dialogue: 0,1:48:44.08,1:48:49.05,chinese,,0,0,0,,回到这里，把 ? 改成更像砖块的 #。
Dialogue: 0,1:48:49.05,1:48:56.36,english,,0,0,0,,And I think now I do want the new line character because when I now do make mario, ./mario, OK, there's my wall of four.
Dialogue: 0,1:48:49.05,1:48:56.36,chinese,,0,0,0,,我想这种情况下确实得加上 \{}n，现在编译流程走一个，确实是四个 # 组成的墙。
Dialogue: 0,1:48:56.36,1:48:56.91,english,,0,0,0,,Oh, but wait.
Dialogue: 0,1:48:56.36,1:48:56.91,chinese,,0,0,0,,停停。
Dialogue: 0,1:48:56.91,1:48:58.05,english,,0,0,0,,I didn't want four.
Dialogue: 0,1:48:56.91,1:48:58.05,chinese,,0,0,0,,我不想要四个。
Dialogue: 0,1:48:58.05,1:49:02.32,english,,0,0,0,,I wanted to be consistent just with this particular scene here, so I just want three.
Dialogue: 0,1:48:58.05,1:49:02.32,chinese,,0,0,0,,我只想跟刚才那个场景保持一致，让它为三个。
Dialogue: 0,1:49:02.32,1:49:04.78,english,,0,0,0,,So I can still change it in one place.
Dialogue: 0,1:49:02.32,1:49:04.78,chinese,,0,0,0,,还是只改一个地方就成。
Dialogue: 0,1:49:04.78,1:49:06.33,english,,0,0,0,,And here, again, is that paradigm.
Dialogue: 0,1:49:04.78,1:49:06.33,chinese,,0,0,0,,还是跟以前一样的范式。
Dialogue: 0,1:49:06.33,1:49:15.87,english,,0,0,0,,Even whether you're using 4 or 3, if you get into the habit of starting counting from 0, you go on up to but not through the value you want to count up to.
Dialogue: 0,1:49:06.33,1:49:15.87,chinese,,0,0,0,,大家都养成了从 0 开始数数的习惯，然后一直数到要达到的数值，\N且不会数最后一个数，这样就刚好循环那么多次。
Dialogue: 0,1:49:15.87,1:49:20.05,english,,0,0,0,,So that's why I'm using less than instead of less than or equal to there.
Dialogue: 0,1:49:15.87,1:49:20.05,chinese,,0,0,0,,我用 < 而不是 <=，就是这个原因。
Dialogue: 0,1:49:20.05,1:49:25.36,english,,0,0,0,,So this would be the common paradigm, though you could count it like we saw earlier in different ways.
Dialogue: 0,1:49:20.05,1:49:25.36,chinese,,0,0,0,,所以说这种写法很常见，虽然说你用别的写法自己推一推也是一样的。
Dialogue: 0,1:49:25.36,1:49:27.96,english,,0,0,0,,But what if things escalate one level further?
Dialogue: 0,1:49:25.36,1:49:27.96,chinese,,0,0,0,,接着进一步考虑。
Dialogue: 0,1:49:27.96,1:49:35.40,english,,0,0,0,,And when you're in the underground version of "Super Mario Brothers," there's a lot of these underground obstructions, including grids of bricks like this.
Dialogue: 0,1:49:27.96,1:49:35.40,chinese,,0,0,0,,在地下版的 "超级马里奥兄弟" 游戏里面，有很多这样的地下障碍物，比如这种砖块网格。
Dialogue: 0,1:49:35.40,1:49:45.40,english,,0,0,0,,And let me conjecture that if you slice this up, it's roughly a 3 by 3 grid of bricks that all interlock prettily to give us just one big, large brick like this.
Dialogue: 0,1:49:35.40,1:49:45.40,chinese,,0,0,0,,如果你把它切成小块，差不多就是一个 3*3 的砖块网格，\N所有砖块都漂亮地交错在一起，形成了巨大的一个整体。
Dialogue: 0,1:49:45.40,1:49:56.58,english,,0,0,0,,So if I want to print out a 3 by 3 grid, now things are getting a little more interesting because up until now, I've printed either one row horizontally or one column vertically.
Dialogue: 0,1:49:45.40,1:49:56.58,chinese,,0,0,0,,因此，如果我想打印出一个 3*3 的网格，现在有点意思，\N因为之前只试过水平打印一行或垂直打印一列。
Dialogue: 0,1:49:56.58,1:50:02.67,english,,0,0,0,,But we haven't really seen any code where I'm printing or living in two different dimensions like the game would imply.
Dialogue: 0,1:49:56.58,1:50:02.67,chinese,,0,0,0,,但是我们还没看到什么代码可以像游戏里一样打印二维的图形。
Dialogue: 0,1:50:02.67,1:50:05.56,english,,0,0,0,,But let me propose that we could do this.
Dialogue: 0,1:50:02.67,1:50:05.56,chinese,,0,0,0,,我告诉大家也是能做到的。
Dialogue: 0,1:50:05.56,1:50:10.50,english,,0,0,0,,Let me go ahead and say, all right, suppose I want to print a 3 by 3 grid of bricks.
Dialogue: 0,1:50:05.56,1:50:10.50,chinese,,0,0,0,,假设我想打印一个 3*3 的砖块网格。
Dialogue: 0,1:50:10.50,1:50:16.59,english,,0,0,0,,It's really that I want to print, what, three rows of bricks.
Dialogue: 0,1:50:10.50,1:50:16.59,chinese,,0,0,0,,意思就是要打印三排砖块。
Dialogue: 0,1:50:16.59,1:50:18.06,english,,0,0,0,,A grid is three rows.
Dialogue: 0,1:50:16.59,1:50:18.06,chinese,,0,0,0,,每排有三个砖块。
Dialogue: 0,1:50:18.06,1:50:22.34,english,,0,0,0,,So if I take the high-level idea and reduce it to something a little simpler, how do I do that?
Dialogue: 0,1:50:18.06,1:50:22.34,chinese,,0,0,0,,把这个高层次的想法简化成更简单的指令，要怎么实现呢？
Dialogue: 0,1:50:22.34,1:50:24.72,english,,0,0,0,,Well, let me get rid of the printf for a moment as I did.
Dialogue: 0,1:50:22.34,1:50:24.72,chinese,,0,0,0,,好吧，让我先把 printf 去掉。
Dialogue: 0,1:50:24.72,1:50:33.39,english,,0,0,0,,And let me just stipulate that this for loop, even though it doesn't do anything useful yet, will do something how many times just by design?
Dialogue: 0,1:50:24.72,1:50:33.39,chinese,,0,0,0,,我来介绍一下这个 for 循环，虽然它还什么都还没干，不过执行了多少次？
Dialogue: 0,1:50:33.39,1:50:34.53,english,,0,0,0,,All right, three times.
Dialogue: 0,1:50:33.39,1:50:34.53,chinese,,0,0,0,,是吧，三次。
Dialogue: 0,1:50:34.53,1:50:35.85,english,,0,0,0,,This for loop is good to go.
Dialogue: 0,1:50:34.53,1:50:35.85,chinese,,0,0,0,,这个 for 循环这么运行的。
Dialogue: 0,1:50:35.85,1:50:39.39,english,,0,0,0,,It will do something three times by just using i to do the counting.
Dialogue: 0,1:50:35.85,1:50:39.39,chinese,,0,0,0,,用 i 进行计数，它执行了三次。
Dialogue: 0,1:50:39.39,1:50:51.09,english,,0,0,0,,All right, well, if I want to print out now a row of three bricks all on the same line, that's pretty similar to what we did earlier when I just wanted to print out four question marks in the sky.
Dialogue: 0,1:50:39.39,1:50:51.09,chinese,,0,0,0,,我现在想打印出一行里的三块砖，这和我们之前打印天空中四个问号的问题很相似。
Dialogue: 0,1:50:51.09,1:50:52.96,english,,0,0,0,,So we've seen a solution there.
Dialogue: 0,1:50:51.09,1:50:52.96,chinese,,0,0,0,,现在的解决方案就很清晰了。
Dialogue: 0,1:50:52.96,1:50:55.45,english,,0,0,0,,And I daresay we can compose one into the other.
Dialogue: 0,1:50:52.96,1:50:55.45,chinese,,0,0,0,,把这个 for 循环放在刚才那个里面就没问题了。
Dialogue: 0,1:50:55.45,1:50:58.59,english,,0,0,0,,So if I want to print out a row of bricks,
Dialogue: 0,1:50:55.45,1:50:58.59,chinese,,0,0,0,,所以，为了打印出一排砖块，
Dialogue: 0,1:50:58.59,1:51:11.70,english,,0,0,0,,I could just do this for in i get 0 i less than 3 i++, and then inside of this inner loop, if you will, let me print out a single brick like this.
Dialogue: 0,1:50:58.59,1:51:11.70,chinese,,0,0,0,,我可以写一个 for 循环，在这个内循环里，照这么写来打印出一块砖。
Dialogue: 0,1:51:11.70,1:51:17.82,english,,0,0,0,,And then I don't like where this is going but, I think I've taken two ideas and I've combined them.
Dialogue: 0,1:51:11.70,1:51:17.82,chinese,,0,0,0,,我觉得把两个想法结合在一起没问题，但我不喜欢目前的情况。
Dialogue: 0,1:51:17.82,1:51:23.08,english,,0,0,0,,But what might be problematic about lines 5 and 7 at the moment?
Dialogue: 0,1:51:17.82,1:51:23.08,chinese,,0,0,0,,看看现在的第 5 行和第 7 行可能存在什么问题呢？
Dialogue: 0,1:51:23.08,1:51:24.70,english,,0,0,0,,What might be bad here?
Dialogue: 0,1:51:23.08,1:51:24.70,chinese,,0,0,0,,这里有什么不好？
Dialogue: 0,1:51:24.70,1:51:25.34,english,,0,0,0,,Yeah, in back?
Dialogue: 0,1:51:24.70,1:51:25.34,chinese,,0,0,0,,后面这位请讲？
Dialogue: 0,1:51:25.34,1:51:27.66,english,,0,0,0,,AUDIENCE: You used the same integer i.
Dialogue: 0,1:51:25.34,1:51:27.66,chinese,,0,0,0,,观众：你用的是同一个整数 i。
Dialogue: 0,1:51:27.66,1:51:30.04,english,,0,0,0,,DAVID J. MALAN: Yeah, I'm using the same integer i, which
Dialogue: 0,1:51:27.66,1:51:30.04,chinese,,0,0,0,,是的，我正在使用相同的整数 i，
Dialogue: 0,1:51:30.04,1:51:32.08,english,,0,0,0,,I feel like could get me into trouble.
Dialogue: 0,1:51:30.04,1:51:32.08,chinese,,0,0,0,,感觉这可能会给我带来麻烦。
Dialogue: 0,1:51:32.08,1:51:38.47,english,,0,0,0,,If I'm trying to count three things here, but then I'm hijacking this variable and using it inside of the loop,
Dialogue: 0,1:51:32.08,1:51:38.47,chinese,,0,0,0,,如果我在外面想要计数三次，但是我在循环内部占用了这个变量，\N还使用并改变了它，就会出现问题。
Dialogue: 0,1:51:38.47,1:51:41.56,english,,0,0,0,,I feel like I should avoid this collision of names.
Dialogue: 0,1:51:38.47,1:51:41.56,chinese,,0,0,0,,这种变量名的冲突应该避免掉。
Dialogue: 0,1:51:41.56,1:51:43.93,english,,0,0,0,,And so what's a good alternative to i?
Dialogue: 0,1:51:41.56,1:51:43.93,chinese,,0,0,0,,那还有什么来代替 i 呢？
Dialogue: 0,1:51:43.93,1:51:47.98,english,,0,0,0,,Well, a programmer, if nesting loops in this way, would pretty commonly go with j.
Dialogue: 0,1:51:43.93,1:51:47.98,chinese,,0,0,0,,对于嵌套循环，程序员通常会选择 j。
Dialogue: 0,1:51:47.98,1:51:52.60,english,,0,0,0,,You could certainly change this to be rows and columns if you want more descriptive variables.
Dialogue: 0,1:51:47.98,1:51:52.60,chinese,,0,0,0,,你当然可以把这些变量改成 rows 和 columns，如果想要描述地清晰点。
Dialogue: 0,1:51:52.60,1:51:54.94,english,,0,0,0,,But i and j is pretty canonical.
Dialogue: 0,1:51:52.60,1:51:54.94,chinese,,0,0,0,,但是 i 和 j 用在循环里是非常经典的。
Dialogue: 0,1:51:54.94,1:51:59.02,english,,0,0,0,,So I'm going to go ahead and do this, j++ instead of i++ everywhere.
Dialogue: 0,1:51:54.94,1:51:59.02,chinese,,0,0,0,,所以我要这么改，把内层的 i++ 更改为 j++。
Dialogue: 0,1:51:59.02,1:52:00.28,english,,0,0,0,,And let me try compiling this.
Dialogue: 0,1:51:59.02,1:52:00.28,chinese,,0,0,0,,下面来试着编译一下。
Dialogue: 0,1:52:00.28,1:52:04.33,english,,0,0,0,,So make mario, Enter, ./mario.
Dialogue: 0,1:52:00.28,1:52:04.33,chinese,,0,0,0,,make mario，回车，./mario。
Dialogue: 0,1:52:04.33,1:52:06.56,english,,0,0,0,,OK, so a couple of things are wrong here.
Dialogue: 0,1:52:04.33,1:52:06.56,chinese,,0,0,0,,嗯，这里还有点问题。
Dialogue: 0,1:52:06.56,1:52:08.48,english,,0,0,0,,This is not a 3 by 3 grid.
Dialogue: 0,1:52:06.56,1:52:08.48,chinese,,0,0,0,,这不是一个 3*3 的网格。
Dialogue: 0,1:52:08.48,1:52:12.85,english,,0,0,0,,But if you count these things, how many did I indeed print at least?
Dialogue: 0,1:52:08.48,1:52:12.85,chinese,,0,0,0,,不过可以数一下，这里打印了多少？
Dialogue: 0,1:52:12.85,1:52:14.48,english,,0,0,0,,You can probably just guess logically.
Dialogue: 0,1:52:12.85,1:52:14.48,chinese,,0,0,0,,也可以从逻辑上猜一下。
Dialogue: 0,1:52:14.48,1:52:15.11,english,,0,0,0,,AUDIENCE: Nine.
Dialogue: 0,1:52:14.48,1:52:15.11,chinese,,0,0,0,,观众：有九个。
Dialogue: 0,1:52:15.11,1:52:17.11,english,,0,0,0,,DAVID J. MALAN: Yeah, there's nine hashes there.
Dialogue: 0,1:52:15.11,1:52:17.11,chinese,,0,0,0,,没错，这里有九个井号。
Dialogue: 0,1:52:17.11,1:52:21.34,english,,0,0,0,,Unfortunately, they're all on the same line instead of on three different lines.
Dialogue: 0,1:52:17.11,1:52:21.34,chinese,,0,0,0,,很遗憾它们都在一行上面，而不是分居三行。
Dialogue: 0,1:52:21.34,1:52:24.91,english,,0,0,0,,So where logically can I fix this?
Dialogue: 0,1:52:21.34,1:52:24.91,chinese,,0,0,0,,那怎么从代码逻辑上解决这个问题呢？
Dialogue: 0,1:52:24.91,1:52:26.53,english,,0,0,0,,I'm definitely printing all the bricks.
Dialogue: 0,1:52:24.91,1:52:26.53,chinese,,0,0,0,,这些砖块还是要被打印出来。
Dialogue: 0,1:52:26.53,1:52:28.07,english,,0,0,0,,They're just not on the right levels.
Dialogue: 0,1:52:26.53,1:52:28.07,chinese,,0,0,0,,它们只是层次不太对。
Dialogue: 0,1:52:28.07,1:52:28.64,english,,0,0,0,,Yeah?
Dialogue: 0,1:52:28.64,1:52:32.62,english,,0,0,0,,AUDIENCE: If you put a new line at the first loop, then you'll get three separate lines.
Dialogue: 0,1:52:28.64,1:52:32.62,chinese,,0,0,0,,观众：如果在第一个循环那里换行，就有三个独立的行了。
Dialogue: 0,1:52:32.62,1:52:33.49,english,,0,0,0,,DAVID J. MALAN: Yeah.
Dialogue: 0,1:52:32.62,1:52:33.49,chinese,,0,0,0,,对的。
Dialogue: 0,1:52:33.49,1:52:38.00,english,,0,0,0,,So put a new line after the first loop, this inner loop, if you will, the nested loop, if you will.
Dialogue: 0,1:52:33.49,1:52:38.00,chinese,,0,0,0,,所以在第一个循环里，也就是这个内部嵌套循环后面换一行。
Dialogue: 0,1:52:38.00,1:52:41.03,english,,0,0,0,,So let me go ahead and print out just a backslash n here.
Dialogue: 0,1:52:38.00,1:52:41.03,chinese,,0,0,0,,在这里打印出一个 \{}n 来。
Dialogue: 0,1:52:41.03,1:52:42.07,english,,0,0,0,,And what's this doing?
Dialogue: 0,1:52:41.03,1:52:42.07,chinese,,0,0,0,,这是什么意思？
Dialogue: 0,1:52:42.07,1:52:47.27,english,,0,0,0,,Well, I think that's going to solve it by just moving the cursor to the next line after you've done one row.
Dialogue: 0,1:52:42.07,1:52:47.27,chinese,,0,0,0,,我想，只要打印一排砖块以后，把光标移到下一行，就能解决刚才问题。
Dialogue: 0,1:52:47.27,1:52:52.07,english,,0,0,0,,So let me go ahead and do make mario, Enter, ./mario, and now we're in business.
Dialogue: 0,1:52:47.27,1:52:52.07,chinese,,0,0,0,,来走个流程，现在能正确地输出了。
Dialogue: 0,1:52:52.07,1:52:59.35,english,,0,0,0,,So it's a very simplistic version of this same graphic, but I'm leveraging two different ideas now-- or the same idea twice rather now.
Dialogue: 0,1:52:52.07,1:52:59.35,chinese,,0,0,0,,到现在，我们画出来一个简易版本的砖块，\N利用的是两个想法—— 或者说使用了两次同一个想法（循环）。
Dialogue: 0,1:52:59.35,1:53:03.97,english,,0,0,0,,I'm using one loop to control my cursor going row, by row, by row.
Dialogue: 0,1:52:59.35,1:53:03.97,chinese,,0,0,0,,使用一个循环来控制光标一行一行地移动。
Dialogue: 0,1:53:03.97,1:53:10.96,english,,0,0,0,,But then within that loop, I'm doing left to right, dot, dot, dot, dot, dot, with printing out each of these individual bricks like this.
Dialogue: 0,1:53:03.97,1:53:10.96,chinese,,0,0,0,,在内部循环里，我从左到右，一个一个打印出独立的砖块。
Dialogue: 0,1:53:10.96,1:53:13.60,english,,0,0,0,,Now, there's a little sloppiness here still.
Dialogue: 0,1:53:10.96,1:53:13.60,chinese,,0,0,0,,现在其实还写得有点马虎。
Dialogue: 0,1:53:13.60,1:53:26.42,english,,0,0,0,,If I want this to always be a square just because that's what it looks like in the game, well, I could change it to be a 4 by 4 square by doing this or a 5 by 5 grid-- whoops-- by doing this.
Dialogue: 0,1:53:13.60,1:53:26.42,chinese,,0,0,0,,如果我想让它始终保持为正方形，跟游戏里一致，\N那么，可以这么来把它改成 4*4 或者 5*5 的正方形，但是——
Dialogue: 0,1:53:26.42,1:53:33.33,english,,0,0,0,,Why is this perhaps not the best design to just keep changing the numbers when I want to change the size?
Dialogue: 0,1:53:26.42,1:53:33.33,chinese,,0,0,0,,为什么说改变尺寸的时候，不断改变数字可能不是最好的设计呢？
Dialogue: 0,1:53:33.33,1:53:34.44,english,,0,0,0,,Where could this go awry?
Dialogue: 0,1:53:33.33,1:53:34.44,chinese,,0,0,0,,哪里会出问题？
Dialogue: 0,1:53:34.44,1:53:35.01,english,,0,0,0,,Yeah?
Dialogue: 0,1:53:35.01,1:53:38.25,english,,0,0,0,,AUDIENCE: If it's a square, [INAUDIBLE]
Dialogue: 0,1:53:38.25,1:53:39.13,english,,0,0,0,,DAVID J. MALAN: Yeah.
Dialogue: 0,1:53:38.25,1:53:39.13,chinese,,0,0,0,,是的。
Dialogue: 0,1:53:39.13,1:53:43.06,english,,0,0,0,,If it's always going to be a square and height is going to be the same as width, I'm just inviting trouble here, right?
Dialogue: 0,1:53:39.13,1:53:43.06,chinese,,0,0,0,,如果它始终是高宽相同的正方形，我就是在自找麻烦，对不对？
Dialogue: 0,1:53:43.06,1:53:44.11,english,,0,0,0,,Eventually, I'm going to screw up.
Dialogue: 0,1:53:43.06,1:53:44.11,chinese,,0,0,0,,最终，我会犯点错误。
Dialogue: 0,1:53:44.11,1:53:45.68,english,,0,0,0,,I'm going to change one but not the other.
Dialogue: 0,1:53:44.11,1:53:45.68,chinese,,0,0,0,,我改了一个数字，但没改另一个。
Dialogue: 0,1:53:45.68,1:53:48.07,english,,0,0,0,,Then it's going to come out to be a rectangle instead of a proper square.
Dialogue: 0,1:53:45.68,1:53:48.07,chinese,,0,0,0,,那它就变成了一个长方形，不是正方形了。
Dialogue: 0,1:53:48.07,1:53:50.41,english,,0,0,0,,So I should probably solve this a little differently.
Dialogue: 0,1:53:48.07,1:53:50.41,chinese,,0,0,0,,所以我可能得换个写法解决。
Dialogue: 0,1:53:50.41,1:53:51.16,english,,0,0,0,,So let me do that.
Dialogue: 0,1:53:50.41,1:53:51.16,chinese,,0,0,0,,来做一下。
Dialogue: 0,1:53:51.16,1:54:01.00,english,,0,0,0,,At the top of my main function here, let me go ahead and give myself a variable called maybe n for the number of bricks I want horizontally and vertically.
Dialogue: 0,1:53:51.16,1:54:01.00,chinese,,0,0,0,,在 main 函数最开头，创建一个变量 n，表示我想要的横向和纵向砖块数量。
Dialogue: 0,1:54:01.00,1:54:03.55,english,,0,0,0,,And I'll just initialize that to 3 initially.
Dialogue: 0,1:54:01.00,1:54:03.55,chinese,,0,0,0,,初始化 n 为 3。
Dialogue: 0,1:54:03.55,1:54:06.61,english,,0,0,0,,And instead of putting 3 here, I'll literally just use n.
Dialogue: 0,1:54:03.55,1:54:06.61,chinese,,0,0,0,,这里就不写 3 了，直接用 n。
Dialogue: 0,1:54:06.61,1:54:13.00,english,,0,0,0,,But I'll do it in both places so that now, henceforth, if I ever want to change this and change it to 4, or 5, or anything else,
Dialogue: 0,1:54:06.61,1:54:13.00,chinese,,0,0,0,,两个地方都这么改，以后，如果我想把它改成 4，或 5，或别的。
Dialogue: 0,1:54:13.00,1:54:13.84,english,,0,0,0,,I'm all done.
Dialogue: 0,1:54:13.00,1:54:13.84,chinese,,0,0,0,,这么就完事了。
Dialogue: 0,1:54:13.84,1:54:16.72,english,,0,0,0,,It's better designed because there's a lower probability of mistakes.
Dialogue: 0,1:54:13.84,1:54:16.72,chinese,,0,0,0,,说它设计得更好，是因为出错的概率更低。
Dialogue: 0,1:54:16.72,1:54:19.84,english,,0,0,0,,But I could technically still screw up somehow.
Dialogue: 0,1:54:16.72,1:54:19.84,chinese,,0,0,0,,但技术上，还是可能出问题。
Dialogue: 0,1:54:19.84,1:54:28.98,english,,0,0,0,,I could technically accidentally write a line of code like n++, or I could just change the value of that variable even though I don't want it to ever change.
Dialogue: 0,1:54:19.84,1:54:28.98,chinese,,0,0,0,,我可能不小心写了一行像 n++ 这样的代码，\N或者把 n 的值改掉了，本来没打算修改的。
Dialogue: 0,1:54:28.98,1:54:31.69,english,,0,0,0,,And maybe it's because I'm a bad programmer, I copy/pasted wrong,
Dialogue: 0,1:54:28.98,1:54:31.69,chinese,,0,0,0,,也许因为我是个辣鸡程序员，抄都抄歪来。
Dialogue: 0,1:54:31.69,1:54:34.24,english,,0,0,0,,I'm working with someone who doesn't know what n represents,
Dialogue: 0,1:54:31.69,1:54:34.24,chinese,,0,0,0,,也可能我的同事不知道 n 代表什么，就改掉了。
Dialogue: 0,1:54:34.24,1:54:41.02,english,,0,0,0,,I can defend myself and my code against human error like that by going up here to line 5.
Dialogue: 0,1:54:34.24,1:54:41.02,chinese,,0,0,0,,再改一改第 5 行，就可以保护这段代码了，避免出现类似的人为错误。
Dialogue: 0,1:54:41.02,1:54:44.17,english,,0,0,0,,And instead of just declaring a simple variable like we did in Scratch,
Dialogue: 0,1:54:41.02,1:54:44.17,chinese,,0,0,0,,跟在 Scratch 里只声明一个简单的变量不一样，
Dialogue: 0,1:54:44.17,1:54:50.74,english,,0,0,0,,I can further harden my code, so to speak, by declaring it to be a constant using the keyword const.
Dialogue: 0,1:54:44.17,1:54:50.74,chinese,,0,0,0,,我可以使用关键字 const 将变量声明为不可变，增加代码的健壮性。
Dialogue: 0,1:54:50.74,1:55:02.32,english,,0,0,0,,Now, this is just a feature of C and some other languages to protect you against yourself by proactively saying, n is a constant, specifically the number 5 or, previously, the number 3.
Dialogue: 0,1:54:50.74,1:55:02.32,chinese,,0,0,0,,这只是 C 语言和其他一些语言中的一个特性，\N主动声明 n 是一个常数，比如说是 3、5 之类的字面值，以此保护这个变量不被修改。
Dialogue: 0,1:55:02.32,1:55:05.53,english,,0,0,0,,You cannot accidentally write code elsewhere that changes it.
Dialogue: 0,1:55:02.32,1:55:05.53,chinese,,0,0,0,,这样你就不能在别的地方写代码更改它的值了。
Dialogue: 0,1:55:05.53,1:55:08.42,english,,0,0,0,,The computer will throw an error and catch that error.
Dialogue: 0,1:55:05.53,1:55:08.42,chinese,,0,0,0,,要是这么做了，计算机会捕捉这个错误，告诉给你。
Dialogue: 0,1:55:08.42,1:55:12.16,english,,0,0,0,,So it's just a way of programming a little more defensively.
Dialogue: 0,1:55:08.42,1:55:12.16,chinese,,0,0,0,,所以，这是一种防御性更强的编程方式。
Dialogue: 0,1:55:12.16,1:55:13.23,english,,0,0,0,,Some languages have this.
Dialogue: 0,1:55:12.16,1:55:13.23,chinese,,0,0,0,,一些语言有这个语法来声明常量。
Dialogue: 0,1:55:13.23,1:55:14.11,english,,0,0,0,,Some languages don't.
Dialogue: 0,1:55:13.23,1:55:14.11,chinese,,0,0,0,,有些语言则没有（比如 Python）。
Dialogue: 0,1:55:14.11,1:55:15.97,english,,0,0,0,,But in general, it's a good practice.
Dialogue: 0,1:55:14.11,1:55:15.97,chinese,,0,0,0,,总的来说，这是一种很好的实践。
Dialogue: 0,1:55:15.97,1:55:23.57,english,,0,0,0,,It makes your code better designed because it's just as less vulnerable to mistakes by you, colleagues, or anyone else using the code.
Dialogue: 0,1:55:15.97,1:55:23.57,chinese,,0,0,0,,它能让你的代码设计得更好，让你、同事或其他使用代码的人不容易犯错。
Dialogue: 0,1:55:23.57,1:55:26.42,english,,0,0,0,,So let me change this back to 3 just to be our default.
Dialogue: 0,1:55:23.57,1:55:26.42,chinese,,0,0,0,,我先把默认值改回 3。
Dialogue: 0,1:55:26.42,1:55:28.58,english,,0,0,0,,But now I'm using n in both places.
Dialogue: 0,1:55:26.42,1:55:28.58,chinese,,0,0,0,,现在我在两个地方都用的 n。
Dialogue: 0,1:55:28.58,1:55:33.25,english,,0,0,0,,And if I do make mario, ./mario, we're back to where we originally started.
Dialogue: 0,1:55:28.58,1:55:33.25,chinese,,0,0,0,,make mario，./mario，跟刚才的输出一样。
Dialogue: 0,1:55:33.25,1:55:35.56,english,,0,0,0,,But the code is a little more better designed.
Dialogue: 0,1:55:33.25,1:55:35.56,chinese,,0,0,0,,但代码设计得更好一些。
Dialogue: 0,1:55:35.56,1:55:37.33,english,,0,0,0,,And let me note this too.
Dialogue: 0,1:55:35.56,1:55:37.33,chinese,,0,0,0,,我得再说明下。
Dialogue: 0,1:55:37.33,1:55:40.72,english,,0,0,0,,All this time, I've been mentioning that correctness is important.
Dialogue: 0,1:55:37.33,1:55:40.72,chinese,,0,0,0,,一直以来，我都在强调正确性的重要。
Dialogue: 0,1:55:40.72,1:55:41.74,english,,0,0,0,,Design is importat.
Dialogue: 0,1:55:40.72,1:55:41.74,chinese,,0,0,0,,设计的重要。
Dialogue: 0,1:55:41.74,1:55:43.70,english,,0,0,0,,There is also this matter of style.
Dialogue: 0,1:55:41.74,1:55:43.70,chinese,,0,0,0,,还有一个是代码风格问题。
Dialogue: 0,1:55:43.70,1:55:48.94,english,,0,0,0,,I've been very deliberately writing pretty code, if you will-- not just the syntax highlighting, which, is automatic.
Dialogue: 0,1:55:43.70,1:55:48.94,chinese,,0,0,0,,我一直在有意地编写漂亮的代码，而不仅仅是语法高亮，因为语法高亮是自动完成的。
Dialogue: 0,1:55:48.94,1:55:52.06,english,,0,0,0,,But notice that I keep indenting everything nicely.
Dialogue: 0,1:55:48.94,1:55:52.06,chinese,,0,0,0,,注意下哈，我把所有内容都很好地缩进了。
Dialogue: 0,1:55:52.06,1:55:57.40,english,,0,0,0,,Any time I have curly braces, like on lines 4 and 14, everything is indented one level.
Dialogue: 0,1:55:52.06,1:55:57.40,chinese,,0,0,0,,只要使用了大括号，比如第 4 行到 14 行，所有内容都会缩进一级。
Dialogue: 0,1:55:57.40,1:56:04.52,english,,0,0,0,,When I have additional curly braces on lines 7 and 13, everything is nicely indented as well.
Dialogue: 0,1:55:57.40,1:56:04.52,chinese,,0,0,0,,第 7 行和第 13 行还有一对大括号，里面的代码也很好地缩进了。
Dialogue: 0,1:56:04.52,1:56:10.09,english,,0,0,0,,Technically speaking, the computer does not care about that kind of whitespace, so to speak.
Dialogue: 0,1:56:04.52,1:56:10.09,chinese,,0,0,0,,从底层来说，计算机并不关心空格和间距。
Dialogue: 0,1:56:10.09,1:56:17.08,english,,0,0,0,,And you could really make a mess of things like this because you have a strange sense of style or just because you're being a little sloppy.
Dialogue: 0,1:56:10.09,1:56:17.08,chinese,,0,0,0,,但你自己可能会因为编码风格奇奇怪怪把自己搞糊涂。
Dialogue: 0,1:56:17.08,1:56:20.17,english,,0,0,0,,But this code is actually still correct.
Dialogue: 0,1:56:17.08,1:56:20.17,chinese,,0,0,0,,改过之后，其实这段代码仍然是正确的。
Dialogue: 0,1:56:20.17,1:56:28.27,english,,0,0,0,,If I recompile it-- let me open up my terminal window-- make mario, no errors, ./mario, it works perfectly fine.
Dialogue: 0,1:56:20.17,1:56:28.27,chinese,,0,0,0,,走个编译流程，它跑出来没问题。
Dialogue: 0,1:56:28.27,1:56:36.86,english,,0,0,0,,But you can imagine just how annoying this now is to read, certainly for a TA, but certainly for you the next day, certainly for a colleague who has to read your code.
Dialogue: 0,1:56:28.27,1:56:36.86,chinese,,0,0,0,,但你可以想象，现在助教来读这段代码得多烦人，\N其实对于第二天的你或是必须读你代码的同事，肯定也是如此。
Dialogue: 0,1:56:36.86,1:56:38.02,english,,0,0,0,,This is just bad style.
Dialogue: 0,1:56:36.86,1:56:38.02,chinese,,0,0,0,,这就是不好的代码风格。
Dialogue: 0,1:56:38.02,1:56:44.23,english,,0,0,0,,It still works, and it's well designed in that you're writing code defensively, you're using a constant.
Dialogue: 0,1:56:38.02,1:56:44.23,chinese,,0,0,0,,它仍然有效，而且设计得还可以，因为采用的是防御性编程，使用了常量。
Dialogue: 0,1:56:44.23,1:56:46.42,english,,0,0,0,,But, my god, the style is atrocious.
Dialogue: 0,1:56:44.23,1:56:46.42,chinese,,0,0,0,,但是，我的天哪，代码风格太糟糕了。
Dialogue: 0,1:56:46.42,1:56:53.71,english,,0,0,0,,Now, you'll often find that there's tools that can help you format your code for you in a manner consistent with a courses or a company's style.
Dialogue: 0,1:56:46.42,1:56:53.71,chinese,,0,0,0,,现在有一些工具可以帮助你格式化代码，以符合课程或公司的代码风格。
Dialogue: 0,1:56:53.71,1:56:57.22,english,,0,0,0,,But this is the kind of muscle memory you'll want to develop over time too.
Dialogue: 0,1:56:53.71,1:56:57.22,chinese,,0,0,0,,不过这种肌肉记忆也是需要长期培养的。
Dialogue: 0,1:56:57.22,1:57:03.56,english,,0,0,0,,Take these VS Code suggestions as it's outputting lines of code for you because it's trying to format your code in a readable way.
Dialogue: 0,1:56:57.22,1:57:03.56,chinese,,0,0,0,,当 VS Code 自己进行了一些缩进的时候，这些建议大部分可以遵守，\N因为它其实在以更好的可读性格式化代码。
Dialogue: 0,1:57:03.56,1:57:13.69,english,,0,0,0,,And, oh, my god, if and when you do have bugs in your code and things aren't even indented properly, there's no way you the human are going to be able to wrap your mind around what's happening and where.
Dialogue: 0,1:57:03.56,1:57:13.69,chinese,,0,0,0,,如果你的代码中有错误，而且连缩进都有问题，\N你一个碳基生命很难理解发生了什么以及在哪里出了问题。
Dialogue: 0,1:57:13.69,1:57:16.06,english,,0,0,0,,You're just making the problem harder for yourself.
Dialogue: 0,1:57:13.69,1:57:16.06,chinese,,0,0,0,,你只是让问题变得更加复杂。
Dialogue: 0,1:57:16.06,1:57:21.19,english,,0,0,0,,So do get into this habit too of manifesting good style as well.
Dialogue: 0,1:57:16.06,1:57:21.19,chinese,,0,0,0,,所以，确保养成良好的编码风格习惯也很重要。
Dialogue: 0,1:57:21.19,1:57:24.88,english,,0,0,0,,All right, well, let me propose that we don't only want a 3 by 3 grid.
Dialogue: 0,1:57:21.19,1:57:24.88,chinese,,0,0,0,,好的，让我提议我们不仅仅想要一个 3*3 的网格。
Dialogue: 0,1:57:24.88,1:57:26.84,english,,0,0,0,,We want this to be a little more dynamic.
Dialogue: 0,1:57:24.88,1:57:26.84,chinese,,0,0,0,,我们希望它更具动态性。
Dialogue: 0,1:57:26.84,1:57:32.02,english,,0,0,0,,So suppose we moved away from a constant to just using an integer called n.
Dialogue: 0,1:57:26.84,1:57:32.02,chinese,,0,0,0,,假设我们从一个常数转到使用一个整数 n。
Dialogue: 0,1:57:32.02,1:57:38.32,english,,0,0,0,,And let's ask the user for the size of this grid as by prompting them with get_int, as we've done before.
Dialogue: 0,1:57:32.02,1:57:38.32,chinese,,0,0,0,,让我们通过提示用户输入来询问这个网格的大小，就像之前 get_int 尝试过的。
Dialogue: 0,1:57:38.32,1:57:40.15,english,,0,0,0,,And I'll store it in n here.
Dialogue: 0,1:57:38.32,1:57:40.15,chinese,,0,0,0,,把得到的值存储在 n 中。
Dialogue: 0,1:57:40.15,1:57:46.45,english,,0,0,0,,And then I can go ahead and, more dynamically, run make mario to compile it-- whoops.
Dialogue: 0,1:57:40.15,1:57:46.45,chinese,,0,0,0,,这样更加有动态性。现在来编译运行一下。
Dialogue: 0,1:57:46.45,1:57:49.93,english,,0,0,0,,Oh, I screwed up accidentally.
Dialogue: 0,1:57:46.45,1:57:49.93,chinese,,0,0,0,,哦，糟糕，我不小心弄错了。
Dialogue: 0,1:57:49.93,1:57:53.78,english,,0,0,0,,What is it suggesting I do, albeit cryptically?
Dialogue: 0,1:57:49.93,1:57:53.78,chinese,,0,0,0,,它在暗示我做什么，虽然有点没太说清楚？
Dialogue: 0,1:57:53.78,1:57:56.66,english,,0,0,0,,AUDIENCE: You have to include the cs50.h.
Dialogue: 0,1:57:53.78,1:57:56.66,chinese,,0,0,0,,观众：得 include cs50.h。
Dialogue: 0,1:57:56.66,1:57:59.93,english,,0,0,0,,DAVID J. MALAN: Yeah, I forgot to include the CS50 header file up top.
Dialogue: 0,1:57:56.66,1:57:59.93,chinese,,0,0,0,,是的，我忘了把 CS50 头文件放在最上面。
Dialogue: 0,1:57:59.93,1:58:03.42,english,,0,0,0,,And that's why it doesn't know that get_int is, in fact, valid.
Dialogue: 0,1:57:59.93,1:58:03.42,chinese,,0,0,0,,所以它不知道 get_int 实际上是个有效的函数。
Dialogue: 0,1:58:03.42,1:58:04.88,english,,0,0,0,,So that's an easy fix.
Dialogue: 0,1:58:03.42,1:58:04.88,chinese,,0,0,0,,这很好解决。
Dialogue: 0,1:58:04.88,1:58:07.73,english,,0,0,0,,I'm just going to go up here and include cs50.h.
Dialogue: 0,1:58:04.88,1:58:07.73,chinese,,0,0,0,,我要在这里 include 一个 cs50.h。
Dialogue: 0,1:58:07.73,1:58:10.79,english,,0,0,0,,Now I'm going to clear my terminal and rerun make mario.
Dialogue: 0,1:58:07.73,1:58:10.79,chinese,,0,0,0,,清空我的终端，重新运行 make mario。
Dialogue: 0,1:58:10.79,1:58:12.80,english,,0,0,0,,Now we're good-- ./mario.
Dialogue: 0,1:58:10.79,1:58:12.80,chinese,,0,0,0,,现在没问题了。
Dialogue: 0,1:58:12.80,1:58:14.55,english,,0,0,0,,And now notice I'm prompted for size.
Dialogue: 0,1:58:12.80,1:58:14.55,chinese,,0,0,0,,现在请注意我输入的尺寸。
Dialogue: 0,1:58:14.55,1:58:16.49,english,,0,0,0,,So if I type in 3, it's the same as before.
Dialogue: 0,1:58:14.55,1:58:16.49,chinese,,0,0,0,,如果我输入 3，跟之前就一样。
Dialogue: 0,1:58:16.49,1:58:20.90,english,,0,0,0,,If I type in 10, it's even bigger, but it happens all now automatically.
Dialogue: 0,1:58:16.49,1:58:20.90,chinese,,0,0,0,,如果我输入 10，它就更大了，这些都是自动发生的。
Dialogue: 0,1:58:20.90,1:58:23.36,english,,0,0,0,,But there are some things that we're not detecting.
Dialogue: 0,1:58:20.90,1:58:23.36,chinese,,0,0,0,,但有些东西我们没有检测到。
Dialogue: 0,1:58:23.36,1:58:25.94,english,,0,0,0,,For instance, suppose I type in cat.
Dialogue: 0,1:58:23.36,1:58:25.94,chinese,,0,0,0,,例如，假设我输入 cat。
Dialogue: 0,1:58:25.94,1:58:28.77,english,,0,0,0,,Well, that's handled by the get_int function, as I claimed earlier.
Dialogue: 0,1:58:25.94,1:58:28.77,chinese,,0,0,0,,之前讲过，get_int 函数能够处理这种情况。
Dialogue: 0,1:58:28.77,1:58:30.68,english,,0,0,0,,That's one of the features of using a library.
Dialogue: 0,1:58:28.77,1:58:30.68,chinese,,0,0,0,,这是使用库的特点之一。
Dialogue: 0,1:58:30.68,1:58:32.57,english,,0,0,0,,You don't have to deal with erroneous input.
Dialogue: 0,1:58:30.68,1:58:32.57,chinese,,0,0,0,,用不着亲自处理错误输入。
Dialogue: 0,1:58:32.57,1:58:36.20,english,,0,0,0,,But we only designed a function called get_int to get you an integer.
Dialogue: 0,1:58:32.57,1:58:36.20,chinese,,0,0,0,,但我们的 CS50 库只设计了一个名为 get_int 的函数来获取一个整数。
Dialogue: 0,1:58:36.20,1:58:40.68,english,,0,0,0,,We don't know if you want it to be positive, negative, zero, or some combination thereof.
Dialogue: 0,1:58:36.20,1:58:40.68,chinese,,0,0,0,,我们不知道你想得到的是正数、负数、零，还是它们组合起来。
Dialogue: 0,1:58:40.68,1:58:48.44,english,,0,0,0,,And it's kind of weird to allow the user to type in negative 1 for the size of the grid or negative 3 for the size of the grid.
Dialogue: 0,1:58:40.68,1:58:48.44,chinese,,0,0,0,,而且，允许用户输入 -1、-3 什么的来表示网格大小，有点怪。
Dialogue: 0,1:58:48.44,1:58:51.23,english,,0,0,0,,And indeed, your code does nothing, so at least it's not crashing.
Dialogue: 0,1:58:48.44,1:58:51.23,chinese,,0,0,0,,事实上，这个 for 循环根本没进去，所以至少不会崩溃。
Dialogue: 0,1:58:51.23,1:58:52.73,english,,0,0,0,,But that's kind of stupid, right?
Dialogue: 0,1:58:51.23,1:58:52.73,chinese,,0,0,0,,但这有点蠢不是吗？
Dialogue: 0,1:58:52.73,1:58:57.15,english,,0,0,0,,It'd be nice to force the user if they want a grid to give us a positive value.
Dialogue: 0,1:58:52.73,1:58:57.15,chinese,,0,0,0,,如果用户想生成一个网格，最好能强制他们给出一个正值。
Dialogue: 0,1:58:57.15,1:58:58.53,english,,0,0,0,,So how could we do this?
Dialogue: 0,1:58:57.15,1:58:58.53,chinese,,0,0,0,,那么，我们怎样才能做到这一点呢？
Dialogue: 0,1:58:58.53,1:59:08.19,english,,0,0,0,,Well, I could go up here and I could say something like if n is less than 1-- so if it's 0 or negative, which I don't want, what could I do?
Dialogue: 0,1:58:58.53,1:59:08.19,chinese,,0,0,0,,好吧，我可以在这里写，如果 n 小于 1—— \N所以，如果是 0 或负数，这是我不想要的，要怎么办呢？
Dialogue: 0,1:59:08.19,1:59:12.38,english,,0,0,0,,Well, I could say, well, prompt the user again for the size.
Dialogue: 0,1:59:08.19,1:59:12.38,chinese,,0,0,0,,我可以写，再次提示用户输入尺寸。
Dialogue: 0,1:59:12.38,1:59:18.53,english,,0,0,0,,And now notice, I'm not declaring n again because once it exists, you don't have to mention the data type again.
Dialogue: 0,1:59:12.38,1:59:18.53,chinese,,0,0,0,,现在请注意，我没有再次声明 n，因为一旦 n 存在，你就不必再提及数据类型了。
Dialogue: 0,1:59:18.53,1:59:19.79,english,,0,0,0,,We said that earlier.
Dialogue: 0,1:59:18.53,1:59:19.79,chinese,,0,0,0,,我们之前已经说过了。
Dialogue: 0,1:59:19.79,1:59:21.51,english,,0,0,0,,But this is kind of stupid.
Dialogue: 0,1:59:19.79,1:59:21.51,chinese,,0,0,0,,这还是有点愚蠢。
Dialogue: 0,1:59:21.51,1:59:22.01,english,,0,0,0,,Why?
Dialogue: 0,1:59:22.01,1:59:25.19,english,,0,0,0,,Because now when you've given the user a second chance, OK, now maybe
Dialogue: 0,1:59:22.01,1:59:25.19,chinese,,0,0,0,,因为现在你给了用户第二次机会，但如果...
Dialogue: 0,1:59:25.19,1:59:33.02,english,,0,0,0,,I'll do-- all right, if this version of n is less than 1, well, let's just go and prompt the user a third time.
Dialogue: 0,1:59:25.19,1:59:33.02,chinese,,0,0,0,,如果这个版本的 n 还是小于 1，那我们就第三次提示用户输入。
Dialogue: 0,1:59:33.02,1:59:35.24,english,,0,0,0,,I mean, you can see where this is stupidly going.
Dialogue: 0,1:59:33.02,1:59:35.24,chinese,,0,0,0,,我的意思是，你看这么写代码真有点呆。
Dialogue: 0,1:59:35.24,1:59:39.86,english,,0,0,0,,This can't be the right solution to keep typing recursively the same thing again and again.
Dialogue: 0,1:59:35.24,1:59:39.86,chinese,,0,0,0,,不断递归地重复输入同样的内容，这不可能是正确的解决方案。
Dialogue: 0,1:59:39.86,1:59:40.79,english,,0,0,0,,Where would it stop?
Dialogue: 0,1:59:39.86,1:59:40.79,chinese,,0,0,0,,它会在什么时候停止？
Dialogue: 0,1:59:40.79,1:59:44.81,english,,0,0,0,,You'd have to give them a finite number of chances or just make a mess of your code.
Dialogue: 0,1:59:40.79,1:59:44.81,chinese,,0,0,0,,你必须给他们有限次数的机会，否则你的代码就该写得一团糟了。
Dialogue: 0,1:59:44.81,1:59:48.17,english,,0,0,0,,So what would be intuitively a better solution here?
Dialogue: 0,1:59:44.81,1:59:48.17,chinese,,0,0,0,,那么，什么才是直观上更好的解决方案呢？
Dialogue: 0,1:59:48.17,1:59:49.12,english,,0,0,0,,AUDIENCE: A while loop.
Dialogue: 0,1:59:48.17,1:59:49.12,chinese,,0,0,0,,观众：用 while 循环。
Dialogue: 0,1:59:49.12,1:59:50.92,english,,0,0,0,,DAVID J. MALAN: Yeah, so some kind of loop.
Dialogue: 0,1:59:49.12,1:59:50.92,chinese,,0,0,0,,是的，所以要用某种循环。
Dialogue: 0,1:59:50.92,1:59:52.16,english,,0,0,0,,We've seen a while loop.
Dialogue: 0,1:59:50.92,1:59:52.16,chinese,,0,0,0,,我们已经看到了一个 while 循环。
Dialogue: 0,1:59:52.16,1:59:54.24,english,,0,0,0,,We've seen a for loop, so maybe one of those.
Dialogue: 0,1:59:52.16,1:59:54.24,chinese,,0,0,0,,我们看到过 for 循环，所以可能是其中之一。
Dialogue: 0,1:59:54.24,1:59:55.29,english,,0,0,0,,So let me try this.
Dialogue: 0,1:59:54.24,1:59:55.29,chinese,,0,0,0,,让我试试这个。
Dialogue: 0,1:59:55.29,1:59:58.76,english,,0,0,0,,Let me delete this messiness and just go back to the first question.
Dialogue: 0,1:59:55.29,1:59:58.76,chinese,,0,0,0,,先删掉这些乱七八糟的东西，回到第一个 if。
Dialogue: 0,1:59:58.76,1:59:59.79,english,,0,0,0,,And let me do this.
Dialogue: 0,1:59:58.76,1:59:59.79,chinese,,0,0,0,,我来写写。
Dialogue: 0,1:59:59.79,2:00:09.56,english,,0,0,0,,So while n is less than 1-- so while the number is not what we want-- let's just prompt the user in a loop this time for the size again.
Dialogue: 0,1:59:59.79,2:00:09.56,chinese,,0,0,0,,因此，当 n 小于 1，不是我们想要的时候，用一个循环再次提示用户输入 size。
Dialogue: 0,2:00:09.56,2:00:15.47,english,,0,0,0,,Now, here too, this is better because it's only two requests for information.
Dialogue: 0,2:00:09.56,2:00:15.47,chinese,,0,0,0,,现在的情况有所改善，只有两个输入请求 get_int 了。
Dialogue: 0,2:00:15.47,2:00:19.64,english,,0,0,0,,But clearly, lines 6 and 9 are pretty much identical other than the int.
Dialogue: 0,2:00:15.47,2:00:19.64,chinese,,0,0,0,,但很明显，第 6 行除了多了个 int 的变量声明以外，跟第 9 行基本相同。
Dialogue: 0,2:00:19.64,2:00:26.30,english,,0,0,0,,And if I went in and changed the size, if I add this, if I change the wording here, change it to a different language,
Dialogue: 0,2:00:19.64,2:00:26.30,chinese,,0,0,0,,如果我想修改向用户提问的措辞，比如说这里的 Size，想改成点别的，
Dialogue: 0,2:00:26.30,2:00:27.35,english,,0,0,0,,I have to change it in two places.
Dialogue: 0,2:00:26.30,2:00:27.35,chinese,,0,0,0,,我必须在两个地方进行修改。
Dialogue: 0,2:00:27.35,2:00:27.85,english,,0,0,0,,That's bad.
Dialogue: 0,2:00:27.35,2:00:27.85,chinese,,0,0,0,,一点都不好。
Dialogue: 0,2:00:27.85,2:00:29.33,english,,0,0,0,,Copy/paste, bad.
Dialogue: 0,2:00:27.85,2:00:29.33,chinese,,0,0,0,,复制/粘贴，坏。
Dialogue: 0,2:00:29.33,2:00:31.04,english,,0,0,0,,So what might be better?
Dialogue: 0,2:00:29.33,2:00:31.04,chinese,,0,0,0,,那怎么做得好点？
Dialogue: 0,2:00:31.04,2:00:37.73,english,,0,0,0,,Well, it turns out, there's another paradigm in C that you can use that gets around this problem, this duplication of code.
Dialogue: 0,2:00:31.04,2:00:37.73,chinese,,0,0,0,,答案是用另一种 C 语言循环语法，可以解决这个代码重复的问题。
Dialogue: 0,2:00:37.73,2:00:41.21,english,,0,0,0,,It would be much nicer if I just write the code once.
Dialogue: 0,2:00:37.73,2:00:41.21,chinese,,0,0,0,,只写一次 get_int 代码就更好了。
Dialogue: 0,2:00:41.21,2:00:45.51,english,,0,0,0,,And I can do that using a third type of loop called a do while loop.
Dialogue: 0,2:00:41.21,2:00:45.51,chinese,,0,0,0,,我可以使用第三种名为 do while 循环的循环语法来做到这一点。
Dialogue: 0,2:00:45.51,2:00:48.00,english,,0,0,0,,So it turns out, in C, you can do this.
Dialogue: 0,2:00:45.51,2:00:48.00,chinese,,0,0,0,,在 C 语言里需要这么写。
Dialogue: 0,2:00:48.00,2:00:53.37,english,,0,0,0,,If you want to get the value of a variable like n, first just to create the variable without an initial value.
Dialogue: 0,2:00:48.00,2:00:53.37,chinese,,0,0,0,,因为需要一个变量来存值，这里是 n，首先要创建一个没有初始值的变量。
Dialogue: 0,2:00:53.37,2:00:56.87,english,,0,0,0,,So int n semicolon means we don't know what value it has, yes.
Dialogue: 0,2:00:53.37,2:00:56.87,chinese,,0,0,0,,所以 int n; 意思是我们不知道它的值是多少，没错。
Dialogue: 0,2:00:56.87,2:00:57.59,english,,0,0,0,,But that's OK.
Dialogue: 0,2:00:56.87,2:00:57.59,chinese,,0,0,0,,不过没关系。
Dialogue: 0,2:00:57.59,2:00:59.84,english,,0,0,0,,We're going to add a value to it eventually.
Dialogue: 0,2:00:57.59,2:00:59.84,chinese,,0,0,0,,我们最终会给他一个值。
Dialogue: 0,2:00:59.84,2:01:02.87,english,,0,0,0,,Then I'm going to say this, do, literally.
Dialogue: 0,2:00:59.84,2:01:02.87,chinese,,0,0,0,,我来边说边写，do，字面意思。
Dialogue: 0,2:01:02.87,2:01:04.46,english,,0,0,0,,I'm going to open my curly braces.
Dialogue: 0,2:01:02.87,2:01:04.46,chinese,,0,0,0,,然后输入一对花括号。
Dialogue: 0,2:01:04.46,2:01:05.93,english,,0,0,0,,And what do I want to do?
Dialogue: 0,2:01:04.46,2:01:05.93,chinese,,0,0,0,,下面要做什么？
Dialogue: 0,2:01:05.93,2:01:11.75,english,,0,0,0,,I want to assign to n the return value of get_int, prompting the user for size.
Dialogue: 0,2:01:05.93,2:01:11.75,chinese,,0,0,0,,用 get_int 提示用户输入大小，并把返回值赋给 n。
Dialogue: 0,2:01:11.75,2:01:14.04,english,,0,0,0,,Well, when do you want to do that?
Dialogue: 0,2:01:11.75,2:01:14.04,chinese,,0,0,0,,什么情况下要接着循环？
Dialogue: 0,2:01:14.04,2:01:17.90,english,,0,0,0,,I want to do that while n is less than 1.
Dialogue: 0,2:01:14.04,2:01:17.90,chinese,,0,0,0,,我想在 n<1 的情况下继续这么做。
Dialogue: 0,2:01:17.90,2:01:23.57,english,,0,0,0,,And this code now achieves the exact same goal, but by never repeating myself.
Dialogue: 0,2:01:17.90,2:01:23.57,chinese,,0,0,0,,现在，这段代码可以实现完全相同的目标，而且避免了重复。
Dialogue: 0,2:01:23.57,2:01:24.23,english,,0,0,0,,Why?
Dialogue: 0,2:01:24.23,2:01:31.17,english,,0,0,0,,Well, notice on these lines of code now, I'm literally saying on line 6, give me a variable called n of type integer.
Dialogue: 0,2:01:24.23,2:01:31.17,chinese,,0,0,0,,注意第 6 行，声明了一个整型变量 n。
Dialogue: 0,2:01:31.17,2:01:33.30,english,,0,0,0,,It doesn't have a value initially, but that's fine.
Dialogue: 0,2:01:31.17,2:01:33.30,chinese,,0,0,0,,它最初没有值，但没关系。
Dialogue: 0,2:01:33.30,2:01:34.64,english,,0,0,0,,You can do that.
Dialogue: 0,2:01:33.30,2:01:34.64,chinese,,0,0,0,,这么写没问题。
Dialogue: 0,2:01:34.64,2:01:36.38,english,,0,0,0,,Line 7 says, do the following.
Dialogue: 0,2:01:34.64,2:01:36.38,chinese,,0,0,0,,第 7 行说，请执行括号里的操作。
Dialogue: 0,2:01:36.38,2:01:41.66,english,,0,0,0,,What do you want to do? get_int, prompting the user with the word size, and just store that value in n.
Dialogue: 0,2:01:36.38,2:01:41.66,chinese,,0,0,0,,get_int，提示用户输入 size 的大小，然后将该值存储在 n 中。
Dialogue: 0,2:01:41.66,2:01:53.67,english,,0,0,0,,But because C code runs top to bottom, left to right, now it's reasonable on line 11 to ask that question, OK, is the current value of n, which it definitely got on line 8, less than 1?
Dialogue: 0,2:01:41.66,2:01:53.67,chinese,,0,0,0,,因为 C 代码从上到下、从左到右运行，因此在第 11 行提出这样的问题是合理的：\N好的，当前在第 8 行得到的 n 值，它小于 1 吗？
Dialogue: 0,2:01:53.67,2:01:58.40,english,,0,0,0,,And if the user didn't cooperate-- they typed in 0, or negative 1, or negative 3-- what's going to happen?
Dialogue: 0,2:01:53.67,2:01:58.40,chinese,,0,0,0,,如果用户不配合，他们输入了 0、-1 或 -3，会发生点什么？
Dialogue: 0,2:01:58.40,2:02:04.53,english,,0,0,0,,It's going to go back up here and repeat, repeat, repeat everything in the do while loop.
Dialogue: 0,2:01:58.40,2:02:04.53,chinese,,0,0,0,,它会回到这里，重复、重复、重复 do while 循环中的所有内容。
Dialogue: 0,2:02:04.53,2:02:08.48,english,,0,0,0,,So a do while loop in C-- which is not something some other languages have.
Dialogue: 0,2:02:04.53,2:02:08.48,chinese,,0,0,0,,其实 C 语言中的 do while 循环是其他语言没有的。
Dialogue: 0,2:02:08.48,2:02:10.73,english,,0,0,0,,Python, if you know it, does not have a do while loop.
Dialogue: 0,2:02:08.48,2:02:10.73,chinese,,0,0,0,,Python 没有 do while 循环。
Dialogue: 0,2:02:10.73,2:02:20.57,english,,0,0,0,,This is perhaps the cleanest way to achieve this, even though it's a little weird that you have to declare your variable, create your variable up top, and then check it down below.
Dialogue: 0,2:02:10.73,2:02:20.57,chinese,,0,0,0,,这也许是最简洁的方法了，\N尽管你必须在上面声明变量、创建变量，然后在下面检查变量，这有点奇怪。
Dialogue: 0,2:02:20.57,2:02:22.98,english,,0,0,0,,But otherwise, it's similar to a while loop.
Dialogue: 0,2:02:20.57,2:02:22.98,chinese,,0,0,0,,除此之外，它与 while 循环类似。
Dialogue: 0,2:02:22.98,2:02:26.15,english,,0,0,0,,It just flips the order in which you're asking the question.
Dialogue: 0,2:02:22.98,2:02:26.15,chinese,,0,0,0,,它只是颠倒了你提问的顺序，先必定执行一次，再检查条件。
Dialogue: 0,2:02:26.15,2:02:28.82,english,,0,0,0,,Any questions on this construct?
Dialogue: 0,2:02:26.15,2:02:28.82,chinese,,0,0,0,,对这一结构有还有疑问吗？
Dialogue: 0,2:02:28.82,2:02:35.64,english,,0,0,0,,And do while, in general, is super useful when you want to get input from the user and make sure it meets certain requirements.
Dialogue: 0,2:02:28.82,2:02:35.64,chinese,,0,0,0,,一般来说，当你想从用户那里获得输入并确保它满足某些要求时，\Ndo while 就很有用。
Dialogue: 0,2:02:35.64,2:02:39.53,english,,0,0,0,,So all right, so now that we have this building block after that interlude.
Dialogue: 0,2:02:35.64,2:02:39.53,chinese,,0,0,0,,好了，经历了上面一些插曲，我们有了这么一个程序。
Dialogue: 0,2:02:39.53,2:02:41.75,english,,0,0,0,,How can I go about cleaning up this code?
Dialogue: 0,2:02:39.53,2:02:41.75,chinese,,0,0,0,,那么我该如何整理这段代码？
Dialogue: 0,2:02:41.75,2:02:47.72,english,,0,0,0,,And then let's conclude by taking a look at things that our code can't do or can't do very well or correctly.
Dialogue: 0,2:02:41.75,2:02:47.72,chinese,,0,0,0,,然后让我们来看一看，哪些是代码无法做到或者无法做到得很好的事情。
Dialogue: 0,2:02:47.72,2:02:53.52,english,,0,0,0,,Let me propose that in a final version of Mario, let me just add what are called now some comments.
Dialogue: 0,2:02:47.72,2:02:53.52,chinese,,0,0,0,,我建议在最终版本的 Mario 里，添加一些叫做注释的东西。
Dialogue: 0,2:02:53.52,2:02:59.17,english,,0,0,0,,So it turns out, in code in C, you can define what are called comments, which are just notes to self.
Dialogue: 0,2:02:53.52,2:02:59.17,chinese,,0,0,0,,所以事实上，在 C 代码中，你可以定义注释，它们只是给自己看的一些笔记。
Dialogue: 0,2:02:59.17,2:03:00.84,english,,0,0,0,,Some of you discovered these in Scratch.
Dialogue: 0,2:02:59.17,2:03:00.84,chinese,,0,0,0,,有些同学在 Scratch 里已经发现了。
Dialogue: 0,2:03:00.84,2:03:04.68,english,,0,0,0,,There's little yellow sticky notes you can use to add citations or explanations.
Dialogue: 0,2:03:00.84,2:03:04.68,chinese,,0,0,0,,你可以用黄色的小便签来添加引文或解释。
Dialogue: 0,2:03:04.68,2:03:07.02,english,,0,0,0,,In C, there's a couple of ways to write comments.
Dialogue: 0,2:03:04.68,2:03:07.02,chinese,,0,0,0,,在 C 语言中里，有几种写注释的方法。
Dialogue: 0,2:03:07.02,2:03:13.86,english,,0,0,0,,And in general, comments are notes for yourself, for your TA, for your colleague as to what your code is doing and why or how.
Dialogue: 0,2:03:07.02,2:03:13.86,chinese,,0,0,0,,总的来说，注释是给自己、给 TA（助教）、给同事看的，\N用来解释你的代码在做什么，为什么做或者怎么做的。
Dialogue: 0,2:03:13.86,2:03:17.86,english,,0,0,0,,It's a little explanatory note in English or whatever your human language might be.
Dialogue: 0,2:03:13.86,2:03:17.86,chinese,,0,0,0,,它是用各种人类语言编写的简短的解释性说明。
Dialogue: 0,2:03:17.86,2:03:27.87,english,,0,0,0,,So for instance, what I might do here in my implementation of this version of mario, I might first ask myself a question like--
Dialogue: 0,2:03:17.86,2:03:27.87,chinese,,0,0,0,,来看这里的例子，在我实现这个版本的 mario 时，我可能会先问自己这样一个问题——
Dialogue: 0,2:03:27.87,2:03:34.35,english,,0,0,0,,I might first make a note to self like this on a new line, above this first block of code, Get size of grid.
Dialogue: 0,2:03:27.87,2:03:34.35,chinese,,0,0,0,,我可能会在新的一行上，位于第一个代码块的上方，写下注释 "获取网格的大小"。
Dialogue: 0,2:03:34.35,2:03:43.56,english,,0,0,0,,It's just an explanatory remark in any terse English that generally explains the next six or so lines, the next chunk or block of code, if you will.
Dialogue: 0,2:03:34.35,2:03:43.56,chinese,,0,0,0,,这只是一个解释性的备注，通常解释了第 6 行后面的代码块，如果你愿意写的话。
Dialogue: 0,2:03:43.56,2:03:46.50,english,,0,0,0,,It would be a little excessive to comment every single line.
Dialogue: 0,2:03:43.56,2:03:46.50,chinese,,0,0,0,,在某种程度上，逐行注释会显得有些过分。
Dialogue: 0,2:03:46.50,2:03:49.68,english,,0,0,0,,At some point, the programmer should know what individual lines of code do.
Dialogue: 0,2:03:46.50,2:03:49.68,chinese,,0,0,0,,大部分时候，程序员应该读得懂每一行代码是做什么的，\N需要用注释提醒的是后面一整块的逻辑。
Dialogue: 0,2:03:49.68,2:03:58.11,english,,0,0,0,,But it's nice to be able to glance at this comment on line 6 that starts with two slashes, and it gets grayed out because of syntax highlighting.
Dialogue: 0,2:03:49.68,2:03:58.11,chinese,,0,0,0,,看一下以 // 开始的第 6 行注释，它被语法高亮显示为灰色。
Dialogue: 0,2:03:58.11,2:03:59.07,english,,0,0,0,,It's not logic.
Dialogue: 0,2:03:58.11,2:03:59.07,chinese,,0,0,0,,这无关代码运行逻辑。
Dialogue: 0,2:03:59.07,2:04:00.44,english,,0,0,0,,It's just a note to self.
Dialogue: 0,2:03:59.07,2:04:00.44,chinese,,0,0,0,,只是一个对自己的提示。
Dialogue: 0,2:04:00.44,2:04:05.16,english,,0,0,0,,It generally gives me a little cheat sheet as to what the following lines of code should be doing and/or why.
Dialogue: 0,2:04:00.44,2:04:05.16,chinese,,0,0,0,,它通常会是一个小抄，告诉我下面的代码行应该做什么和为什么。
Dialogue: 0,2:04:05.16,2:04:08.91,english,,0,0,0,,And then down here, well, there's a second block of code that's a bunch of lines.
Dialogue: 0,2:04:05.16,2:04:08.91,chinese,,0,0,0,,下面还有几行代码，第二段。
Dialogue: 0,2:04:08.91,2:04:14.13,english,,0,0,0,,But together, this just, what, prints grid of bricks.
Dialogue: 0,2:04:08.91,2:04:14.13,chinese,,0,0,0,,合在一起是在打印砖块网格。
Dialogue: 0,2:04:14.13,2:04:23.76,english,,0,0,0,,And so it's another comment to myself that just makes it a little more understandable what these 20-some-odd lines of code are doing by adding some English explanations thereof.
Dialogue: 0,2:04:14.13,2:04:23.76,chinese,,0,0,0,,因此，我又给自己写了一条注释，\N通过添加一些英文解释，让人们更容易理解这 20 多行代码在做什么。
Dialogue: 0,2:04:23.76,2:04:33.60,english,,0,0,0,,But now that I have these, wouldn't it be nice if I could abstract these pieces of functionality away, this getting of the size and this printing of the grid?
Dialogue: 0,2:04:23.76,2:04:33.60,chinese,,0,0,0,,但现在既然我有了这些，如果我能够将这些功能模块化，\N把这个获取大小的部分和打印网格的部分分离出来，不是更好吗？
Dialogue: 0,2:04:33.60,2:04:37.59,english,,0,0,0,,In other words, suppose that you didn't know where to begin with this problem.
Dialogue: 0,2:04:33.60,2:04:37.59,chinese,,0,0,0,,换句话说，假设你不知道从哪里开始解决这个问题。
Dialogue: 0,2:04:37.59,2:04:43.53,english,,0,0,0,,And the problem at hand were literally implement a program that prints a grid of bricks of some variable size--
Dialogue: 0,2:04:37.59,2:04:43.53,chinese,,0,0,0,,而现在所面临的问题就是实现一个程序，它可以打印出一个大小可变的砖块网格，
Dialogue: 0,2:04:43.53,2:04:46.44,english,,0,0,0,,3, or 4, or 5, or whatever the human types in.
Dialogue: 0,2:04:43.53,2:04:46.44,chinese,,0,0,0,,大小可以是 3，4，5，或者是随便输入任何数字。
Dialogue: 0,2:04:46.44,2:04:56.31,english,,0,0,0,,If you have really no idea where to start, comments are actually a good way of getting started because comments can be an approximation of what we call last week pseudocode.
Dialogue: 0,2:04:46.44,2:04:56.31,chinese,,0,0,0,,如果你真的不知道从哪里开始，\N注释实际上是一个很好的入门方法，因为注释可以近似于我们上周所说的伪代码。
Dialogue: 0,2:04:56.31,2:05:02.08,english,,0,0,0,,Pseudocode is terse English that gets your point across, like for the phone book searching like last time.
Dialogue: 0,2:04:56.31,2:05:02.08,chinese,,0,0,0,,伪代码是简明扼要的英语，可以表达你的意思，就像上次电话簿搜索那个例子。
Dialogue: 0,2:05:02.08,2:05:06.91,english,,0,0,0,,So if you didn't really know where to begin, you could do something like this.
Dialogue: 0,2:05:02.08,2:05:06.91,chinese,,0,0,0,,所以如果你真的不知道从哪里开始，可以像这样做。
Dialogue: 0,2:05:06.91,2:05:14.61,english,,0,0,0,,I could, for instance, just say, Get size of grid as my first step and then Print grid of bricks as my second step.
Dialogue: 0,2:05:06.91,2:05:14.61,chinese,,0,0,0,,例如我可以说，获取网格大小是我的第一步，然后打印砖块网格是我的第二步。
Dialogue: 0,2:05:14.61,2:05:16.41,english,,0,0,0,,And that's it for my program thus far.
Dialogue: 0,2:05:14.61,2:05:16.41,chinese,,0,0,0,,至此，我的程序就完成了。
Dialogue: 0,2:05:16.41,2:05:18.69,english,,0,0,0,,This is now implemented in pseudocode.
Dialogue: 0,2:05:16.41,2:05:18.69,chinese,,0,0,0,,现在用伪代码实现了这一点。
Dialogue: 0,2:05:18.69,2:05:20.91,english,,0,0,0,,I have some massive placeholders there.
Dialogue: 0,2:05:18.69,2:05:20.91,chinese,,0,0,0,,还有很多的占位符留待实现。
Dialogue: 0,2:05:20.91,2:05:22.38,english,,0,0,0,,I still have work to be done.
Dialogue: 0,2:05:20.91,2:05:22.38,chinese,,0,0,0,,还有不少工作要做。
Dialogue: 0,2:05:22.38,2:05:26.05,english,,0,0,0,,But at least I have a high-level solution to the problem in comments.
Dialogue: 0,2:05:22.38,2:05:26.05,chinese,,0,0,0,,但至少我在注释中有了高层次的问题解决方案。
Dialogue: 0,2:05:26.05,2:05:28.23,english,,0,0,0,,And now I can even go this far.
Dialogue: 0,2:05:26.05,2:05:28.23,chinese,,0,0,0,,现在我可以更进一步。
Dialogue: 0,2:05:28.23,2:05:34.65,english,,0,0,0,,I could say, well, let's suppose that there's just a function already that exists called get size.
Dialogue: 0,2:05:28.23,2:05:34.65,chinese,,0,0,0,,我可以说，假设已经存在了一个名为 get size 的函数，
Dialogue: 0,2:05:34.65,2:05:36.22,english,,0,0,0,,I could do something like this.
Dialogue: 0,2:05:34.65,2:05:36.22,chinese,,0,0,0,,可以这样做。
Dialogue: 0,2:05:36.22,2:05:38.79,english,,0,0,0,,I could do int n equals get_size.
Dialogue: 0,2:05:36.22,2:05:38.79,chinese,,0,0,0,,【口述代码】
Dialogue: 0,2:05:38.79,2:05:43.00,english,,0,0,0,,And now I just have to assume for the moment that some abstraction called get_size exists.
Dialogue: 0,2:05:38.79,2:05:43.00,chinese,,0,0,0,,现在我只需要暂时假设，有这么一个 get_size 的函数。
Dialogue: 0,2:05:43.00,2:05:43.50,english,,0,0,0,,It doesn't.
Dialogue: 0,2:05:43.00,2:05:43.50,chinese,,0,0,0,,实际上并不存在这个函数。
Dialogue: 0,2:05:43.50,2:05:45.42,english,,0,0,0,,This does not come with the CS50 library.
Dialogue: 0,2:05:43.50,2:05:45.42,chinese,,0,0,0,,CS50 库不附带此功能。
Dialogue: 0,2:05:45.42,2:05:47.52,english,,0,0,0,,But I could invent it, I bet.
Dialogue: 0,2:05:45.42,2:05:47.52,chinese,,0,0,0,,但我敢打赌我可以自己写一个。
Dialogue: 0,2:05:47.52,2:05:49.11,english,,0,0,0,,How else might I proceed?
Dialogue: 0,2:05:47.52,2:05:49.11,chinese,,0,0,0,,我还可以采取哪些其他步骤呢？
Dialogue: 0,2:05:49.11,2:05:57.06,english,,0,0,0,,Well, let's just assume for the moment that there's also a function called print_grid that just prints a grid of that size n.
Dialogue: 0,2:05:49.11,2:05:57.06,chinese,,0,0,0,,嗯，暂时假设还有一个名为 print_grid 的函数，它用来打印一个大小为 n 的网格。
Dialogue: 0,2:05:57.06,2:05:58.95,english,,0,0,0,,So here too is an abstraction.
Dialogue: 0,2:05:57.06,2:05:58.95,chinese,,0,0,0,,因此，这里也是一个抽象概念。
Dialogue: 0,2:05:58.95,2:06:00.33,english,,0,0,0,,These puzzle pieces don't exist.
Dialogue: 0,2:05:58.95,2:06:00.33,chinese,,0,0,0,,这些拼图块并不存在。
Dialogue: 0,2:06:00.33,2:06:01.80,english,,0,0,0,,These functions don't yet exist.
Dialogue: 0,2:06:00.33,2:06:01.80,chinese,,0,0,0,,这些函数还不存在。
Dialogue: 0,2:06:01.80,2:06:06.24,english,,0,0,0,,But in C, just like in Scratch, I can create my own functions.
Dialogue: 0,2:06:01.80,2:06:06.24,chinese,,0,0,0,,但在 C 语言中，就像 Scratch 一样，我可以创建自己的函数。
Dialogue: 0,2:06:06.24,2:06:07.60,english,,0,0,0,,How do I do that?
Dialogue: 0,2:06:06.24,2:06:07.60,chinese,,0,0,0,,我该怎么做呢？
Dialogue: 0,2:06:07.60,2:06:09.63,english,,0,0,0,,Well, let me go down later in the file.
Dialogue: 0,2:06:07.60,2:06:09.63,chinese,,0,0,0,,嗯，让我在这个文件的最后写。
Dialogue: 0,2:06:09.63,2:06:12.81,english,,0,0,0,,And by convention, you generally want to leave main at the top of your code.
Dialogue: 0,2:06:09.63,2:06:12.81,chinese,,0,0,0,,按照惯例，你通常应该把 main 放在代码的顶部。
Dialogue: 0,2:06:12.81,2:06:13.11,english,,0,0,0,,Why?
Dialogue: 0,2:06:13.11,2:06:18.09,english,,0,0,0,,Because it's the main function, and it's just where the human eye is going to look to see what some file of code does.
Dialogue: 0,2:06:13.11,2:06:18.09,chinese,,0,0,0,,因为它是主函数，是人们查看某个代码文件，好了解它干了什么的地方。
Dialogue: 0,2:06:18.09,2:06:19.36,english,,0,0,0,,And let me do this.
Dialogue: 0,2:06:18.09,2:06:19.36,chinese,,0,0,0,,让我这样做。
Dialogue: 0,2:06:19.36,2:06:26.01,english,,0,0,0,,I want to create a function of my own called get_size whose purpose in life is to get the size that the user wants.
Dialogue: 0,2:06:19.36,2:06:26.01,chinese,,0,0,0,,我想创建一个我自己的函数，名为 get_size，它的目标是获取用户想要的大小。
Dialogue: 0,2:06:26.01,2:06:28.38,english,,0,0,0,,I want this function to return an integer.
Dialogue: 0,2:06:26.01,2:06:28.38,chinese,,0,0,0,,我希望这个函数返回一个整数。
Dialogue: 0,2:06:28.38,2:06:34.92,english,,0,0,0,,And the syntax for doing that is this, right, similar to a variable, the data type that this function returns.
Dialogue: 0,2:06:28.38,2:06:34.92,chinese,,0,0,0,,实现这个的语法就是这样的，对吧，类似于一个变量，表示该函数返回的数据类型。
Dialogue: 0,2:06:34.92,2:06:37.45,english,,0,0,0,,I don't need this function to take any inputs.
Dialogue: 0,2:06:34.92,2:06:37.45,chinese,,0,0,0,,这个函数不需要接受任何输入。
Dialogue: 0,2:06:37.45,2:06:45.81,english,,0,0,0,,And so I'm going to use a new keyword that we've actually been using thus far-- more on it another time-- just called void, which just means this get_size function does not take any inputs.
Dialogue: 0,2:06:37.45,2:06:45.81,chinese,,0,0,0,,这里将使用一个我们已经用过很多次的新关键字—— void，\N它只是表示这个 get_size 函数不接受任何输入，我们后面课程会说明 void 的。
Dialogue: 0,2:06:45.81,2:06:46.95,english,,0,0,0,,It does have an output.
Dialogue: 0,2:06:45.81,2:06:46.95,chinese,,0,0,0,,它确实有一个输出。
Dialogue: 0,2:06:46.95,2:06:48.13,english,,0,0,0,,It outputs an int.
Dialogue: 0,2:06:46.95,2:06:48.13,chinese,,0,0,0,,它会输出一个 int。
Dialogue: 0,2:06:48.13,2:06:50.43,english,,0,0,0,,And this is just the weird order in which you write it.
Dialogue: 0,2:06:48.13,2:06:50.43,chinese,,0,0,0,,把输出放前面有点奇怪，不过就是这么写的。
Dialogue: 0,2:06:50.43,2:06:55.92,english,,0,0,0,,You write the output format, the name of the function, and then the inputs, if any, inside of parentheses.
Dialogue: 0,2:06:50.43,2:06:55.92,chinese,,0,0,0,,你首先写输出格式，然后是函数的名称，然后是括号内的输入（如果有的话）。
Dialogue: 0,2:06:55.92,2:06:57.72,english,,0,0,0,,And now I can implement get_size.
Dialogue: 0,2:06:55.92,2:06:57.72,chinese,,0,0,0,,现在我可以实现 get_size。
Dialogue: 0,2:06:57.72,2:06:59.31,english,,0,0,0,,But I've already implemented get_size.
Dialogue: 0,2:06:57.72,2:06:59.31,chinese,,0,0,0,,但实际上，我已经实现了 get_size。
Dialogue: 0,2:06:59.31,2:07:01.14,english,,0,0,0,,Or at least now at this point in the story,
Dialogue: 0,2:06:59.31,2:07:01.14,chinese,,0,0,0,,或者至少在现在，
Dialogue: 0,2:07:01.14,2:07:03.18,english,,0,0,0,,I at least know concretely what to do.
Dialogue: 0,2:07:01.14,2:07:03.18,chinese,,0,0,0,,我能够确切地知道该怎么做了。
Dialogue: 0,2:07:03.18,2:07:12.27,english,,0,0,0,,And I could figure out eventually, with some trial and error perhaps, all right, if I declare a variable and I do the following n equals get_int, prompting the user for size,
Dialogue: 0,2:07:03.18,2:07:12.27,chinese,,0,0,0,,最后，我通过反复试验，终于写出来，【口述代码】。
Dialogue: 0,2:07:12.27,2:07:22.83,english,,0,0,0,,and I keep doing that while n is less than 1, once that block of code is done, here is a new keyword in C where you can return that value n.
Dialogue: 0,2:07:12.27,2:07:22.83,chinese,,0,0,0,,当 n 小于 1 时，就继续循环。\N完成循环后，这里有一个新的 C 语言关键字，你可以使用它返回这个值 n。
Dialogue: 0,2:07:22.83,2:07:27.33,english,,0,0,0,,So I keep referring to these values that some functions return as return values.
Dialogue: 0,2:07:22.83,2:07:27.33,chinese,,0,0,0,,因此，我一直在提到一些函数返回的值称为返回值。
Dialogue: 0,2:07:27.33,2:07:36.97,english,,0,0,0,,In C, there's literally a keyword called return that will hand back to any function that uses that function the value in question.
Dialogue: 0,2:07:27.33,2:07:36.97,chinese,,0,0,0,,在 C 中，确实有一个关键字叫做 return，它会把相关值返回给调用该函数的那个函数。
Dialogue: 0,2:07:36.97,2:07:47.28,english,,0,0,0,,So in a nutshell, between lines 15 and 21 now, here is some code identical to our solution earlier that gets a value n from the user that is positive.
Dialogue: 0,2:07:36.97,2:07:47.28,chinese,,0,0,0,,简而言之，在第 15 到 21 行之间，\N这里代码和之前写的一样，可以从用户那里获取一个正值 n。
Dialogue: 0,2:07:47.28,2:07:48.72,english,,0,0,0,,It's 1, or 2, or higher.
Dialogue: 0,2:07:47.28,2:07:48.72,chinese,,0,0,0,,它是 1、2 或更大的整数值。
Dialogue: 0,2:07:48.72,2:07:51.18,english,,0,0,0,,It's not 0, or it's not less than 1.
Dialogue: 0,2:07:48.72,2:07:51.18,chinese,,0,0,0,,它不是 0，也不小于 1。
Dialogue: 0,2:07:51.18,2:07:56.36,english,,0,0,0,,And as soon as we've got that value, we hand it back as a return value.
Dialogue: 0,2:07:51.18,2:07:56.36,chinese,,0,0,0,,当我们获得了该值后，就作为返回值返回。
Dialogue: 0,2:07:56.36,2:07:58.99,english,,0,0,0,,Notice how I'm using this function on line 7.
Dialogue: 0,2:07:56.36,2:07:58.99,chinese,,0,0,0,,注意我在第 7 行怎么使用这个函数的。
Dialogue: 0,2:07:58.99,2:08:01.63,english,,0,0,0,,Just like with get_int, just like with get_string,
Dialogue: 0,2:07:58.99,2:08:01.63,chinese,,0,0,0,,就像 get_int 和 get_string 一样，
Dialogue: 0,2:08:01.63,2:08:04.65,english,,0,0,0,,I'm calling the function-- nothing in the parentheses in this case.
Dialogue: 0,2:08:01.63,2:08:04.65,chinese,,0,0,0,,我在调用函数，在这种情况下，括号里什么都没有，因为这个函数不需要参数。
Dialogue: 0,2:08:04.65,2:08:09.97,english,,0,0,0,,But then I'm using the assignment operator to copy whatever its return value is into my variable n.
Dialogue: 0,2:08:04.65,2:08:09.97,chinese,,0,0,0,,然后，我使用赋值操作符，把函数的返回值复制到我的变量 n 中。
Dialogue: 0,2:08:09.97,2:08:19.09,english,,0,0,0,,And so now I have a function that didn't use to exist called get_size that gets me a positive integer no matter what.
Dialogue: 0,2:08:09.97,2:08:19.09,chinese,,0,0,0,,现在，我实现了这个以前不存在的函数 get_size，无论如何都能得到一个正整数。
Dialogue: 0,2:08:19.09,2:08:21.71,english,,0,0,0,,And now for the grid, how do I do this?
Dialogue: 0,2:08:19.09,2:08:21.71,chinese,,0,0,0,,问题来到输出砖块网格，要怎么做呢？
Dialogue: 0,2:08:21.71,2:08:27.16,english,,0,0,0,,How do I invent a function called print_grid that takes a single argument, a number and prints a grid of that size?
Dialogue: 0,2:08:21.71,2:08:27.16,chinese,,0,0,0,,要怎么声明一个函数 print_grid，它只接受一个数字作为参数，就能打印出对应大小的网格？
Dialogue: 0,2:08:27.16,2:08:29.18,english,,0,0,0,,Well, let's go down here.
Dialogue: 0,2:08:27.16,2:08:29.18,chinese,,0,0,0,,好吧，我们接着在最底下写。
Dialogue: 0,2:08:29.18,2:08:32.05,english,,0,0,0,,I'm going to write the name of this function print_grid.
Dialogue: 0,2:08:29.18,2:08:32.05,chinese,,0,0,0,,先写下 print_grid 这个函数名。
Dialogue: 0,2:08:32.05,2:08:33.59,english,,0,0,0,,This function just needs to print.
Dialogue: 0,2:08:32.05,2:08:33.59,chinese,,0,0,0,,这个函数只是用来打印的。
Dialogue: 0,2:08:33.59,2:08:35.44,english,,0,0,0,,It has a side effect, as we keep saying.
Dialogue: 0,2:08:33.59,2:08:35.44,chinese,,0,0,0,,我们之前讨论过，这是它的副作用。
Dialogue: 0,2:08:35.44,2:08:38.23,english,,0,0,0,,So I'm just going to say it has no return value.
Dialogue: 0,2:08:35.44,2:08:38.23,chinese,,0,0,0,,所以得声明它没有返回值。
Dialogue: 0,2:08:38.23,2:08:39.04,english,,0,0,0,,It's just void.
Dialogue: 0,2:08:38.23,2:08:39.04,chinese,,0,0,0,,用 void 表示。
Dialogue: 0,2:08:39.04,2:08:40.82,english,,0,0,0,,It doesn't have an output, per se.
Dialogue: 0,2:08:39.04,2:08:40.82,chinese,,0,0,0,,它本身没有输出。
Dialogue: 0,2:08:40.82,2:08:42.67,english,,0,0,0,,It's just an aesthetic side effect.
Dialogue: 0,2:08:40.82,2:08:42.67,chinese,,0,0,0,,这只是美学上的副作用。
Dialogue: 0,2:08:42.67,2:08:44.66,english,,0,0,0,,But it does take in an argument.
Dialogue: 0,2:08:42.67,2:08:44.66,chinese,,0,0,0,,但它确实要接受一个参数。
Dialogue: 0,2:08:44.66,2:08:52.33,english,,0,0,0,,An argument is an input, and the syntax for this in C is to name the type of the input it takes and the name of the variable.
Dialogue: 0,2:08:44.66,2:08:52.33,chinese,,0,0,0,,参数就是函数的输入，C 语言的语法是，声明输入的类型和变量的名称。
Dialogue: 0,2:08:52.33,2:08:53.92,english,,0,0,0,,And I could call this anything I want.
Dialogue: 0,2:08:52.33,2:08:53.92,chinese,,0,0,0,,参数的名字取什么都行。
Dialogue: 0,2:08:53.92,2:08:54.94,english,,0,0,0,,I'll call it size.
Dialogue: 0,2:08:53.92,2:08:54.94,chinese,,0,0,0,,我在这里写 size。
Dialogue: 0,2:08:54.94,2:08:56.14,english,,0,0,0,,I could call it n.
Dialogue: 0,2:08:54.94,2:08:56.14,chinese,,0,0,0,,也可以称之为 n。
Dialogue: 0,2:08:56.14,2:09:01.03,english,,0,0,0,,And it's OK to use the same variable in different functions, but I'll call it size just to be distinct.
Dialogue: 0,2:08:56.14,2:09:01.03,chinese,,0,0,0,,在不同的函数中使用同一个变量名没有问题，但为了明确起见，我会把它叫做 size。
Dialogue: 0,2:09:01.03,2:09:18.79,english,,0,0,0,,And then in this function, I'm just going to copy from memory the same code is before. for int i get 0, i less than size-- instead of 3-- i++, inside of this, for int j gets 0, j is less than size j++,
Dialogue: 0,2:09:01.03,2:09:18.79,chinese,,0,0,0,,然后在这个函数中，我凭借记忆重新写一遍代码，【口述代码】。
Dialogue: 0,2:09:18.79,2:09:28.66,english,,0,0,0,,and inside of that, print out with printf a single hash, print out after that loop a single new line, and that's it.
Dialogue: 0,2:09:18.79,2:09:28.66,chinese,,0,0,0,,【口述代码】
Dialogue: 0,2:09:28.66,2:09:30.37,english,,0,0,0,,Now, I did this fast, admittedly.
Dialogue: 0,2:09:28.66,2:09:30.37,chinese,,0,0,0,,确实，我写得相当快。
Dialogue: 0,2:09:30.37,2:09:32.86,english,,0,0,0,,But it's the same code that I wrote earlier.
Dialogue: 0,2:09:30.37,2:09:32.86,chinese,,0,0,0,,这些代码和之前都是一样的。
Dialogue: 0,2:09:32.86,2:09:39.19,english,,0,0,0,,But now, just like I did with Scratch, let me just arbitrarily hit Enter a bunch of times to move the code out of sight, out of mind.
Dialogue: 0,2:09:32.86,2:09:39.19,chinese,,0,0,0,,但是现在，就像我在 Scratch 中所做的那样，\N我只是随意地多次按 Enter 键，将代码移出视线，不再去理会。
Dialogue: 0,2:09:39.19,2:09:40.90,english,,0,0,0,,Now I have abstractions.
Dialogue: 0,2:09:39.19,2:09:40.90,chinese,,0,0,0,,现在我有了抽象化。
Dialogue: 0,2:09:40.90,2:09:48.16,english,,0,0,0,,I have puzzle pieces that now exist called get_size and print_grid, syntax for which takes some getting used to, but they now just exist.
Dialogue: 0,2:09:40.90,2:09:48.16,chinese,,0,0,0,,我现在有了叫做 get_size 和 print_grid 的拼图块，\N虽然语法需要适应一下，但它们现在就是存在的。
Dialogue: 0,2:09:48.16,2:09:50.59,english,,0,0,0,,Except I do need to do one thing.
Dialogue: 0,2:09:48.16,2:09:50.59,chinese,,0,0,0,,但我确实还需要做一件事。
Dialogue: 0,2:09:50.59,2:09:59.50,english,,0,0,0,,Because C is a little naive, if I try to do make mario now and hit Enter, implicit declaration of function get_size is invalid.
Dialogue: 0,2:09:50.59,2:09:59.50,chinese,,0,0,0,,因为 C 语言有点天真，\N如果我现在尝试运行 make mario 并回车，它会报 "get_size 的隐式声明无效"。
Dialogue: 0,2:09:59.50,2:10:03.46,english,,0,0,0,,And we've seen that before when I hadn't included a file.
Dialogue: 0,2:09:59.50,2:10:03.46,chinese,,0,0,0,,我们之前也见过这种情况，当我没有 include 一个头文件的时候。
Dialogue: 0,2:10:03.46,2:10:06.36,english,,0,0,0,,When I hadn't included CS50 library, get_int didn't work.
Dialogue: 0,2:10:03.46,2:10:06.36,chinese,,0,0,0,,我没有 include CS50 库，get_int 就无法工作。
Dialogue: 0,2:10:06.36,2:10:09.07,english,,0,0,0,,But that's not the issue here because this is not from a library.
Dialogue: 0,2:10:06.36,2:10:09.07,chinese,,0,0,0,,但这不是问题所在，因为这个函数不是库里面的。
Dialogue: 0,2:10:09.07,2:10:10.27,english,,0,0,0,,I just invented this.
Dialogue: 0,2:10:09.07,2:10:10.27,chinese,,0,0,0,,是我刚刚创造的。
Dialogue: 0,2:10:10.27,2:10:12.58,english,,0,0,0,,C takes you literally.
Dialogue: 0,2:10:10.27,2:10:12.58,chinese,,0,0,0,,C 只是从字面上理解你的代码。
Dialogue: 0,2:10:12.58,2:10:18.91,english,,0,0,0,,And if you define these functions at the bottom of your file, they don't exist on line 7 or 10.
Dialogue: 0,2:10:12.58,2:10:18.91,chinese,,0,0,0,,如果你在文件底部定义这些函数，它们在第 7 行或 10 行是不存在的。
Dialogue: 0,2:10:18.91,2:10:20.69,english,,0,0,0,,So I could do this.
Dialogue: 0,2:10:18.91,2:10:20.69,chinese,,0,0,0,,所以我可以这么做。
Dialogue: 0,2:10:20.69,2:10:26.34,english,,0,0,0,,I could, all right, fine, well, let me just highlight all of this, cut to my clipboard, and paste it up here.
Dialogue: 0,2:10:20.69,2:10:26.34,chinese,,0,0,0,,我只需把选中的这些东西，剪切到我的剪贴板，然后粘贴到这里。
Dialogue: 0,2:10:26.34,2:10:27.55,english,,0,0,0,,This would solve the problem.
Dialogue: 0,2:10:26.34,2:10:27.55,chinese,,0,0,0,,这样就能解决问题。
Dialogue: 0,2:10:27.55,2:10:30.28,english,,0,0,0,,I could just move all of those functions at the top of my file.
Dialogue: 0,2:10:27.55,2:10:30.28,chinese,,0,0,0,,我可以把整个函数都移到文件的顶部。
Dialogue: 0,2:10:30.28,2:10:33.38,english,,0,0,0,,That's annoying because now main is at the bottom of the file.
Dialogue: 0,2:10:30.28,2:10:33.38,chinese,,0,0,0,,这很烦人，因为现在 main 就挤到底下去了。
Dialogue: 0,2:10:33.38,2:10:34.93,english,,0,0,0,,It's going to take longer to find it.
Dialogue: 0,2:10:33.38,2:10:34.93,chinese,,0,0,0,,要找到它会花更长的时间。
Dialogue: 0,2:10:34.93,2:10:36.56,english,,0,0,0,,That's not a clean solution.
Dialogue: 0,2:10:34.93,2:10:36.56,chinese,,0,0,0,,这不是一个干净的解决方案。
Dialogue: 0,2:10:36.56,2:10:39.17,english,,0,0,0,,So let me put it back where it was at the bottom.
Dialogue: 0,2:10:36.56,2:10:39.17,chinese,,0,0,0,,所以让我把它放回原来的位置。
Dialogue: 0,2:10:39.17,2:10:40.73,english,,0,0,0,,And let me do this.
Dialogue: 0,2:10:39.17,2:10:40.73,chinese,,0,0,0,,然后我可以这样做。
Dialogue: 0,2:10:40.73,2:10:46.06,english,,0,0,0,,This is the only time in CS50 and, really in C programming where copy/paste is reasonable.
Dialogue: 0,2:10:40.73,2:10:46.06,chinese,,0,0,0,,这是 CS50 中唯一一次，实际上是 C 编程中唯一一次，复制粘贴合理的时候。
Dialogue: 0,2:10:46.06,2:10:58.27,english,,0,0,0,,If you copy and paste the first line of code from each function and then end it with a semicolon, you can tease the compiler by giving it just enough of a hint at the top of the file
Dialogue: 0,2:10:46.06,2:10:58.27,chinese,,0,0,0,,如果你复制并粘贴每个函数的第一行代码，然后以分号结束，\N就是给编译器一个足够的提示，告诉它，这些函数在下面。
Dialogue: 0,2:10:58.27,2:11:01.01,english,,0,0,0,,that, OK, these functions don't exist till down later.
Dialogue: 0,2:10:58.27,2:11:01.01,chinese,,0,0,0,,好吧，这些函数在后面才会实现。
Dialogue: 0,2:11:01.01,2:11:03.19,english,,0,0,0,,But here's a hint that they will exist.
Dialogue: 0,2:11:01.01,2:11:03.19,chinese,,0,0,0,,这就是一个提示，表明它们会存在。
Dialogue: 0,2:11:03.19,2:11:07.66,english,,0,0,0,,This is how you can convince the compiler to trust you.
Dialogue: 0,2:11:03.19,2:11:07.66,chinese,,0,0,0,,这样才能让编译器相信你。
Dialogue: 0,2:11:07.66,2:11:11.83,english,,0,0,0,,So those other functions can still be lower in the file, below main.
Dialogue: 0,2:11:07.66,2:11:11.83,chinese,,0,0,0,,因此，这些其他函数仍然可以放在文件的后面，也就是 main 的下方。
Dialogue: 0,2:11:11.83,2:11:15.19,english,,0,0,0,,But now when I do make mario-- oh, damn it.
Dialogue: 0,2:11:11.83,2:11:15.19,chinese,,0,0,0,,但是现在，当我执行 make mario 时... 哦，damn it。
Dialogue: 0,2:11:15.19,2:11:17.26,english,,0,0,0,,Oh, I said print instead of printf.
Dialogue: 0,2:11:15.19,2:11:17.26,chinese,,0,0,0,,哦，我写的是 print 而不是 printf。
Dialogue: 0,2:11:17.26,2:11:20.86,english,,0,0,0,,That's my bad-- printf.
Dialogue: 0,2:11:17.26,2:11:20.86,chinese,,0,0,0,,我搞错了，printf。
Dialogue: 0,2:11:20.86,2:11:27.79,english,,0,0,0,,So if I do make mario, ./mario, now I can type in 3, and we're back in business.
Dialogue: 0,2:11:20.86,2:11:27.79,chinese,,0,0,0,,make mario，./mario，现在我就可以输入 3，我们又回到正轨了。
Dialogue: 0,2:11:27.79,2:11:32.80,english,,0,0,0,,Now, this was a very heavy-handed way in long way to get to a much more complicated solution.
Dialogue: 0,2:11:27.79,2:11:32.80,chinese,,0,0,0,,现在看来，这是一个非常笨重且冗长的过程，让解决问题变得复杂。
Dialogue: 0,2:11:32.80,2:11:35.24,english,,0,0,0,,But this solution, in some sense, is better designed.
Dialogue: 0,2:11:32.80,2:11:35.24,chinese,,0,0,0,,但从某种意义上说，这种解决方案设计得更好。
Dialogue: 0,2:11:35.24,2:11:35.74,english,,0,0,0,,Why?
Dialogue: 0,2:11:35.74,2:11:38.05,english,,0,0,0,,Because now, especially without the comments,
Dialogue: 0,2:11:35.74,2:11:38.05,chinese,,0,0,0,,因为现在，尤其是没有注释的情况下，
Dialogue: 0,2:11:38.05,2:11:40.06,english,,0,0,0,,I mean, look how short my code is.
Dialogue: 0,2:11:38.05,2:11:40.06,chinese,,0,0,0,,我的代码变得非常简短。
Dialogue: 0,2:11:40.06,2:11:42.43,english,,0,0,0,,My main function is literally two lines of code.
Dialogue: 0,2:11:40.06,2:11:42.43,chinese,,0,0,0,,我的主函数只有两行代码。
Dialogue: 0,2:11:42.43,2:11:42.94,english,,0,0,0,,Why?
Dialogue: 0,2:11:42.94,2:11:46.33,english,,0,0,0,,Well, I factored out the juicy stuff into its own functions.
Dialogue: 0,2:11:42.94,2:11:46.33,chinese,,0,0,0,,嗯，我将核心内容分解到了自己的函数中。
Dialogue: 0,2:11:46.33,2:11:54.38,english,,0,0,0,,And now, especially if I'm working with colleagues or others, you could imagine splitting up large programs into smaller parts, having different people implement different parts,
Dialogue: 0,2:11:46.33,2:11:54.38,chinese,,0,0,0,,而且现在，特别是当我与同事或其他人一起工作时会更加轻松，\N你可以想象将大型程序拆分成较小的部分，就可以让不同的人实现不同的部分，
Dialogue: 0,2:11:54.38,2:12:00.41,english,,0,0,0,,so long as you all agree in advance on what those inputs and those outputs actually are.
Dialogue: 0,2:11:54.38,2:12:00.41,chinese,,0,0,0,,只要你们事先就这些输入和输出达成一致意见。
Dialogue: 0,2:12:00.41,2:12:04.30,english,,0,0,0,,All right, so let's now consider what computers can do well and not so well.
Dialogue: 0,2:12:00.41,2:12:04.30,chinese,,0,0,0,,好的，现在让我们考虑一下计算机在哪些方面表现出色，以及哪些方面表现不太好。
Dialogue: 0,2:12:04.30,2:12:10.61,english,,0,0,0,,C indeed supports a whole bunch of operators, mathematically, via which we can do addition, and subtraction, multiplication, division,
Dialogue: 0,2:12:04.30,2:12:10.61,chinese,,0,0,0,,C 语言确实通过一系列的操作符支持了各种数学运算，我们可以进行加减乘除，
Dialogue: 0,2:12:10.61,2:12:14.02,english,,0,0,0,,and even calculate the remainder when you divide one number by another.
Dialogue: 0,2:12:10.61,2:12:14.02,chinese,,0,0,0,,也可以计算一个数除以另一个数时的余数。
Dialogue: 0,2:12:14.02,2:12:19.13,english,,0,0,0,,In fact, why don't we go ahead and use these in a very simple program and make our very own calculator?
Dialogue: 0,2:12:14.02,2:12:19.13,chinese,,0,0,0,,为什么我们不利用这些语法，用一个非常简单的程序实现自己的计算器呢？
Dialogue: 0,2:12:19.13,2:12:21.40,english,,0,0,0,,So let me go over here to VS Code.
Dialogue: 0,2:12:19.13,2:12:21.40,chinese,,0,0,0,,所以 VS Code，启动！
Dialogue: 0,2:12:21.40,2:12:25.03,english,,0,0,0,,Let me go ahead and create a new file called calculator.c.
Dialogue: 0,2:12:21.40,2:12:25.03,chinese,,0,0,0,,我来创建一个名为 calculator.c 的新文件。
Dialogue: 0,2:12:25.03,2:12:33.67,english,,0,0,0,,And in this file, let's go ahead and first include a couple of now familiar header files-- cs50.h as well as stdio.h.
Dialogue: 0,2:12:25.03,2:12:33.67,chinese,,0,0,0,,在这个文件中，让我们首先 include 几个现在熟悉的头文件——cs50.h 以及 stdio.h。
Dialogue: 0,2:12:33.67,2:12:37.54,english,,0,0,0,,Let's go ahead then and declare main with int main(void).
Dialogue: 0,2:12:33.67,2:12:37.54,chinese,,0,0,0,,用 int main(void) 来声明 main 函数。
Dialogue: 0,2:12:37.54,2:12:40.25,english,,0,0,0,,And then inside of main, let's do something relatively simple.
Dialogue: 0,2:12:37.54,2:12:40.25,chinese,,0,0,0,,在 main 函数内部，让我们做一些相对简单的事情。
Dialogue: 0,2:12:40.25,2:12:48.04,english,,0,0,0,,Let's declare an int and call it x, and set it equal to whatever the return value is of get int, prompting the user for a value for x.
Dialogue: 0,2:12:40.25,2:12:48.04,chinese,,0,0,0,,首先，我们声明一个 int 变量，命名为 x，并将其设置为 get_int 的返回值，\Nget_int 的参数提示用户输入一个值作为 x。
Dialogue: 0,2:12:48.04,2:12:50.24,english,,0,0,0,,Let's then give ourselves a second variable.
Dialogue: 0,2:12:48.04,2:12:50.24,chinese,,0,0,0,,接下来，我们创建一个第二个变量。
Dialogue: 0,2:12:50.24,2:12:51.49,english,,0,0,0,,We'll call it, say, y.
Dialogue: 0,2:12:50.24,2:12:51.49,chinese,,0,0,0,,叫做 y。
Dialogue: 0,2:12:51.49,2:12:57.78,english,,0,0,0,,Set that equal to the return value of another call to get_int, prompting the user this time for that value y.
Dialogue: 0,2:12:51.49,2:12:57.78,chinese,,0,0,0,,再调用一次 get_int，提示用户输入 y，用变量 y 接住函数的返回值。
Dialogue: 0,2:12:57.78,2:13:05.08,english,,0,0,0,,And then let's very simply go ahead at the very end and just print out, say, the sum of x plus y, a super simple calculator.
Dialogue: 0,2:12:57.78,2:13:05.08,chinese,,0,0,0,,最后，简简单单打印一个 x 和 y 的和，这是一个超级简单的计算器。
Dialogue: 0,2:13:05.08,2:13:10.93,english,,0,0,0,,So I'll use printf, quote/unquote, %i for integer, backslash n to give me the new line.
Dialogue: 0,2:13:05.08,2:13:10.93,chinese,,0,0,0,,【口述代码】
Dialogue: 0,2:13:10.93,2:13:14.64,english,,0,0,0,,Then I'm going to go ahead and do x plus y to indeed print out the sum.
Dialogue: 0,2:13:10.93,2:13:14.64,chinese,,0,0,0,,【口述代码】
Dialogue: 0,2:13:14.64,2:13:16.71,english,,0,0,0,,Let me go down to my terminal window now.
Dialogue: 0,2:13:14.64,2:13:16.71,chinese,,0,0,0,,现在来进入终端窗口。
Dialogue: 0,2:13:16.71,2:13:20.34,english,,0,0,0,,Let me do make calculator in order to compile the code.
Dialogue: 0,2:13:16.71,2:13:20.34,chinese,,0,0,0,,走流程编译代码。
Dialogue: 0,2:13:20.34,2:13:22.08,english,,0,0,0,,No error messages, so that's good.
Dialogue: 0,2:13:20.34,2:13:22.08,chinese,,0,0,0,,没有错误信息，这很好。
Dialogue: 0,2:13:22.08,2:13:23.88,english,,0,0,0,,Let me do ./calculator.
Dialogue: 0,2:13:22.08,2:13:23.88,chinese,,0,0,0,,./calculator 来运行。
Dialogue: 0,2:13:23.88,2:13:28.50,english,,0,0,0,,And let's do something like 2 plus 2, which, of course, should equal 4.
Dialogue: 0,2:13:23.88,2:13:28.50,chinese,,0,0,0,,我们来做一个 2+2 的运算，当然应该等于 4。
Dialogue: 0,2:13:28.50,2:13:29.34,english,,0,0,0,,And it does.
Dialogue: 0,2:13:28.50,2:13:29.34,chinese,,0,0,0,,确实如此。
Dialogue: 0,2:13:29.34,2:13:34.67,english,,0,0,0,,But it turns out that sometimes there are going to be limitations that we bump up against.
Dialogue: 0,2:13:29.34,2:13:34.67,chinese,,0,0,0,,但事实证明，有时我们会遇到一些限制。
Dialogue: 0,2:13:34.67,2:13:36.51,english,,0,0,0,,And let me get a little more ambitious here.
Dialogue: 0,2:13:34.67,2:13:36.51,chinese,,0,0,0,,我们在这里来个大的。
Dialogue: 0,2:13:36.51,2:13:37.89,english,,0,0,0,,Let me clear my terminal window.
Dialogue: 0,2:13:36.51,2:13:37.89,chinese,,0,0,0,,我来清除一下终端窗口。
Dialogue: 0,2:13:37.89,2:13:39.99,english,,0,0,0,,And let me go ahead and rerun calculator again.
Dialogue: 0,2:13:37.89,2:13:39.99,chinese,,0,0,0,,重新运行一下。
Dialogue: 0,2:13:39.99,2:13:47.28,english,,0,0,0,,And this time, let's, oh, 2 billion for x, and let's type in the same for y.
Dialogue: 0,2:13:39.99,2:13:47.28,chinese,,0,0,0,,这一次，我们输入 20 亿作为 x 的值，然后再次输入 20 亿作为 y 的值。
Dialogue: 0,2:13:47.28,2:13:52.56,english,,0,0,0,,And, of course, now the answer of 2 billion plus 2 billion should, of course, be 4 billion.
Dialogue: 0,2:13:47.28,2:13:52.56,chinese,,0,0,0,,当然，现在 20 亿加 20 亿的答案应该是 40 亿。
Dialogue: 0,2:13:52.56,2:13:53.97,english,,0,0,0,,And yet, it's not.
Dialogue: 0,2:13:52.56,2:13:53.97,chinese,,0,0,0,,但实际情况并非如此。
Dialogue: 0,2:13:53.97,2:14:02.07,english,,0,0,0,,So curiously, we see, of all things, a negative number here, which suggests that somehow the plus operator doesn't quite work as well as we might like.
Dialogue: 0,2:13:53.97,2:14:02.07,chinese,,0,0,0,,令人好奇的是，我们看到这里是一个负数，\N这表明加号运算符没有按照我们的预期工作。
Dialogue: 0,2:14:02.07,2:14:04.24,english,,0,0,0,,Now, why might this actually be?
Dialogue: 0,2:14:02.07,2:14:04.24,chinese,,0,0,0,,那么，为什么会出现这种情况呢？
Dialogue: 0,2:14:04.24,2:14:08.85,english,,0,0,0,,Well, it turns out that inside of your computer is, of course, memory, or RAM, Random Access Memory.
Dialogue: 0,2:14:04.24,2:14:08.85,chinese,,0,0,0,,原来，在你的计算机内部有内存，或者叫做 RAM，随机存取存储器。
Dialogue: 0,2:14:08.85,2:14:15.93,english,,0,0,0,,And depending on the size of your computer and the type of computer, it might very well look a little something like this-- a little circuit board with these black little modules on it
Dialogue: 0,2:14:08.85,2:14:15.93,chinese,,0,0,0,,根据计算机的大小和类型，它可能看起来有点像这样——\N一个小电路板，上面有一些黑色的小模块，
Dialogue: 0,2:14:15.93,2:14:19.32,english,,0,0,0,,that actually contain all of the bytes of your computer's memory.
Dialogue: 0,2:14:15.93,2:14:19.32,chinese,,0,0,0,,实际上包含了计算机内存的所有字节。
Dialogue: 0,2:14:19.32,2:14:29.67,english,,0,0,0,,Unfortunately, you and I only have a finite amount of this memory inside of our computers, which means no matter how high we want to count, there's ultimately going to be a limitation on how high we
Dialogue: 0,2:14:19.32,2:14:29.67,chinese,,0,0,0,,不幸的是，我们计算机内部只有有限的内存，\N也就是说无论我们想要计数多高，最终都会有一个上限，
Dialogue: 0,2:14:29.67,2:14:32.79,english,,0,0,0,,can count because we only have a finite amount of memory.
Dialogue: 0,2:14:29.67,2:14:32.79,chinese,,0,0,0,,因为我们只有有限的内存。
Dialogue: 0,2:14:32.79,2:14:35.80,english,,0,0,0,,We don't have an infinite number of zeros and ones to play with.
Dialogue: 0,2:14:32.79,2:14:35.80,chinese,,0,0,0,,我们没有无限多的 01 位可以使用。
Dialogue: 0,2:14:35.80,2:14:38.64,english,,0,0,0,,We have to actually be bounded ultimately.
Dialogue: 0,2:14:35.80,2:14:38.64,chinese,,0,0,0,,实际上是有上下界的。
Dialogue: 0,2:14:38.64,2:14:40.07,english,,0,0,0,,So what's the implication of this?
Dialogue: 0,2:14:38.64,2:14:40.07,chinese,,0,0,0,,那么这能说明什么呢？
Dialogue: 0,2:14:40.07,2:14:48.12,english,,0,0,0,,Well, it turns out that computers typically use as many as 32 bits in zeros or ones to represent something like an integer, or in C, in int.
Dialogue: 0,2:14:40.07,2:14:48.12,chinese,,0,0,0,,事实证明，计算机通常使用多达 32 位（4 bytes）的 0 或 1 来表示像整数这样的东西，\N即 C 语言里的 int 类型。
Dialogue: 0,2:14:48.12,2:14:56.97,english,,0,0,0,,So for instance, the smallest number we could represent using 32 ints, of course, using 32 bits, of course, would be zero-- 32 zeros like this here.
Dialogue: 0,2:14:48.12,2:14:56.97,chinese,,0,0,0,,例如，使用 32 位的 int 类型，我们可以表示的最小数字当然是 0，使用 32 个 0，就像这里一样。
Dialogue: 0,2:14:56.97,2:15:07.20,english,,0,0,0,,And the biggest number we could represent is by changing all of those zeros to ones, which, in this case, will ideally give us a number that equals roughly 4 billion in total.
Dialogue: 0,2:14:56.97,2:15:07.20,chinese,,0,0,0,,我们可以表示的最大数字是，把所有这些 0 更改为 1，\N这样的理想情况会得到一个差不多 40 亿的最大数字。
Dialogue: 0,2:15:07.20,2:15:17.16,english,,0,0,0,,It's actually 4,294,967,295 maximally if you set all 32 of those bits to ones and then do out the actual math.
Dialogue: 0,2:15:07.20,2:15:17.16,chinese,,0,0,0,,实际上，如果你把这 32 位都设为 1，然后进行实际的计算，最大是 4,294,967,295。
Dialogue: 0,2:15:17.16,2:15:24.73,english,,0,0,0,,The catch, though, is that we humans and computers in general also sometimes want to and need to be able to represent negative numbers.
Dialogue: 0,2:15:17.16,2:15:24.73,chinese,,0,0,0,,然而，问题在于，我们人类和计算机通常也需要能够表示负数。
Dialogue: 0,2:15:24.73,2:15:33.36,english,,0,0,0,,So if you want to represent negative numbers as well as positive numbers in 0, you can't really just start counting at 0 and go all the way up to roughly 4 billion.
Dialogue: 0,2:15:24.73,2:15:33.36,chinese,,0,0,0,,因此，如果你想要既表示负数又表示正数和零，你不能只从 0 开始计数，\N一直数到大约 40 亿。
Dialogue: 0,2:15:33.36,2:15:41.89,english,,0,0,0,,You've got to split the difference and maybe allocate half of those patterns of zeros and ones two negative numbers and the other half roughly to positive numbers.
Dialogue: 0,2:15:33.36,2:15:41.89,chinese,,0,0,0,,你必须得区分开，也许可以把这些 0 1 模式串中的一半分配给负数，另一半大致分配给正数。
Dialogue: 0,2:15:41.89,2:15:52.50,english,,0,0,0,,So in fact, in practice, when you're using even as many as 32 bits, the highest most computers could count, certainly in a program like this in C using an int, would be roughly 2 billion.
Dialogue: 0,2:15:41.89,2:15:52.50,chinese,,0,0,0,,因此，实际情况是，即使使用多达 32 位，\NC 语言里的 int 类型最高计数也只能达到约 20 亿。
Dialogue: 0,2:15:52.50,2:15:57.18,english,,0,0,0,,That is 2,147,483,647.
Dialogue: 0,2:15:52.50,2:15:57.18,chinese,,0,0,0,,即 2 147 483 647。
Dialogue: 0,2:15:57.18,2:16:06.63,english,,0,0,0,,But the flip side of that is that we could also now, using different patterns of bits, represent negative numbers as low as negative 2 billion, give or take.
Dialogue: 0,2:15:57.18,2:16:06.63,chinese,,0,0,0,,但另一方面，现在我们也可以使用不同的位模式，来表示低至负 20 亿左右的负数。
Dialogue: 0,2:16:06.63,2:16:16.36,english,,0,0,0,,But the implication then, of course, is that if we only have a finite number of bits and can only count so high, at some point, we're going to run out of bits, so to speak.
Dialogue: 0,2:16:06.63,2:16:16.36,chinese,,0,0,0,,总体而言，当我们只有有限数量的位，\N也就是只能在一定范围内表示数时，总会到一个点把所有位用光。
Dialogue: 0,2:16:16.36,2:16:23.08,english,,0,0,0,,In other words, we encounter what's generally known as integer overflow where you want to use more bits than you have available.
Dialogue: 0,2:16:16.36,2:16:23.08,chinese,,0,0,0,,换句话说，我们遇到的叫做 "整数溢出"，即想要使用比可用位数更多的位数。
Dialogue: 0,2:16:23.08,2:16:26.76,english,,0,0,0,,And as a result, you overflow the available space.
Dialogue: 0,2:16:23.08,2:16:26.76,chinese,,0,0,0,,结果是，我们溢出了可用的空间。
Dialogue: 0,2:16:26.76,2:16:28.60,english,,0,0,0,,What does this mean, in fact, in real terms?
Dialogue: 0,2:16:26.76,2:16:28.60,chinese,,0,0,0,,这实际上代表着什么呢？
Dialogue: 0,2:16:28.60,2:16:37.08,english,,0,0,0,,Well, let's suppose that you only have three bits, but I'm going to gray out a fourth bit just to convey where we'd like to put an additional bit ultimately.
Dialogue: 0,2:16:28.60,2:16:37.08,chinese,,0,0,0,,假设你只有三位，但我用灰色标注第四位，\N只是为了标明我们溢出后占用的额外一位。
Dialogue: 0,2:16:37.08,2:16:45.36,english,,0,0,0,,If this of course, is 0, per week 0's discussion, this is 1, 2, 3, 4, 5, 6, 7.
Dialogue: 0,2:16:37.08,2:16:45.36,chinese,,0,0,0,,现在当然是 0，上一周已经讨论过了。这样是 1、2、3、4、5、6、7。
Dialogue: 0,2:16:45.36,2:16:56.25,english,,0,0,0,,Now, ideally, in binary, if you want to add one more to this value 7, you're going to have to carry the 1 mathematically, and that would ideally give 1000.
Dialogue: 0,2:16:45.36,2:16:56.25,chinese,,0,0,0,,理想情况下，在二进制中，如果你想给 7 加一，\N在数学上必须进位，得到 1000。
Dialogue: 0,2:16:56.25,2:17:10.62,english,,0,0,0,,But if you don't have four bits and your computer is only sophisticated enough to have three bits, not even 32, but three, the implication is that you're effectively representing not 1000, but rather, 000.
Dialogue: 0,2:16:56.25,2:17:10.62,chinese,,0,0,0,,但是，如果计算机没有 32 位，连 4 位都没有，计算机只有 3 位，\N就会产生截断，在内存中实际上没有表示出 1000，而是 000。
Dialogue: 0,2:17:10.62,2:17:17.85,english,,0,0,0,,There's just no room to store that fourth bit that I've grayed out here, which is to say that your integer might overflow.
Dialogue: 0,2:17:10.62,2:17:17.85,chinese,,0,0,0,,根本没有空间来存储我在这里标记为灰色的第四位，\N也就是说，你的整数可能会溢出。
Dialogue: 0,2:17:17.85,2:17:27.12,english,,0,0,0,,And as soon as you get to 7, the next number once you add 1 is actually going to be 0, or worse, as we've seen here in my code, a negative value instead.
Dialogue: 0,2:17:17.85,2:17:27.12,chinese,,0,0,0,,当计数到达 7 时，下一个数字加上 1 实际上会变成 0，\N或者更糟，正如刚才运行代码看到的，变成一个负值。
Dialogue: 0,2:17:27.12,2:17:30.20,english,,0,0,0,,So what could we do to perhaps address this kind of concern?
Dialogue: 0,2:17:27.12,2:17:30.20,chinese,,0,0,0,,那么，我们可以做些什么来解决这种问题呢？
Dialogue: 0,2:17:30.20,2:17:32.49,english,,0,0,0,,Well, C does not have just integers or ints.
Dialogue: 0,2:17:30.20,2:17:32.49,chinese,,0,0,0,,C 语言的整数不仅仅有 int 类型，
Dialogue: 0,2:17:32.49,2:17:38.46,english,,0,0,0,,It also has longs, which, as the name suggests, are just longer integers, which means they have more bits available to them.
Dialogue: 0,2:17:32.49,2:17:38.46,chinese,,0,0,0,,还有 long 类型，顾名思义，它是更长的整数，这意味着它们有更多的位可用。
Dialogue: 0,2:17:38.46,2:17:40.07,english,,0,0,0,,So let me go back into my code here.
Dialogue: 0,2:17:38.46,2:17:40.07,chinese,,0,0,0,,让我回到我的代码中。
Dialogue: 0,2:17:40.08,2:17:41.43,english,,0,0,0,,I'll clear the terminal window.
Dialogue: 0,2:17:40.08,2:17:41.43,chinese,,0,0,0,,清除终端窗口。
Dialogue: 0,2:17:41.43,2:17:47.01,english,,0,0,0,,And let me go ahead and change my integers to literally long here, long here.
Dialogue: 0,2:17:41.43,2:17:47.01,chinese,,0,0,0,,然后，我要改变我的整数为 long，这里也是 long。
Dialogue: 0,2:17:47.01,2:17:53.22,english,,0,0,0,,I'm going to have to change my function in CS50's library to be not get_int, but get_long.
Dialogue: 0,2:17:47.01,2:17:53.22,chinese,,0,0,0,,我还需要把 CS50 库中的函数 get_int 改成 get_long。
Dialogue: 0,2:17:53.22,2:17:55.76,english,,0,0,0,,And that's indeed another function we provide in the library.
Dialogue: 0,2:17:53.22,2:17:55.76,chinese,,0,0,0,,这确实是我们在库中提供的另一个函数。
Dialogue: 0,2:17:55.77,2:17:57.80,english,,0,0,0,,Let me change this get_int to get_long as well.
Dialogue: 0,2:17:55.77,2:17:57.80,chinese,,0,0,0,,让我把 get_int 改成 get_long。
Dialogue: 0,2:17:57.80,2:18:01.47,english,,0,0,0,,I'll keep my variable names the same, but I do need to make one other change.
Dialogue: 0,2:17:57.80,2:18:01.47,chinese,,0,0,0,,变量名可以不变，但还需要做一个改动。
Dialogue: 0,2:18:01.48,2:18:16.37,english,,0,0,0,,It turns out that printf also supports other format codes-- so not just %i for integers or %s for strings, but also, for instance, %li for a long integer, as well as %f for floating-point values with decimals.
Dialogue: 0,2:18:01.48,2:18:16.37,chinese,,0,0,0,,其实，printf 还支持一些格式的占位符，不仅仅有 %i 用于 int，%s 用于 string，\N还支持 %li 用于 long int（长整型），以及 %f 用于带小数点的浮点数值。
Dialogue: 0,2:18:16.37,2:18:21.69,english,,0,0,0,,So with that said, let's go ahead and change my printf line to be not %i, but %li.
Dialogue: 0,2:18:16.37,2:18:21.69,chinese,,0,0,0,,既然如此，我们就把 printf 行从 %i 改成 %li。
Dialogue: 0,2:18:21.69,2:18:29.15,english,,0,0,0,,Now let me go ahead and do make calculator again, Enter-- no apparent errors now-- ./calculator.
Dialogue: 0,2:18:21.69,2:18:29.15,chinese,,0,0,0,,然后走流程，没问题。
Dialogue: 0,2:18:29.16,2:18:31.74,english,,0,0,0,,And 2 plus 2 still equals 4 as before.
Dialogue: 0,2:18:29.16,2:18:31.74,chinese,,0,0,0,,2 加 2 还是等于 4。
Dialogue: 0,2:18:31.74,2:18:48.34,english,,0,0,0,,But now if I do calculator again, and let's do 2 billion again as well as 2 billion for y, previously, we overflowed the size of an integer and got some weird negative number because the pattern was misinterpreted, if you will, as a negative number instead.
Dialogue: 0,2:18:31.74,2:18:48.34,chinese,,0,0,0,,再次执行 calculator，输入 20 亿作为 x 和 y，\N刚才使用 int 会溢出，得到一个奇怪的负数，因为模式被误解释为负数了。
Dialogue: 0,2:18:48.34,2:18:57.85,english,,0,0,0,,But a long, instead of using 32 bits, conventionally uses 64 bits, which means we have more than enough spare bits to go when we add 2 billion plus 2 billion.
Dialogue: 0,2:18:48.34,2:18:57.85,chinese,,0,0,0,,但是 long，不再使用 32 位，通常使用 64 位，\N这意味着当我们 20 亿加 20 亿时，有足够的多余位数。
Dialogue: 0,2:18:57.85,2:19:04.84,english,,0,0,0,,And now, in fact, we get the correct answer of 4 billion, which does fit inside of the size of a long.
Dialogue: 0,2:18:57.85,2:19:04.84,chinese,,0,0,0,,而现在，得到了 40 亿的正确答案，这确实适合于 long 的大小。
Dialogue: 0,2:19:04.84,2:19:07.45,english,,0,0,0,,Now, a long can count up quite high.
Dialogue: 0,2:19:04.84,2:19:07.45,chinese,,0,0,0,,现在，long 可以计数特别大。
Dialogue: 0,2:19:07.45,2:19:12.34,english,,0,0,0,,And, in fact, it can count as high as this, 9 quintillion.
Dialogue: 0,2:19:07.45,2:19:12.34,chinese,,0,0,0,,事实上，它可以计数到这么高，9 万亿亿。
Dialogue: 0,2:19:12.34,2:19:14.88,english,,0,0,0,,And so that will give us quite a bit more runway.
Dialogue: 0,2:19:12.34,2:19:14.88,chinese,,0,0,0,,这将给我们更多的空间。
Dialogue: 0,2:19:14.88,2:19:17.83,english,,0,0,0,,But, of course, it too is ultimately going to be finite.
Dialogue: 0,2:19:14.88,2:19:17.83,chinese,,0,0,0,,但是，它终究是有极限的。
Dialogue: 0,2:19:17.83,2:19:22.93,english,,0,0,0,,So if you have numbers that need to go bigger than that, you might still very well have a problem.
Dialogue: 0,2:19:17.83,2:19:22.93,chinese,,0,0,0,,因此，如果你的数字需要超过这个范围，还是会遇到问题。
Dialogue: 0,2:19:22.93,2:19:25.43,english,,0,0,0,,Now, there's another problem that we might run into as well.
Dialogue: 0,2:19:22.93,2:19:25.43,chinese,,0,0,0,,此外，我们还可能遇到另一个问题。
Dialogue: 0,2:19:25.43,2:19:28.66,english,,0,0,0,,And we can see it in the context of even this simple calculator.
Dialogue: 0,2:19:25.43,2:19:28.66,chinese,,0,0,0,,还是这个简单的计算器，马上就能看到。
Dialogue: 0,2:19:28.66,2:19:35.77,english,,0,0,0,,Computers also suffer from potentially what's called truncation, where especially when you're doing math involving floating-point values-- that
Dialogue: 0,2:19:28.66,2:19:35.77,chinese,,0,0,0,,计算机也可能受到截断的影响，特别是在涉及浮点数值（也就是带小数的数字）的数学运算中，
Dialogue: 0,2:19:35.77,2:19:43.61,english,,0,0,0,,is numbers with decimals-- you might accidentally unknowingly truncate the value-- that is lose everything after the decimal point.
Dialogue: 0,2:19:35.77,2:19:43.61,chinese,,0,0,0,,你可能会无意中截断该值，也就是丢失小数点后的所有内容。
Dialogue: 0,2:19:43.61,2:19:45.54,english,,0,0,0,,So in fact, let me go back to VS Code here.
Dialogue: 0,2:19:43.61,2:19:45.54,chinese,,0,0,0,,回到 VS Code 这里。
Dialogue: 0,2:19:45.54,2:19:46.90,english,,0,0,0,,I'll clear my terminal window.
Dialogue: 0,2:19:45.54,2:19:46.90,chinese,,0,0,0,,清除我的终端窗口。
Dialogue: 0,2:19:46.90,2:19:52.52,english,,0,0,0,,And let's still use longs, but let's go ahead and use division instead of addition here.
Dialogue: 0,2:19:46.90,2:19:52.52,chinese,,0,0,0,,我们仍然使用 long，但这里用除法代替加法。
Dialogue: 0,2:19:52.52,2:19:55.09,english,,0,0,0,,So let me change this plus to a divide operator.
Dialogue: 0,2:19:52.52,2:19:55.09,chinese,,0,0,0,,让我将这个加号更改为除法运算符。
Dialogue: 0,2:19:55.09,2:19:59.02,english,,0,0,0,,Let me go ahead and recompile the code down here with make calculator.
Dialogue: 0,2:19:55.09,2:19:59.02,chinese,,0,0,0,,make calculator 重新编译一下代码。
Dialogue: 0,2:19:59.02,2:20:06.37,english,,0,0,0,,Let me go ahead and run ./calculator, and let me go ahead and do something like 1 for x and 3 for y.
Dialogue: 0,2:19:59.02,2:20:06.37,chinese,,0,0,0,,继续运行 ./calculator，然后输入点例子，比如说 x 为 1，y 为 3。
Dialogue: 0,2:20:06.37,2:20:08.38,english,,0,0,0,,And we'll see that-- well, wait a minute.
Dialogue: 0,2:20:06.37,2:20:08.38,chinese,,0,0,0,,我们会看到... 等等。
Dialogue: 0,2:20:08.38,2:20:11.50,english,,0,0,0,,1 divided by 3, I learned, should be 1/3.
Dialogue: 0,2:20:08.38,2:20:11.50,chinese,,0,0,0,,我知道，1 除以 3 应该是 1/3。
Dialogue: 0,2:20:11.50,2:20:21.89,english,,0,0,0,,But in a floating-point value, that should 0.33333, maybe with a little line over it in grade school, but, really, an infinite number of threes.
Dialogue: 0,2:20:11.50,2:20:21.89,chinese,,0,0,0,,在浮点值中，应该是 0.33333，\N或许在小学时 3 上面要打个小点，实际上就是无限多个 3。
Dialogue: 0,2:20:21.89,2:20:30.04,english,,0,0,0,,And yet, we seem to have lost even one of those threes after the decimal point because the answer is coming back here as just 0.
Dialogue: 0,2:20:21.89,2:20:30.04,chinese,,0,0,0,,然而，我们似乎在小数点后失去了所有的 3，因为这里得到的答案是 0。
Dialogue: 0,2:20:30.04,2:20:31.70,english,,0,0,0,,So why might that be?
Dialogue: 0,2:20:30.04,2:20:31.70,chinese,,0,0,0,,为什么会这样呢？
Dialogue: 0,2:20:31.70,2:20:42.64,english,,0,0,0,,Well, if I know that two integers, when divided one by the other, is supposed to give me a fraction, a floating-point value with a decimal point, I can't continue to use integers or even,
Dialogue: 0,2:20:31.70,2:20:42.64,chinese,,0,0,0,,好吧，如果我知道两个整数相除后得到的是分数，一个带小数点的浮点值，\N我不能继续使用整数了，也就是这里的 long。
Dialogue: 0,2:20:42.64,2:20:46.37,english,,0,0,0,,in this case, longs, which do not have support for decimal points.
Dialogue: 0,2:20:42.64,2:20:46.37,chinese,,0,0,0,,因为这些整数不支持小数点。
Dialogue: 0,2:20:46.37,2:20:56.56,english,,0,0,0,,So let me go ahead and change this format code here from %li to %f, which is, again, going to represent a floating-point value instead of a long integer or even an integer.
Dialogue: 0,2:20:46.37,2:20:56.56,chinese,,0,0,0,,所以我来改一改这个格式代码，从 %li 到 %f，代表是一个浮点值，而不是整型或者长整型。
Dialogue: 0,2:20:56.56,2:21:04.10,english,,0,0,0,,And let me go ahead further and define maybe a third variable, z, as a float itself.
Dialogue: 0,2:20:56.56,2:21:04.10,chinese,,0,0,0,,进一步定义第三个变量，z，作为一个 float（浮点数）。
Dialogue: 0,2:21:04.10,2:21:07.30,english,,0,0,0,,So I'll give myself a variable z equals x divided by y.
Dialogue: 0,2:21:04.10,2:21:07.30,chinese,,0,0,0,,我声明的这个变量 z 等于 x/y。
Dialogue: 0,2:21:07.30,2:21:10.72,english,,0,0,0,,And now rather than print x divided by y, let's just go ahead and print z.
Dialogue: 0,2:21:07.30,2:21:10.72,chinese,,0,0,0,,现在与其打印 x/y，不如直接打印 z。
Dialogue: 0,2:21:10.72,2:21:24.71,english,,0,0,0,,So now I'm operating in a world of floating-point values because I proactively that a long or an int divided by another such value, if it's meant to have a fraction, needs to be stored in a floating-point value, something with a decimal point.
Dialogue: 0,2:21:10.72,2:21:24.71,chinese,,0,0,0,,所以现在，我的操作在浮点数值下进行，因为我事先就知道，如果一个 long 或 int 除以另一个值，\N如果结果是一个分数，就需要存储在浮点数值，也就是带有小数点的值里面。
Dialogue: 0,2:21:24.71,2:21:34.18,english,,0,0,0,,Well, let me go down to my terminal window here and rerun make of calculator-- seems to work OK-- ./calculator, and let's do 1 divided by 3 again.
Dialogue: 0,2:21:24.71,2:21:34.18,chinese,,0,0,0,,走一个编译流程，输入 1 除以 3。
Dialogue: 0,2:21:34.18,2:21:36.86,english,,0,0,0,,And still here, we see all zeros.
Dialogue: 0,2:21:34.18,2:21:36.86,chinese,,0,0,0,,而我们得到的还是一串 0。
Dialogue: 0,2:21:36.86,2:21:41.35,english,,0,0,0,,So we do at least see a decimal point, so we've made some progress Thanks to the %f and the float.
Dialogue: 0,2:21:36.86,2:21:41.35,chinese,,0,0,0,,至少我们看到了一个小数点，所以还是有些进展的，多亏了 %f 和 float。
Dialogue: 0,2:21:41.35,2:21:46.57,english,,0,0,0,,But it seems that we've already truncated the value 1 divided by 3.
Dialogue: 0,2:21:41.35,2:21:46.57,chinese,,0,0,0,,但是似乎我们截断了 1 除以 3 这个值。
Dialogue: 0,2:21:46.57,2:21:48.52,english,,0,0,0,,So how do we actually get around this issue?
Dialogue: 0,2:21:46.57,2:21:48.52,chinese,,0,0,0,,这个问题又要怎么解决？
Dialogue: 0,2:21:48.52,2:21:57.34,english,,0,0,0,,Well, if you the programmer know that you're dealing in a world that's going to give you floating point values with decimal points, you might very well need to use what's called a feature known
Dialogue: 0,2:21:48.52,2:21:57.34,chinese,,0,0,0,,好吧，你作为一个程序员，要是知道你在操作中会出现带有小数点的浮点数值，\N那么很有可能需要使用一个叫做类型转换的特性，
Dialogue: 0,2:21:57.34,2:22:04.39,english,,0,0,0,,as typecasting-- that is convert one data type to another by explicitly telling the compiler that you want to do so.
Dialogue: 0,2:21:57.34,2:22:04.39,chinese,,0,0,0,,也就是明确告诉编译器，要把一种数据类型转换成另一种数据类型。
Dialogue: 0,2:22:04.39,2:22:05.48,english,,0,0,0,,Now, how do I do this?
Dialogue: 0,2:22:04.39,2:22:05.48,chinese,,0,0,0,,要怎么做呢？
Dialogue: 0,2:22:05.48,2:22:07.10,english,,0,0,0,,Well, let's go back to my code here.
Dialogue: 0,2:22:05.48,2:22:07.10,chinese,,0,0,0,,好吧，让我们回到我的代码这里。
Dialogue: 0,2:22:07.10,2:22:18.31,english,,0,0,0,,And if the issue fundamentally is that C is still treating x and y as integers-- or technically, longs with no decimal point-- and dividing one by the other,
Dialogue: 0,2:22:07.10,2:22:18.31,chinese,,0,0,0,,问题的本质是编译器仍然把 x 和 y 视为整数，或者从技术上讲，两个都是没有小数点的长整数，\N因此用一个除以另一个，编译器默认得到的还是一个整数，
Dialogue: 0,2:22:18.31,2:22:24.83,english,,0,0,0,,therefore has no room, so to speak, for any numbers after a decimal point, why don't I proactively do this?
Dialogue: 0,2:22:18.31,2:22:24.83,chinese,,0,0,0,,没有给小数点后预留空间，无从存放小数点后的任何数字，\N那我为什么我不主动声明值是可能带小数的呢？
Dialogue: 0,2:22:24.83,2:22:33.91,english,,0,0,0,,Let me, using a slightly new syntax with parentheses, specify that I want to convert x proactively from a long to a float.
Dialogue: 0,2:22:24.83,2:22:33.91,chinese,,0,0,0,,让我使用一种有点新的括号语法，指定我要把 x 主动从 long 转换为 float。
Dialogue: 0,2:22:33.91,2:22:39.95,english,,0,0,0,,Let me specify proactively that I want to convert y from a long to a float as well.
Dialogue: 0,2:22:33.91,2:22:39.95,chinese,,0,0,0,,主动指定 y 也要作为一个 float。
Dialogue: 0,2:22:39.95,2:22:49.33,english,,0,0,0,,And now let me go ahead and trust that z should be the result of dividing not a long by a long or an int by an int, but rather, a float by a float.
Dialogue: 0,2:22:39.95,2:22:49.33,chinese,,0,0,0,,现在我可以相信，\Nz 不应该是 long 除以 long 或 int 除以 int 的结果，而应该是 float 除以 float 的结果。
Dialogue: 0,2:22:49.33,2:22:55.30,english,,0,0,0,,Let me clear my terminal window, run make calculator again-- seems to work OK-- ./calculator.
Dialogue: 0,2:22:49.33,2:22:55.30,chinese,,0,0,0,,清除终端窗口，再次运行 make calculator，似乎没问题，然后运行 ./calculator。
Dialogue: 0,2:22:55.30,2:23:05.38,english,,0,0,0,,And now 1, 3, and hopefully now we actually see that my code has outputted 0.333333.
Dialogue: 0,2:22:55.30,2:23:05.38,chinese,,0,0,0,,现在输入 1、3，希望现在能看到代码输出 0.333333。
Dialogue: 0,2:23:05.38,2:23:11.71,english,,0,0,0,,And I think if we kept showing more numbers after the decimal point, we'd theoretically see as many of those threes as we want.
Dialogue: 0,2:23:05.38,2:23:11.71,chinese,,0,0,0,,我觉得，如果我们继续显示小数点后面的更多数字，理论上应该看到的全是 3。
Dialogue: 0,2:23:11.71,2:23:13.90,english,,0,0,0,,But there is still one more catch.
Dialogue: 0,2:23:11.71,2:23:13.90,chinese,,0,0,0,,但还有一个问题。
Dialogue: 0,2:23:13.90,2:23:27.10,english,,0,0,0,,And especially when we're manipulating numbers in this way in a computer using a finite amount of memory, another challenge we might run up against-- besides integer overflow, besides truncation-- is this known as floating-point imprecision.
Dialogue: 0,2:23:13.90,2:23:27.10,chinese,,0,0,0,,特别是当我们在计算机中，使用有限的内存来进行这样的数字操作时，\N除了整数溢出、截断以外，还可能会遇到另一个问题，叫做浮点数不精确性。
Dialogue: 0,2:23:27.10,2:23:34.06,english,,0,0,0,,Just as we can't represent as big of an integer as we want using int or long alone because there is going to be an upper bound,
Dialogue: 0,2:23:27.10,2:23:34.06,chinese,,0,0,0,,就像我们不能使用 int 或 long 表示我们想要的大整数一样，因为会有一个上限，
Dialogue: 0,2:23:34.06,2:23:39.22,english,,0,0,0,,there's similarly going to be a bound on just how precise our numbers can be.
Dialogue: 0,2:23:34.06,2:23:39.22,chinese,,0,0,0,,同样地，我们的浮点数精确度也会受到限制。
Dialogue: 0,2:23:39.22,2:23:41.56,english,,0,0,0,,And indeed, let's go back to VS Code here.
Dialogue: 0,2:23:39.22,2:23:41.56,chinese,,0,0,0,,让我们切回 VS Code。
Dialogue: 0,2:23:41.56,2:23:43.43,english,,0,0,0,,I'll clear my terminal window yet again.
Dialogue: 0,2:23:41.56,2:23:43.43,chinese,,0,0,0,,再次清空终端窗口。
Dialogue: 0,2:23:43.43,2:23:52.25,english,,0,0,0,,And this time, let me use some slightly unlikely syntax to specify that I don't want to see the default number of numbers after the decimal point, which %f gives us automatically.
Dialogue: 0,2:23:43.43,2:23:52.25,chinese,,0,0,0,,这次，我将使用一些稍微有点奇怪的语法，\N来指定我想要在小数点后显示的位数，而不是用 %f 默认显示的位数。
Dialogue: 0,2:23:52.25,2:23:57.52,english,,0,0,0,,Let's go ahead and show me 20 decimal point numbers after the decimal point.
Dialogue: 0,2:23:52.25,2:23:57.52,chinese,,0,0,0,,这样就可以显示小数点后面的 20 位。
Dialogue: 0,2:23:57.52,2:24:08.44,english,,0,0,0,,And the weird syntax for this is to do not %f, but %.20 to indicate to see that I want to see 20 digits, not the default after, now, the decimal point.
Dialogue: 0,2:23:57.52,2:24:08.44,chinese,,0,0,0,,奇怪的地方不在 %f，而是 %.20，这样表示我想要看到小数点后 20 位，而不是默认的 6 位。
Dialogue: 0,2:24:08.44,2:24:10.39,english,,0,0,0,,Let me rerun make calculator.
Dialogue: 0,2:24:08.44,2:24:10.39,chinese,,0,0,0,,编译一下。
Dialogue: 0,2:24:10.39,2:24:12.55,english,,0,0,0,,Let me do ./calculator again.
Dialogue: 0,2:24:10.39,2:24:12.55,chinese,,0,0,0,,重新运行。
Dialogue: 0,2:24:12.55,2:24:14.89,english,,0,0,0,,And let's do 1, let's do 3.
Dialogue: 0,2:24:12.55,2:24:14.89,chinese,,0,0,0,,先输入 1，再输入 3。
Dialogue: 0,2:24:14.89,2:24:17.56,english,,0,0,0,,And now this is even weirder, right?
Dialogue: 0,2:24:14.89,2:24:17.56,chinese,,0,0,0,,现在这更奇怪了，对吧？
Dialogue: 0,2:24:17.56,2:24:21.58,english,,0,0,0,,From grade school, you presumably learned that 1 divided by 3 is, of course, 1/3.
Dialogue: 0,2:24:17.56,2:24:21.58,chinese,,0,0,0,,你可能从小学开始就学到，1 除以 3 当然是 1/3。
Dialogue: 0,2:24:21.58,2:24:28.18,english,,0,0,0,,But that should be 0.33333, infinitely many times, or, on paper, with a little line over it.
Dialogue: 0,2:24:21.58,2:24:28.18,chinese,,0,0,0,,但这应该是 0.33333，无限多个 3。
Dialogue: 0,2:24:28.18,2:24:31.66,english,,0,0,0,,But the computer is doing some weird approximation here.
Dialogue: 0,2:24:28.18,2:24:31.66,chinese,,0,0,0,,但是计算机在这里进行了一些奇怪的近似计算。
Dialogue: 0,2:24:31.66,2:24:37.48,english,,0,0,0,,It's a whole bunch of 3's and then 4326744079590.
Dialogue: 0,2:24:31.66,2:24:37.48,chinese,,0,0,0,,有一大堆的 3，然后是 4326744079590。
Dialogue: 0,2:24:37.48,2:24:42.10,english,,0,0,0,,Well, what's really happening under the hood, well, again, is this issue of floating-point imprecision.
Dialogue: 0,2:24:37.48,2:24:42.10,chinese,,0,0,0,,那么在幕后到底发生了什么？是的，再次发生了浮点数不精确性的问题。
Dialogue: 0,2:24:42.10,2:24:52.30,english,,0,0,0,,If you only have a finite number of bits and, in turn, a finite amount of memory, the computer can really only be so precise intuitively.
Dialogue: 0,2:24:42.10,2:24:52.30,chinese,,0,0,0,,在有限的内存，有限数量的比特位下，计算机只能精确到这个程度。
Dialogue: 0,2:24:52.30,2:24:57.19,english,,0,0,0,,Equivalently, the computer is decided on some way of representing floating-point values.
Dialogue: 0,2:24:52.30,2:24:57.19,chinese,,0,0,0,,换句话说，计算机已经决定了一种表示浮点数的方式。
Dialogue: 0,2:24:57.19,2:25:07.04,english,,0,0,0,,But the catch is, per grade school math, there's an infinite number of numbers out there and an infinite number of floating-point values because you can keep adding more and more digits if you want.
Dialogue: 0,2:24:57.19,2:25:07.04,chinese,,0,0,0,,但问题是，根据小学数学，存在无限多个数字和无限多个浮点数，因为你可以继续添加更多位。
Dialogue: 0,2:25:07.04,2:25:14.50,english,,0,0,0,,So the computer, given the way it's implementing these floating point values, is essentially giving us the closest approximation that it can.
Dialogue: 0,2:25:07.04,2:25:14.50,chinese,,0,0,0,,因此，计算机中实现存储这些浮点数值的方式，实际上是给我们提供它尽可能的最接近的近似值。
Dialogue: 0,2:25:14.50,2:25:17.74,english,,0,0,0,,Now, how can we go about improving the situation?
Dialogue: 0,2:25:14.50,2:25:17.74,chinese,,0,0,0,,那么，我们如何改进这种情况呢？
Dialogue: 0,2:25:17.74,2:25:19.18,english,,0,0,0,,Well, there is one alternative.
Dialogue: 0,2:25:17.74,2:25:19.18,chinese,,0,0,0,,有一种替代方法。
Dialogue: 0,2:25:19.18,2:25:24.76,english,,0,0,0,,Instead of using float, I can use something called a double, which, as the name suggests, uses twice as many bits as a float.
Dialogue: 0,2:25:19.18,2:25:24.76,chinese,,0,0,0,,我们可以使用一个叫做 double 的类型，顾名思义，它使用的位数是 float 的两倍。
Dialogue: 0,2:25:24.76,2:25:27.82,english,,0,0,0,,So instead of 32 typically, it will use 64.
Dialogue: 0,2:25:24.76,2:25:27.82,chinese,,0,0,0,,所以，它通常不是 32 位，而是 64 位。
Dialogue: 0,2:25:27.82,2:25:31.57,english,,0,0,0,,And that's just like the difference between a long and an int, which gave us more bits.
Dialogue: 0,2:25:27.82,2:25:31.57,chinese,,0,0,0,,就像 long 和 int 之间的区别一样，它们提供了更多的比特位来存储。
Dialogue: 0,2:25:31.57,2:25:34.48,english,,0,0,0,,But in this case, this will be used for more precision.
Dialogue: 0,2:25:31.57,2:25:34.48,chinese,,0,0,0,,所以说，double 能够提供更高的精度。
Dialogue: 0,2:25:34.48,2:25:36.85,english,,0,0,0,,Let's go ahead and cast x to a double.
Dialogue: 0,2:25:34.48,2:25:36.85,chinese,,0,0,0,,让我们把 x 的值转为 double。
Dialogue: 0,2:25:36.85,2:25:38.74,english,,0,0,0,,Let's cast y to a double.
Dialogue: 0,2:25:36.85,2:25:38.74,chinese,,0,0,0,,y 的值也转为 double。
Dialogue: 0,2:25:38.74,2:25:45.22,english,,0,0,0,,And now let's go ahead and, using the same format code-- %.20f is still OK for doubles.
Dialogue: 0,2:25:38.74,2:25:45.22,chinese,,0,0,0,,然后，还是用刚才的格式代码 %.20f，double 也可以用。
Dialogue: 0,2:25:45.22,2:25:46.99,english,,0,0,0,,Let me do make calculator.
Dialogue: 0,2:25:45.22,2:25:46.99,chinese,,0,0,0,,来编译一下。
Dialogue: 0,2:25:46.99,2:25:48.97,english,,0,0,0,,Let me do ./calculator.
Dialogue: 0,2:25:46.99,2:25:48.97,chinese,,0,0,0,,执行。
Dialogue: 0,2:25:48.97,2:25:51.46,english,,0,0,0,,And now let me do 1 divided by 3.
Dialogue: 0,2:25:48.97,2:25:51.46,chinese,,0,0,0,,现在我要做 1 除以 3。
Dialogue: 0,2:25:51.46,2:25:53.77,english,,0,0,0,,And we still have some of that imprecision.
Dialogue: 0,2:25:51.46,2:25:53.77,chinese,,0,0,0,,仍然有一些不精确的地方。
Dialogue: 0,2:25:53.77,2:25:56.59,english,,0,0,0,,And it's even more of it if we looked at more than just 20 digits.
Dialogue: 0,2:25:53.77,2:25:56.59,chinese,,0,0,0,,如果我们查看超过 20 位数字，它的不精确性会更加明显。
Dialogue: 0,2:25:56.59,2:25:59.90,english,,0,0,0,,But now we have more threes after the decimal point.
Dialogue: 0,2:25:56.59,2:25:59.90,chinese,,0,0,0,,但是现在小数点后有更多的数字 3。
Dialogue: 0,2:25:59.90,2:26:03.64,english,,0,0,0,,So it's at least more, and more, and more precise, but it's not perfect.
Dialogue: 0,2:25:59.90,2:26:03.64,chinese,,0,0,0,,至少它更加精确了，尽管不是完美的。
Dialogue: 0,2:26:03.64,2:26:06.52,english,,0,0,0,,But it's at least more precise.
Dialogue: 0,2:26:03.64,2:26:06.52,chinese,,0,0,0,,至少好了那么一些。
Dialogue: 0,2:26:06.52,2:26:14.98,english,,0,0,0,,So these kinds of issues, then, are going to be necessary to keep in mind any time you do something numerically, scientifically, at least with a language C where you're going to bump up
Dialogue: 0,2:26:06.52,2:26:14.98,chinese,,0,0,0,,因此，这些问题在你进行数值计算、科学计算时，至少在使用 C 这种语言时，是必须牢记的，
Dialogue: 0,2:26:14.98,2:26:18.91,english,,0,0,0,,against these real-world limitations of hardware and, in turn, language.
Dialogue: 0,2:26:14.98,2:26:18.91,chinese,,0,0,0,,因为有现实世界的硬件限制，反过来又限制了语言。
Dialogue: 0,2:26:18.91,2:26:21.95,english,,0,0,0,,Now, later in the semester, we'll transition to a language called Python.
Dialogue: 0,2:26:18.91,2:26:21.95,chinese,,0,0,0,,在本学期晚些时候，我们将过渡到一种叫做 Python 的语言。
Dialogue: 0,2:26:21.95,2:26:29.47,english,,0,0,0,,And that's actually going to solve at least one of these problems for us by just automatically giving us more bits, so to speak, as we need them, at least for integers.
Dialogue: 0,2:26:21.95,2:26:29.47,chinese,,0,0,0,,实际上，Python 将至少为我们解决这些问题（整型的溢出、截断；浮点型的不精确性）里的一个，\N它会根据需要自动为我们提供更多的比特位，至少对于整数来说可以。
Dialogue: 0,2:26:29.47,2:26:33.14,english,,0,0,0,,But even the issue of floating-point imprecision is going to remain.
Dialogue: 0,2:26:29.47,2:26:33.14,chinese,,0,0,0,,但是浮点数不精确的问题仍然会存在。
Dialogue: 0,2:26:33.14,2:26:35.17,english,,0,0,0,,Now, just how real-world are these issues?
Dialogue: 0,2:26:33.14,2:26:35.17,chinese,,0,0,0,,这些问题有多现实呢？
Dialogue: 0,2:26:35.17,2:26:48.91,english,,0,0,0,,Well, back in the year 1999, we got a taste of this when the world realized in the years leading up to that date that it might not have been the best idea to implement computers and software therein by storing years using just two digits.
Dialogue: 0,2:26:35.17,2:26:48.91,chinese,,0,0,0,,1999 年的前几年，很多程序员意识到，只用两位数字来存储年份是个坏主意。\N早在那个时候，我们就在这个问题上吃亏了。
Dialogue: 0,2:26:48.91,2:27:01.40,english,,0,0,0,,Like, instead of storing 1999 to represent the year 1999, a lot of computers, for reasons of space and cost, were in the habit of cutting a corner and just using two digits to keep track of the year.
Dialogue: 0,2:26:48.91,2:27:01.40,chinese,,0,0,0,,例如，为了节省空间和成本，\N许多计算机在存储年份时只使用两位数字，而不是使用 1999 来表示 1999 年。
Dialogue: 0,2:27:01.40,2:27:16.99,english,,0,0,0,,The problem with that is that if systems were not updated by the year 1999 to support the year 2000, 2001, and so forth, is that, just like before with integer overflow, some computers might add 1 to the year in their memory, 99.
Dialogue: 0,2:27:01.40,2:27:16.99,chinese,,0,0,0,,问题就是，如果在 1999 年之前没有更新系统，以支持 2000 年、2001 年等，\N那么就会出现问题，就像之前的整数溢出一样，某些计算机可能会将存储的年份 99 加 1。
Dialogue: 0,2:27:16.99,2:27:30.74,english,,0,0,0,,It should be the year 2000, but if they're only using two digits to represent years, they might mistake the year-- as some systems may very well have-- for the year 1900 instead, taking literally a big step backwards, if you will.
Dialogue: 0,2:27:16.99,2:27:30.74,chinese,,0,0,0,,本应是 2000 年，但如果他们只用两位数表示年份，\N从字面上就会误认为是 1900 年，有些系统很可能就是这样，导致时间倒退了一大步。
Dialogue: 0,2:27:30.74,2:27:37.24,english,,0,0,0,,Now, you'd like to think that kind of issue is behind us, especially as we understand all the more about the limitations of code and computing.
Dialogue: 0,2:27:30.74,2:27:37.24,chinese,,0,0,0,,现在，你可能认为这种问题已经不复存在了，尤其是在我们对代码和计算的限制有了更多了解的情况下。
Dialogue: 0,2:27:37.24,2:27:42.16,english,,0,0,0,,But we're actually going to run up against this very same type of issue again in just a few years.
Dialogue: 0,2:27:37.24,2:27:42.16,chinese,,0,0,0,,但实际上，我们很快就会再次遇到类似的问题。
Dialogue: 0,2:27:42.16,2:27:50.80,english,,0,0,0,,On January 19 in the year 2038, we will have run out of bits in most computers right now to keep track of time.
Dialogue: 0,2:27:42.16,2:27:50.80,chinese,,0,0,0,,在 2038 年 1 月 19 日，有些计算机存储时间的比特位将用尽，无法继续跟踪时间。
Dialogue: 0,2:27:50.80,2:27:58.87,english,,0,0,0,,It turns out, years ago, humans decided to use a 32-bit integer to keep track of how many seconds had elapsed over time.
Dialogue: 0,2:27:50.80,2:27:58.87,chinese,,0,0,0,,原来，多年前，人类决定使用 32 位整数来跟踪随时间流逝的秒数。
Dialogue: 0,2:27:58.87,2:28:01.09,english,,0,0,0,,They chose a somewhat arbitrary date in the past--
Dialogue: 0,2:27:58.87,2:28:01.09,chinese,,0,0,0,,他们在过去选择了一个有点随意的日期——
Dialogue: 0,2:28:01.09,2:28:03.35,english,,0,0,0,,January 1, 1970--
Dialogue: 0,2:28:01.09,2:28:03.35,chinese,,0,0,0,,1970 年 1 月 1 日。
Dialogue: 0,2:28:03.35,2:28:06.86,english,,0,0,0,,And they just started counting seconds from there on out.
Dialogue: 0,2:28:03.35,2:28:06.86,chinese,,0,0,0,,然后从那时起开始计算秒数。
Dialogue: 0,2:28:06.86,2:28:14.71,english,,0,0,0,,And so if a computer stores some number of seconds, that tells the computer how many seconds have passed since that particular date, January 1, 1970.
Dialogue: 0,2:28:06.86,2:28:14.71,chinese,,0,0,0,,因此，计算机中存储的时间，\N实际上是从 1970 年 1 月 1 日这个特定日期开始已经过去了多少秒。
Dialogue: 0,2:28:14.71,2:28:23.47,english,,0,0,0,,Unfortunately, using a 32-bit integer, as we've seen, you can only count so high, at which point, you overflow the size of that variable.
Dialogue: 0,2:28:14.71,2:28:23.47,chinese,,0,0,0,,不幸的是，使用 32 位整数，就像我们刚才看到的，\N只能计数到一定程度，就会超过变量的大小限制。
Dialogue: 0,2:28:23.47,2:28:32.08,english,,0,0,0,,And so potentially, if we don't get ahead of this as humans, as a society, as computer scientists, on the date January 19, 2038,
Dialogue: 0,2:28:23.47,2:28:32.08,chinese,,0,0,0,,因此，如果我们不在人类、社会、计算机科学家层面上提前解决这个问题，
Dialogue: 0,2:28:32.08,2:28:42.46,english,,0,0,0,,that bit might flip over, thereby overflowing the size of those integers, bringing us back computationally to December 13, 1901.
Dialogue: 0,2:28:32.08,2:28:42.46,chinese,,0,0,0,,到 2038 年 1 月 19 日，那些比特位就会溢出 int 的大小，翻转到全 0，\N从而把从这个值计算得到的时间，带回到 1901 年 12 月 13 日。
Dialogue: 0,2:28:42.46,2:28:48.56,english,,0,0,0,,So this is to say now, with all of this computational ability and code comes a responsibility to actually write correct code.
Dialogue: 0,2:28:42.46,2:28:48.56,chinese,,0,0,0,,而现在，我们学到了这些计算规则和代码语法，我们就有责任编写出正确的代码。
Dialogue: 0,2:28:48.56,2:28:50.56,english,,0,0,0,,Next week, we'll peel back some of these layers.
Dialogue: 0,2:28:48.56,2:28:50.56,chinese,,0,0,0,,下周，我们将深入探讨其中的一些方面。
Dialogue: 0,2:28:50.56,2:28:54.55,english,,0,0,0,,But for now, this was week 1, and best of luck on problem set 1.
Dialogue: 0,2:28:50.56,2:28:54.55,chinese,,0,0,0,,到现在为止，就是第一周的内容，祝你在解决问题集 1 上好运。
Dialogue: 0,2:28:50.56,2:28:54.55,annotation,,0,0,0,,*碎碎念：这次信息量真的很大，大家看完辛苦啦！记得去完成 problem set 1 和 lab 1 哦~
Dialogue: 0,2:28:54.55,2:28:57.85,english,,0,0,0,,[APPLAUSE]
Dialogue: 0,2:28:57.85,2:29:01.50,english,,0,0,0,,[MUSIC PLAYING]
